{"version":3,"mappings":"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","names":["linear","ctx","create_if_block"],"sources":["../../../../../../src/lib/frontend/utils.ts","../../../../../../node_modules/svelte/transition/index.mjs","../../../../../../src/lib/frontend/Clipboard.svelte","../../../../../../src/lib/frontend/ListKeys.svelte","../../../../../../src/lib/frontend/GetKeys.svelte"],"sourcesContent":["// Pre-Init\r\nconst LUT_HEX_4b = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'A', 'B', 'C', 'D', 'E', 'F'];\r\nconst LUT_HEX_8b = new Array(0x100);\r\nfor (let n = 0; n < 0x100; n++) {\r\n\tLUT_HEX_8b[n] = `${LUT_HEX_4b[(n >>> 4) & 0xf]}${LUT_HEX_4b[n & 0xf]}`;\r\n}\r\n\r\n// End Pre-Init\r\nexport function bufftoHex(buffer) {\r\n\tlet out = '';\r\n\tfor (let idx = 0, edx = buffer.length; idx < edx; idx++) {\r\n\t\tout += LUT_HEX_8b[buffer[idx]];\r\n\t}\r\n\treturn out;\r\n}\r\n\r\nexport const shorten = (key: string, start = 6, end = 6) => {\r\n\tif (key.length < start + end + 3) return key;\r\n\treturn key.slice(0, start) + '...' + key.slice(key.length - end, key.length);\r\n};\r\n\r\nexport const shortenURL = (key: string) => {\r\n\tconst tail = 30;\r\n\tconst start = 'https://'.length; // key.slice(start, Math.min(start, 8)) +\r\n\tconst end = Math.max(key.length - tail, 0);\r\n\tconst maybeEllips = key.length > tail ? '..' : '';\r\n\treturn maybeEllips + key.slice(end, key.length);\r\n};\r\n","import { cubicInOut, linear, cubicOut } from '../easing/index.mjs';\nimport { is_function, assign } from '../internal/index.mjs';\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n\r\nfunction __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\n\nfunction blur(node, { delay = 0, duration = 400, easing = cubicInOut, amount = 5, opacity = 0 } = {}) {\n    const style = getComputedStyle(node);\n    const target_opacity = +style.opacity;\n    const f = style.filter === 'none' ? '' : style.filter;\n    const od = target_opacity * (1 - opacity);\n    return {\n        delay,\n        duration,\n        easing,\n        css: (_t, u) => `opacity: ${target_opacity - (od * u)}; filter: ${f} blur(${u * amount}px);`\n    };\n}\nfunction fade(node, { delay = 0, duration = 400, easing = linear } = {}) {\n    const o = +getComputedStyle(node).opacity;\n    return {\n        delay,\n        duration,\n        easing,\n        css: t => `opacity: ${t * o}`\n    };\n}\nfunction fly(node, { delay = 0, duration = 400, easing = cubicOut, x = 0, y = 0, opacity = 0 } = {}) {\n    const style = getComputedStyle(node);\n    const target_opacity = +style.opacity;\n    const transform = style.transform === 'none' ? '' : style.transform;\n    const od = target_opacity * (1 - opacity);\n    return {\n        delay,\n        duration,\n        easing,\n        css: (t, u) => `\n\t\t\ttransform: ${transform} translate(${(1 - t) * x}px, ${(1 - t) * y}px);\n\t\t\topacity: ${target_opacity - (od * u)}`\n    };\n}\nfunction slide(node, { delay = 0, duration = 400, easing = cubicOut } = {}) {\n    const style = getComputedStyle(node);\n    const opacity = +style.opacity;\n    const height = parseFloat(style.height);\n    const padding_top = parseFloat(style.paddingTop);\n    const padding_bottom = parseFloat(style.paddingBottom);\n    const margin_top = parseFloat(style.marginTop);\n    const margin_bottom = parseFloat(style.marginBottom);\n    const border_top_width = parseFloat(style.borderTopWidth);\n    const border_bottom_width = parseFloat(style.borderBottomWidth);\n    return {\n        delay,\n        duration,\n        easing,\n        css: t => 'overflow: hidden;' +\n            `opacity: ${Math.min(t * 20, 1) * opacity};` +\n            `height: ${t * height}px;` +\n            `padding-top: ${t * padding_top}px;` +\n            `padding-bottom: ${t * padding_bottom}px;` +\n            `margin-top: ${t * margin_top}px;` +\n            `margin-bottom: ${t * margin_bottom}px;` +\n            `border-top-width: ${t * border_top_width}px;` +\n            `border-bottom-width: ${t * border_bottom_width}px;`\n    };\n}\nfunction scale(node, { delay = 0, duration = 400, easing = cubicOut, start = 0, opacity = 0 } = {}) {\n    const style = getComputedStyle(node);\n    const target_opacity = +style.opacity;\n    const transform = style.transform === 'none' ? '' : style.transform;\n    const sd = 1 - start;\n    const od = target_opacity * (1 - opacity);\n    return {\n        delay,\n        duration,\n        easing,\n        css: (_t, u) => `\n\t\t\ttransform: ${transform} scale(${1 - (sd * u)});\n\t\t\topacity: ${target_opacity - (od * u)}\n\t\t`\n    };\n}\nfunction draw(node, { delay = 0, speed, duration, easing = cubicInOut } = {}) {\n    let len = node.getTotalLength();\n    const style = getComputedStyle(node);\n    if (style.strokeLinecap !== 'butt') {\n        len += parseInt(style.strokeWidth);\n    }\n    if (duration === undefined) {\n        if (speed === undefined) {\n            duration = 800;\n        }\n        else {\n            duration = len / speed;\n        }\n    }\n    else if (typeof duration === 'function') {\n        duration = duration(len);\n    }\n    return {\n        delay,\n        duration,\n        easing,\n        css: (t, u) => `stroke-dasharray: ${t * len} ${u * len}`\n    };\n}\nfunction crossfade(_a) {\n    var { fallback } = _a, defaults = __rest(_a, [\"fallback\"]);\n    const to_receive = new Map();\n    const to_send = new Map();\n    function crossfade(from, node, params) {\n        const { delay = 0, duration = d => Math.sqrt(d) * 30, easing = cubicOut } = assign(assign({}, defaults), params);\n        const to = node.getBoundingClientRect();\n        const dx = from.left - to.left;\n        const dy = from.top - to.top;\n        const dw = from.width / to.width;\n        const dh = from.height / to.height;\n        const d = Math.sqrt(dx * dx + dy * dy);\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        const opacity = +style.opacity;\n        return {\n            delay,\n            duration: is_function(duration) ? duration(d) : duration,\n            easing,\n            css: (t, u) => `\n\t\t\t\topacity: ${t * opacity};\n\t\t\t\ttransform-origin: top left;\n\t\t\t\ttransform: ${transform} translate(${u * dx}px,${u * dy}px) scale(${t + (1 - t) * dw}, ${t + (1 - t) * dh});\n\t\t\t`\n        };\n    }\n    function transition(items, counterparts, intro) {\n        return (node, params) => {\n            items.set(params.key, {\n                rect: node.getBoundingClientRect()\n            });\n            return () => {\n                if (counterparts.has(params.key)) {\n                    const { rect } = counterparts.get(params.key);\n                    counterparts.delete(params.key);\n                    return crossfade(rect, node, params);\n                }\n                // if the node is disappearing altogether\n                // (i.e. wasn't claimed by the other list)\n                // then we need to supply an outro\n                items.delete(params.key);\n                return fallback && fallback(node, params, intro);\n            };\n        };\n    }\n    return [\n        transition(to_send, to_receive, false),\n        transition(to_receive, to_send, true)\n    ];\n}\n\nexport { blur, crossfade, draw, fade, fly, scale, slide };\n","<script>\r\n\t// @ts-nocheck\r\n\timport { fade } from 'svelte/transition';\r\n\r\n\texport let value = null;\r\n\r\n\tlet clip;\r\n\tlet copied;\r\n\tlet duration = 2000;\r\n\r\n\tasync function copy() {\r\n\t\tvar promise = navigator.clipboard.writeText(clip.innerHTML);\r\n\t\tawait promise;\r\n\t\tvalue = promise;\r\n\t\tcopied = true;\r\n\t\tsetTimeout(() => (copied = false), 1);\r\n\t}\r\n</script>\r\n\r\n<!-- Clipboard  -->\r\n<div class=\"Clipboard-Container\" on:click={copy}>\r\n\t{#if copied}\r\n\t\t<div out:fade={{ duration }}>✔️Copied</div>\r\n\t{:else}\r\n\t\t<div in:fade={{ duration: 0, delay: duration }}>\r\n\t\t\t<svg\r\n\t\t\t\ton:click={copy}\r\n\t\t\t\tclass=\"octicon octicon-clippy\"\r\n\t\t\t\tviewBox=\"0 0 14 16\"\r\n\t\t\t\tversion=\"1.1\"\r\n\t\t\t\twidth=\"14\"\r\n\t\t\t\theight=\"16\"\r\n\t\t\t\taria-hidden=\"true\"\r\n\t\t\t\tstroke=\"currentColor\"\r\n\t\t\t>\r\n\t\t\t\t<title>Copy to clipboard</title>\r\n\t\t\t\t<path\r\n\t\t\t\t\tfill-rule=\"evenodd\"\r\n\t\t\t\t\td=\"M2 13h4v1H2v-1zm5-6H2v1h5V7zm2 3V8l-3 3 3 3v-2h5v-2H9zM4.5 9H2v1h2.5V9zM2 12h2.5v-1H2v1zm9 1h1v2c-.02.28-.11.52-.3.7-.19.18-.42.28-.7.3H1c-.55 0-1-.45-1-1V4c0-.55.45-1 1-1h3c0-1.11.89-2 2-2 1.11 0 2 .89 2 2h3c.55 0 1 .45 1 1v5h-1V6H1v9h10v-2zM2 5h8c0-.55-.45-1-1-1H8c-.55 0-1-.45-1-1s-.45-1-1-1-1 .45-1 1-.45 1-1 1H3c-.55 0-1 .45-1 1z\"\r\n\t\t\t\t/>\r\n\t\t\t</svg>\r\n\t\t</div>\r\n\t{/if}\r\n\t<div class=\"Clipboard\" bind:this={clip}>\r\n\t\t<slot {copy} />\r\n\t</div>\r\n</div>\r\n\r\n<style>\r\n\t.Clipboard {\r\n\t\tmargin: 0 0.5em;\r\n\t\tword-break: break-all;\r\n\t}\r\n\t.Clipboard-Container {\r\n\t\tdisplay: flex;\r\n\t}\r\n\t.Clipboard-Container,\r\n\tsvg {\r\n\t\tcursor: pointer;\r\n\t}\r\n\tsvg {\r\n\t\tcursor: pointer;\r\n\t\tbackground-color: transparent;\r\n\t\tfill: transparent;\r\n\t\twidth: auto;\r\n\t\theight: 1.5em;\r\n\t}\r\n</style>\r\n","<script>\r\n\t// @ts-nocheck\r\n\r\n\t// show the user's keys\r\n\t// parse out the JWKs into types: RSA and Ed25519 according to JWK\r\n\timport { shorten, bufftoHex } from './utils';\r\n\timport Clipboard from './Clipboard.svelte';\r\n\timport EncodingSelector from './components/atomic/EncodingSelector.svelte';\r\n\r\n\texport let keys;\r\n\r\n\tlet selectedRSA;\r\n\tlet collapsed;\r\n</script>\r\n\r\n{#if keys && keys.length > 0}\r\n\t<div class=\"card text-toxic shadow-md shadow-toxic/50 rounded-lg p-4 m-4 w-auto bg-neutral-800\">\r\n\t\t{#if keys.filter((k) => k.publicKeyJWK.kty == 'RSA').length}\r\n\t\t\t<div class=\"keylist overflow-hidden\">\r\n\t\t\t\t<div class=\"row left\">\r\n\t\t\t\t\t<span>Arweave</span>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"row list-group\">\r\n\t\t\t\t\t{#each keys.filter((k) => k.publicKeyJWK.kty == 'RSA') as rsaJWK}\r\n\t\t\t\t\t\t<div class=\"flex flex-col\">\r\n\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\tclass=\"{collapsed && selectedRSA != rsaJWK.kid\r\n\t\t\t\t\t\t\t\t\t? 'hide'\r\n\t\t\t\t\t\t\t\t\t: ''} list-group-item list-group-item-action \"\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{rsaJWK.name}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div class=\"flex-1\">\r\n\t\t\t\t\t\t\t\tBase64URL: <Clipboard>{rsaJWK.publicKeyJWK.kid}</Clipboard>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t{/each}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t{/if}\r\n\t\t{#if keys.filter((k) => k.publicKeyJWK.crv == 'Ed25519')}\r\n\t\t\t<div class=\"keylist\">\r\n\t\t\t\t<div class=\"row left\">\r\n\t\t\t\t\t<span>Ed25519</span>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div class=\"row list-group\">\r\n\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t{#each keys.filter((k) => k.publicKeyJWK.crv == 'Ed25519') as edJWK}\r\n\t\t\t\t\t\t\t<EncodingSelector pubkey={new Uint8Array(edJWK.publicKey)} let:encoded>\r\n\t\t\t\t\t\t\t\t<Clipboard>{encoded}</Clipboard>\r\n\t\t\t\t\t\t\t</EncodingSelector>\r\n\t\t\t\t\t\t\t<!-- <li class=\" list-group-item list-group-item-action \">\r\n\t\t\t\t\t\t\t\t{shorten(edJWK.name)}\r\n\t\t\t\t\t\t\t\t<div class=\"full-pubKey\">\r\n\t\t\t\t\t\t\t\t\tBase64URL: <Clipboard>{edJWK.publicKeyJWK.x}</Clipboard>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div class=\"full-pubKey\">\r\n\t\t\t\t\t\t\t\t\tBase58: <Clipboard>{edJWK.publicKeyBase58}</Clipboard>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div class=\"full-pubKey\">\r\n\t\t\t\t\t\t\t\t\tHex: <Clipboard>{bufftoHex(edJWK.publicKey)}</Clipboard>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div class=\"full-pubKey\">\r\n\t\t\t\t\t\t\t\t\tBytes: <Clipboard>{edJWK.publicKey}</Clipboard>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</li> -->\r\n\t\t\t\t\t\t\t<!-- <b>{shorten(key?.publicKeyBase58)}</b><br /> -->\r\n\t\t\t\t\t\t{/each}\r\n\t\t\t\t\t</ul>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t{/if}\r\n\t</div>\r\n{/if}\r\n\r\n<style>\r\n\t.keylist {\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: row;\r\n\t\tflex-wrap: nowrap;\r\n\t\tjustify-content: flex-start;\r\n\t\talign-items: stretch;\r\n\t\talign-content: stretch;\r\n\t\tborder-bottom: 1px #d6e7df solid;\r\n\t\tpadding-bottom: 4px;\r\n\t\tmargin-bottom: 4px;\r\n\t}\r\n\t.left {\r\n\t\tflex-shrink: 2;\r\n\t\twidth: 85px;\r\n\t}\r\n\t.row,\r\n\tul {\r\n\t\tmargin: 0em;\r\n\t\tpadding: 0em;\r\n\t}\r\n\t.row:not(.left) {\r\n\t\tflex: 1 1 auto;\r\n\t\toverflow-y: auto;\r\n\t}\r\n\t.hide {\r\n\t\tdisplay: none;\r\n\t}\r\n</style>\r\n","<script lang=\"ts\">\r\n\t/**\r\n\tKeys can come from:\r\n\t- Loaded from storage (index.svelte, in which case this component is not needed)\r\n\t- Generated from scratch (here)\r\n\t- Load by user (here)\r\n\r\n\tkeys get saved to $storedValue which trigger the ImmortalDB saved\r\n\t*/\r\n\timport { onMount, createEventDispatcher } from 'svelte';\r\n\timport { storedValue } from './stores';\r\n\r\n\timport ListKeys from './ListKeys.svelte';\r\n\r\n\tconst dispatch = createEventDispatcher();\r\n\r\n\tlet handleGenerateKeypair:\r\n\t\t| ((event: MouseEvent & { currentTarget: EventTarget & HTMLButtonElement }) => void)\r\n\t\t| null = null;\r\n\r\n\t// state variables\r\n\tlet creating = '';\r\n\tlet keys: {\r\n\t\tname: string;\r\n\t\tpublicKey: string; // todo: to UInt8Array?\r\n\t\tpublicKeyJWK: {\r\n\t\t\tkty: string;\r\n\t\t\tkid: string;\r\n\t\t\te: string; //'AQAB'; //  value 65537, the octet sequence to be base64url-encoded MUST consist of the three octets [1, 0, 1]; the resulting representation for this value is \"AQAB\"\r\n\t\t\tn: string; // keyDetails.n;\r\n\t\t}; // already a JWK\r\n\t\tpublicKeyBase58: string; // address = base64URL encoded hash of jwk.n\r\n\t}[];\r\n\r\n\tlet generateMnemonic, generateRsaJwk, loadSecrets, getLoadedKeys;\r\n\r\n\tonMount(async () => {\r\n\t\t({ generateMnemonic, generateRsaJwk, loadSecrets, getLoadedKeys } = await import(\r\n\t\t\t'@peerpiper/iframe-wallet-sdk'\r\n\t\t));\r\n\t\thandleGenerateKeypair = async () => {\r\n\t\t\tcreating = 'Creating keypairs...';\r\n\r\n\t\t\tconst mnemonic = await generateMnemonic();\r\n\t\t\tconst rsajwk = await generateRsaJwk();\r\n\r\n\t\t\t// save to storedValue.\r\n\t\t\t// TODO: offer password protection/encryption?\r\n\t\t\t$storedValue = { ...$storedValue, mnemonic, rsajwk };\r\n\r\n\t\t\tcreating += '<br/>Created mnemonic.';\r\n\t\t\tcreating += `<br/>${mnemonic}`;\r\n\t\t\tcreating += '<br/>Creating master keypair (type ed25519)...';\r\n\t\t};\r\n\t});\r\n\r\n\t$: if (!!loadSecrets && !!getLoadedKeys && $storedValue && $storedValue.mnemonic) loadKeys(); // load keys once there is a storedValue\r\n\r\n\tasync function loadKeys() {\r\n\t\tawait loadSecrets({ mnemonic: $storedValue.mnemonic, rsajwk: $storedValue.rsajwk });\r\n\r\n\t\tdispatch('loadedKeys', 'details'); // let parent component know\r\n\t\tkeys = getLoadedKeys(); // get all proxcryptor public key info\r\n\t}\r\n</script>\r\n\r\n{#if handleGenerateKeypair}\r\n\t{#if ($storedValue != undefined && $storedValue == null) || !$storedValue?.mnemonic || !$storedValue?.rsajwk}\r\n\t\t<!-- Show \"Create Keys\" if no keys exist, no matter what page is showing -- toolbar? -->\r\n\t\t<div class=\"submit flex flex-col text-black bg-yellow-300 shadow p-8 m-4 rounded w-fit\">\r\n\t\t\t<button\r\n\t\t\t\tclass=\"bg-green-500 rounded shadow-lg shadow-slate-600/50 p-4 w-fit m-4 text-white\"\r\n\t\t\t\ton:click={handleGenerateKeypair}>Create New Keypairs</button\r\n\t\t\t>\r\n\t\t\t{@html creating}\r\n\t\t</div>\r\n\t{:else}\r\n\t\t<!-- GetKeys: has storedValue, sending to Connector if in Opened window. Else, allowing user to manage keys.<br /> -->\r\n\t\t<ListKeys {keys} />\r\n\t{/if}\r\n{/if}\r\n\r\n<style>\r\n\tdiv {\r\n\t\tpadding: 2em;\r\n\t}\r\n</style>\r\n"],"file":"_app/immutable/chunks/GetKeys-afd7b484.js"}