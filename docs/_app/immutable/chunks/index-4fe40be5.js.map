{"version":3,"mappings":"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","names":["ctx","width","linear","create_if_block","_a"],"sources":["../../../../../../src/lib/frontend/AutoSizer.svelte","../../../../../../src/lib/frontend/stores.js","../../../../../../src/lib/frontend/Connector.svelte","../../../../../../node_modules/svelte/transition/index.mjs","../../../../../../src/lib/frontend/Clipboard.svelte","../../../../../../src/lib/frontend/ListKeys.svelte","../../../../../../src/lib/frontend/GetKeys.svelte","../../../../../../src/lib/frontend/Opened.svelte","../../../../../../src/lib/frontend/Confirmer.svelte","../../../../../../src/lib/frontend/Index.svelte","../../../../../../src/lib/frontend/constants.js"],"sourcesContent":["<script>\r\n\t// @ts-nocheck\r\n\r\n\timport { onMount } from 'svelte';\r\n\r\n\tlet offsetHeight;\r\n\tlet offsetWidth;\r\n\r\n\tlet width;\r\n\r\n\tlet resolveConnector;\r\n\tlet Connection;\r\n\tlet connector;\r\n\t// = new Promise((resolve, reject) => {\r\n\t// \tresolveConnector = resolve;\r\n\t// });\r\n\r\n\tlet connectionReady;\r\n\tlet optionalHandlers = {\r\n\t\tsetWidth: (w) => (width = w)\r\n\t};\r\n\r\n\tonMount(async () => {\r\n\t\t({ Connection } = await import('@peerpiper/iframe-wallet-sdk'));\r\n\t\tconst connection = new Connection();\r\n\t\tconnector = await connection.init(optionalHandlers);\r\n\r\n\t\tconnectionReady = async () => {\r\n\t\t\tconnector.walletReady(); // signal to the connector the wallet has loaded\r\n\t\t};\r\n\t});\r\n\r\n\t$: connector && offsetHeight && setHeight(offsetHeight);\r\n\t$: connector && offsetWidth && setWidth(offsetWidth);\r\n\r\n\tfunction show() {\r\n\t\t// console.log(`Setting height ${height}`);\r\n\t\tconnector.show(); // works\r\n\t}\r\n\r\n\tfunction hide() {\r\n\t\t// console.log(`Setting height ${height}`);\r\n\t\tconnector.hide(); // works\r\n\t}\r\n\r\n\tfunction setHeight(height) {\r\n\t\t// console.log(`Setting height ${height}`);\r\n\t\tconnector.setIframeParentHeight(height); // works\r\n\t}\r\n\r\n\tfunction setWidth(width) {\r\n\t\t// console.log(`Setting width ${width}`);\r\n\t\tconnector.setIframeParentWidth(width); // works\r\n\t}\r\n</script>\r\n\r\n<div class=\"autosizer\" bind:offsetHeight bind:offsetWidth style=\"max-width: {width}px;\">\r\n\t{#if connectionReady}\r\n\t\t<slot {connectionReady} {show} {hide} />\r\n\t{/if}\r\n</div>\r\n\r\n<style>\r\n\t.autosizer {\r\n\t\tmargin: 0em;\r\n\t\t/* min-height: 100%;\r\n        height: 100%;\r\n\t\tdisplay: flex;\r\n\t\talign-items: center;\r\n\t\tjustify-content: center;\r\n\t\tflex-direction: column;\r\n\t\tflex-wrap: nowrap; */\r\n\t}\r\n</style>\r\n","import { derived, writable } from 'svelte/store';\r\n\r\nexport const keypairs = writable(new Map());\r\n\r\nexport const storedValue = writable();\r\n","<script>\r\n\t// @ts-nocheck\r\n\r\n\timport { onMount } from 'svelte';\r\n\timport { CONSTANTS } from '@peerpiper/iframe-wallet-sdk';\r\n\timport { storedValue } from './stores';\r\n\timport Button from './components/atomic/Button.svelte';\r\n\r\n\texport let mounted;\r\n\r\n\t// function names assigned only after component loads in DOM\r\n\tlet openTwinWindow;\r\n\tlet handleMessage;\r\n\r\n\t// state variables\r\n\tlet connecting;\r\n\tlet openedWindow;\r\n\r\n\tlet topUrl;\r\n\r\n\tonMount(async () => {\r\n\t\ttopUrl = self === top ? document.URL : document.referrer;\r\n\r\n\t\t// If 1) is NOT top AND 2) No keys are stored a new twin window must be opened so that the user can generate keys, in the top window\r\n\t\topenTwinWindow = () => {\r\n\t\t\tconnecting = true;\r\n\t\t\topenedWindow = window.open(window.location.href, '_blank'); // open the same domain to provide maximum security.\r\n\t\t};\r\n\r\n\t\thandleMessage = async (event) => {\r\n\t\t\tif (event.data == CONSTANTS.OPENED_SIGNAL) {\r\n\t\t\t\tevent.ports[0].postMessage(topUrl);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif (event.data.key == CONSTANTS.WINDOW_SYNC) {\r\n\t\t\t\t$storedValue = event.data.storedValue;\r\n\r\n\t\t\t\t// save mnemonic to localstorage\r\n\t\t\t\t// run: mnemonic to proxcryptor\r\n\t\t\t\t// send confirmation back to opened window (so it can close)\r\n\r\n\t\t\t\t// await importKeys(JSON.parse(event.data.data)); // import the keys here in this browser context\r\n\t\t\t\tevent.ports[0].postMessage('Imported'); // send ack back to Opened window so it can remove \"pending\" label for this window\r\n\t\t\t\tconnecting = false;\r\n\t\t\t\topenedWindow.close();\r\n\t\t\t\twindow.focus(); // fails tho\r\n\t\t\t}\r\n\r\n\t\t\t// Main page closed, state is no longer trying to connect\r\n\t\t\tif (event.data == CONSTANTS.CLOSING) {\r\n\t\t\t\tconnecting = false;\r\n\t\t\t}\r\n\t\t};\r\n\t});\r\n</script>\r\n\r\n<svelte:window on:message={handleMessage} />\r\n\r\n<div class=\"connector flex flex-col min-h-full items-center justify-center flex-nowrap\">\r\n\t{#if mounted}\r\n\t\t{#if $storedValue}\r\n\t\t\t<slot />\r\n\t\t{:else}\r\n\t\t\t<div>\r\n\t\t\t\t<Button type={connecting ? 'Connecting' : ''} clickHandler={openTwinWindow}\r\n\t\t\t\t\t>{connecting ? 'Connecting' : 'Connect'}</Button\r\n\t\t\t\t>\r\n\t\t\t</div>\r\n\t\t{/if}\r\n\t{/if}\r\n</div>\r\n","import { cubicInOut, linear, cubicOut } from '../easing/index.mjs';\nimport { is_function, assign } from '../internal/index.mjs';\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n\r\nfunction __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\n\nfunction blur(node, { delay = 0, duration = 400, easing = cubicInOut, amount = 5, opacity = 0 } = {}) {\n    const style = getComputedStyle(node);\n    const target_opacity = +style.opacity;\n    const f = style.filter === 'none' ? '' : style.filter;\n    const od = target_opacity * (1 - opacity);\n    return {\n        delay,\n        duration,\n        easing,\n        css: (_t, u) => `opacity: ${target_opacity - (od * u)}; filter: ${f} blur(${u * amount}px);`\n    };\n}\nfunction fade(node, { delay = 0, duration = 400, easing = linear } = {}) {\n    const o = +getComputedStyle(node).opacity;\n    return {\n        delay,\n        duration,\n        easing,\n        css: t => `opacity: ${t * o}`\n    };\n}\nfunction fly(node, { delay = 0, duration = 400, easing = cubicOut, x = 0, y = 0, opacity = 0 } = {}) {\n    const style = getComputedStyle(node);\n    const target_opacity = +style.opacity;\n    const transform = style.transform === 'none' ? '' : style.transform;\n    const od = target_opacity * (1 - opacity);\n    return {\n        delay,\n        duration,\n        easing,\n        css: (t, u) => `\n\t\t\ttransform: ${transform} translate(${(1 - t) * x}px, ${(1 - t) * y}px);\n\t\t\topacity: ${target_opacity - (od * u)}`\n    };\n}\nfunction slide(node, { delay = 0, duration = 400, easing = cubicOut } = {}) {\n    const style = getComputedStyle(node);\n    const opacity = +style.opacity;\n    const height = parseFloat(style.height);\n    const padding_top = parseFloat(style.paddingTop);\n    const padding_bottom = parseFloat(style.paddingBottom);\n    const margin_top = parseFloat(style.marginTop);\n    const margin_bottom = parseFloat(style.marginBottom);\n    const border_top_width = parseFloat(style.borderTopWidth);\n    const border_bottom_width = parseFloat(style.borderBottomWidth);\n    return {\n        delay,\n        duration,\n        easing,\n        css: t => 'overflow: hidden;' +\n            `opacity: ${Math.min(t * 20, 1) * opacity};` +\n            `height: ${t * height}px;` +\n            `padding-top: ${t * padding_top}px;` +\n            `padding-bottom: ${t * padding_bottom}px;` +\n            `margin-top: ${t * margin_top}px;` +\n            `margin-bottom: ${t * margin_bottom}px;` +\n            `border-top-width: ${t * border_top_width}px;` +\n            `border-bottom-width: ${t * border_bottom_width}px;`\n    };\n}\nfunction scale(node, { delay = 0, duration = 400, easing = cubicOut, start = 0, opacity = 0 } = {}) {\n    const style = getComputedStyle(node);\n    const target_opacity = +style.opacity;\n    const transform = style.transform === 'none' ? '' : style.transform;\n    const sd = 1 - start;\n    const od = target_opacity * (1 - opacity);\n    return {\n        delay,\n        duration,\n        easing,\n        css: (_t, u) => `\n\t\t\ttransform: ${transform} scale(${1 - (sd * u)});\n\t\t\topacity: ${target_opacity - (od * u)}\n\t\t`\n    };\n}\nfunction draw(node, { delay = 0, speed, duration, easing = cubicInOut } = {}) {\n    let len = node.getTotalLength();\n    const style = getComputedStyle(node);\n    if (style.strokeLinecap !== 'butt') {\n        len += parseInt(style.strokeWidth);\n    }\n    if (duration === undefined) {\n        if (speed === undefined) {\n            duration = 800;\n        }\n        else {\n            duration = len / speed;\n        }\n    }\n    else if (typeof duration === 'function') {\n        duration = duration(len);\n    }\n    return {\n        delay,\n        duration,\n        easing,\n        css: (t, u) => `stroke-dasharray: ${t * len} ${u * len}`\n    };\n}\nfunction crossfade(_a) {\n    var { fallback } = _a, defaults = __rest(_a, [\"fallback\"]);\n    const to_receive = new Map();\n    const to_send = new Map();\n    function crossfade(from, node, params) {\n        const { delay = 0, duration = d => Math.sqrt(d) * 30, easing = cubicOut } = assign(assign({}, defaults), params);\n        const to = node.getBoundingClientRect();\n        const dx = from.left - to.left;\n        const dy = from.top - to.top;\n        const dw = from.width / to.width;\n        const dh = from.height / to.height;\n        const d = Math.sqrt(dx * dx + dy * dy);\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        const opacity = +style.opacity;\n        return {\n            delay,\n            duration: is_function(duration) ? duration(d) : duration,\n            easing,\n            css: (t, u) => `\n\t\t\t\topacity: ${t * opacity};\n\t\t\t\ttransform-origin: top left;\n\t\t\t\ttransform: ${transform} translate(${u * dx}px,${u * dy}px) scale(${t + (1 - t) * dw}, ${t + (1 - t) * dh});\n\t\t\t`\n        };\n    }\n    function transition(items, counterparts, intro) {\n        return (node, params) => {\n            items.set(params.key, {\n                rect: node.getBoundingClientRect()\n            });\n            return () => {\n                if (counterparts.has(params.key)) {\n                    const { rect } = counterparts.get(params.key);\n                    counterparts.delete(params.key);\n                    return crossfade(rect, node, params);\n                }\n                // if the node is disappearing altogether\n                // (i.e. wasn't claimed by the other list)\n                // then we need to supply an outro\n                items.delete(params.key);\n                return fallback && fallback(node, params, intro);\n            };\n        };\n    }\n    return [\n        transition(to_send, to_receive, false),\n        transition(to_receive, to_send, true)\n    ];\n}\n\nexport { blur, crossfade, draw, fade, fly, scale, slide };\n","<script>\r\n\t// @ts-nocheck\r\n\timport { fade } from 'svelte/transition';\r\n\r\n\texport let value = null;\r\n\r\n\tlet clip;\r\n\tlet copied;\r\n\tlet duration = 2000;\r\n\r\n\tasync function copy() {\r\n\t\tvar promise = navigator.clipboard.writeText(clip.innerHTML);\r\n\t\tawait promise;\r\n\t\tvalue = promise;\r\n\t\tcopied = true;\r\n\t\tsetTimeout(() => (copied = false), 1);\r\n\t}\r\n</script>\r\n\r\n<!-- Clipboard  -->\r\n<div class=\"Clipboard-Container\" on:click={copy}>\r\n\t{#if copied}\r\n\t\t<div out:fade={{ duration }}>✔️Copied</div>\r\n\t{:else}\r\n\t\t<div in:fade={{ duration: 0, delay: duration }}>\r\n\t\t\t<svg\r\n\t\t\t\ton:click={copy}\r\n\t\t\t\tclass=\"octicon octicon-clippy\"\r\n\t\t\t\tviewBox=\"0 0 14 16\"\r\n\t\t\t\tversion=\"1.1\"\r\n\t\t\t\twidth=\"14\"\r\n\t\t\t\theight=\"16\"\r\n\t\t\t\taria-hidden=\"true\"\r\n\t\t\t\tstroke=\"currentColor\"\r\n\t\t\t>\r\n\t\t\t\t<title>Copy to clipboard</title>\r\n\t\t\t\t<path\r\n\t\t\t\t\tfill-rule=\"evenodd\"\r\n\t\t\t\t\td=\"M2 13h4v1H2v-1zm5-6H2v1h5V7zm2 3V8l-3 3 3 3v-2h5v-2H9zM4.5 9H2v1h2.5V9zM2 12h2.5v-1H2v1zm9 1h1v2c-.02.28-.11.52-.3.7-.19.18-.42.28-.7.3H1c-.55 0-1-.45-1-1V4c0-.55.45-1 1-1h3c0-1.11.89-2 2-2 1.11 0 2 .89 2 2h3c.55 0 1 .45 1 1v5h-1V6H1v9h10v-2zM2 5h8c0-.55-.45-1-1-1H8c-.55 0-1-.45-1-1s-.45-1-1-1-1 .45-1 1-.45 1-1 1H3c-.55 0-1 .45-1 1z\"\r\n\t\t\t\t/>\r\n\t\t\t</svg>\r\n\t\t</div>\r\n\t{/if}\r\n\t<div class=\"Clipboard\" bind:this={clip}>\r\n\t\t<slot {copy} />\r\n\t</div>\r\n</div>\r\n\r\n<style>\r\n\t.Clipboard {\r\n\t\tmargin: 0 0.5em;\r\n\t\tword-break: break-all;\r\n\t}\r\n\t.Clipboard-Container {\r\n\t\tdisplay: flex;\r\n\t}\r\n\t.Clipboard-Container,\r\n\tsvg {\r\n\t\tcursor: pointer;\r\n\t}\r\n\tsvg {\r\n\t\tcursor: pointer;\r\n\t\tbackground-color: transparent;\r\n\t\tfill: transparent;\r\n\t\twidth: auto;\r\n\t\theight: 1.5em;\r\n\t}\r\n</style>\r\n","<script>\r\n\t// @ts-nocheck\r\n\r\n\t// show the user's keys\r\n\t// parse out the JWKs into types: RSA and Ed25519 according to JWK\r\n\timport { shorten, bufftoHex } from './utils';\r\n\timport Clipboard from './Clipboard.svelte';\r\n\timport EncodingSelector from './components/atomic/EncodingSelector.svelte';\r\n\r\n\texport let keys;\r\n\r\n\tlet selectedRSA;\r\n\tlet collapsed;\r\n</script>\r\n\r\n{#if keys && keys.length > 0}\r\n\t<div class=\"card text-toxic shadow-md shadow-toxic/50 rounded-lg p-4 m-4 w-auto bg-neutral-800\">\r\n\t\t{#if keys.filter((k) => k.publicKeyJWK.kty == 'RSA').length}\r\n\t\t\t<div class=\"keylist overflow-hidden\">\r\n\t\t\t\t<div class=\"row left\">\r\n\t\t\t\t\t<span>Arweave</span>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"row list-group\">\r\n\t\t\t\t\t{#each keys.filter((k) => k.publicKeyJWK.kty == 'RSA') as rsaJWK}\r\n\t\t\t\t\t\t<div class=\"flex flex-col\">\r\n\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\tclass=\"{collapsed && selectedRSA != rsaJWK.kid\r\n\t\t\t\t\t\t\t\t\t? 'hide'\r\n\t\t\t\t\t\t\t\t\t: ''} list-group-item list-group-item-action \"\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{rsaJWK.name}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div class=\"flex-1\">\r\n\t\t\t\t\t\t\t\tBase64URL: <Clipboard>{rsaJWK.publicKeyJWK.kid}</Clipboard>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t{/each}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t{/if}\r\n\t\t{#if keys.filter((k) => k.publicKeyJWK.crv == 'Ed25519')}\r\n\t\t\t<div class=\"keylist\">\r\n\t\t\t\t<div class=\"row left\">\r\n\t\t\t\t\t<span>Ed25519</span>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div class=\"row list-group\">\r\n\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t{#each keys.filter((k) => k.publicKeyJWK.crv == 'Ed25519') as edJWK}\r\n\t\t\t\t\t\t\t<EncodingSelector pubkey={new Uint8Array(edJWK.publicKey)} let:encoded>\r\n\t\t\t\t\t\t\t\t<Clipboard>{encoded}</Clipboard>\r\n\t\t\t\t\t\t\t</EncodingSelector>\r\n\t\t\t\t\t\t\t<!-- <li class=\" list-group-item list-group-item-action \">\r\n\t\t\t\t\t\t\t\t{shorten(edJWK.name)}\r\n\t\t\t\t\t\t\t\t<div class=\"full-pubKey\">\r\n\t\t\t\t\t\t\t\t\tBase64URL: <Clipboard>{edJWK.publicKeyJWK.x}</Clipboard>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div class=\"full-pubKey\">\r\n\t\t\t\t\t\t\t\t\tBase58: <Clipboard>{edJWK.publicKeyBase58}</Clipboard>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div class=\"full-pubKey\">\r\n\t\t\t\t\t\t\t\t\tHex: <Clipboard>{bufftoHex(edJWK.publicKey)}</Clipboard>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div class=\"full-pubKey\">\r\n\t\t\t\t\t\t\t\t\tBytes: <Clipboard>{edJWK.publicKey}</Clipboard>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</li> -->\r\n\t\t\t\t\t\t\t<!-- <b>{shorten(key?.publicKeyBase58)}</b><br /> -->\r\n\t\t\t\t\t\t{/each}\r\n\t\t\t\t\t</ul>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t{/if}\r\n\t</div>\r\n{/if}\r\n\r\n<style>\r\n\t.keylist {\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: row;\r\n\t\tflex-wrap: nowrap;\r\n\t\tjustify-content: flex-start;\r\n\t\talign-items: stretch;\r\n\t\talign-content: stretch;\r\n\t\tborder-bottom: 1px #d6e7df solid;\r\n\t\tpadding-bottom: 4px;\r\n\t\tmargin-bottom: 4px;\r\n\t}\r\n\t.left {\r\n\t\tflex-shrink: 2;\r\n\t\twidth: 85px;\r\n\t}\r\n\t.row,\r\n\tul {\r\n\t\tmargin: 0em;\r\n\t\tpadding: 0em;\r\n\t}\r\n\t.row:not(.left) {\r\n\t\tflex: 1 1 auto;\r\n\t\toverflow-y: auto;\r\n\t}\r\n\t.hide {\r\n\t\tdisplay: none;\r\n\t}\r\n</style>\r\n","<script lang=\"ts\">\r\n\t/**\r\n\tKeys can come from:\r\n\t- Loaded from storage (index.svelte, in which case this component is not needed)\r\n\t- Generated from scratch (here)\r\n\t- Load by user (here)\r\n\r\n\tkeys get saved to $storedValue which trigger the ImmortalDB saved\r\n\t*/\r\n\timport { onMount, createEventDispatcher } from 'svelte';\r\n\timport { storedValue } from './stores';\r\n\r\n\timport {\r\n\t\tgenerateMnemonic,\r\n\t\tgenerateRsaJwk,\r\n\t\tloadSecrets,\r\n\t\tgetLoadedKeys\r\n\t} from '@peerpiper/iframe-wallet-sdk';\r\n\timport ListKeys from './ListKeys.svelte';\r\n\r\n\tconst dispatch = createEventDispatcher();\r\n\r\n\tlet handleGenerateKeypair:\r\n\t\t| ((event: MouseEvent & { currentTarget: EventTarget & HTMLButtonElement }) => void)\r\n\t\t| null = null;\r\n\r\n\t// state variables\r\n\tlet creating = '';\r\n\tlet keys: {\r\n\t\tname: string;\r\n\t\tpublicKey: string; // todo: to UInt8Array?\r\n\t\tpublicKeyJWK: {\r\n\t\t\tkty: string;\r\n\t\t\tkid: string;\r\n\t\t\te: string; //'AQAB'; //  value 65537, the octet sequence to be base64url-encoded MUST consist of the three octets [1, 0, 1]; the resulting representation for this value is \"AQAB\"\r\n\t\t\tn: string; // keyDetails.n;\r\n\t\t}; // already a JWK\r\n\t\tpublicKeyBase58: string; // address = base64URL encoded hash of jwk.n\r\n\t}[];\r\n\r\n\tonMount(async () => {\r\n\t\thandleGenerateKeypair = async () => {\r\n\t\t\tcreating = 'Creating keypairs...';\r\n\r\n\t\t\tconst mnemonic = await generateMnemonic();\r\n\t\t\tconst rsajwk = await generateRsaJwk();\r\n\r\n\t\t\t// save to storedValue.\r\n\t\t\t// TODO: offer password protection/encryption?\r\n\t\t\t$storedValue = { ...$storedValue, mnemonic, rsajwk };\r\n\r\n\t\t\tcreating += '<br/>Created mnemonic.';\r\n\t\t\tcreating += `<br/>${mnemonic}`;\r\n\t\t\tcreating += '<br/>Creating master keypair (type ed25519)...';\r\n\t\t};\r\n\t});\r\n\r\n\t$: if ($storedValue && $storedValue.mnemonic) loadKeys(); // load keys once there is a storedValue\r\n\r\n\tasync function loadKeys() {\r\n\t\tawait loadSecrets({ mnemonic: $storedValue.mnemonic, rsajwk: $storedValue.rsajwk });\r\n\r\n\t\tdispatch('loadedKeys', 'details'); // let parent component know\r\n\t\tkeys = getLoadedKeys(); // get all proxcryptor public key info\r\n\t}\r\n</script>\r\n\r\n{#if handleGenerateKeypair}\r\n\t{#if ($storedValue != undefined && $storedValue == null) || !$storedValue?.mnemonic || !$storedValue?.rsajwk}\r\n\t\t<!-- Show \"Create Keys\" if no keys exist, no matter what page is showing -- toolbar? -->\r\n\t\t<div class=\"submit flex flex-col text-black bg-yellow-300 shadow p-8 m-4 rounded w-fit\">\r\n\t\t\t<button\r\n\t\t\t\tclass=\"bg-green-500 rounded shadow-lg shadow-slate-600/50 p-4 w-fit m-4 text-white\"\r\n\t\t\t\ton:click={handleGenerateKeypair}>Create New Keypairs</button\r\n\t\t\t>\r\n\t\t\t{@html creating}\r\n\t\t</div>\r\n\t{:else}\r\n\t\t<!-- GetKeys: has storedValue, sending to Connector if in Opened window. Else, allowing user to manage keys.<br /> -->\r\n\t\t<ListKeys {keys} />\r\n\t{/if}\r\n{/if}\r\n\r\n<style>\r\n\tdiv {\r\n\t\tpadding: 2em;\r\n\t}\r\n</style>\r\n","<script lang=\"ts\">\r\n\timport { onMount } from 'svelte';\r\n\timport { CONSTANTS } from '@peerpiper/iframe-wallet-sdk';\r\n\timport { storedValue } from './stores';\r\n\r\n\tlet keyDetails;\r\n\tlet mounted: boolean;\r\n\r\n\tlet syncKeys: (e: CustomEvent<any>) => void;\r\n\tlet pending: boolean = true;\r\n\r\n\tonMount(() => {\r\n\t\ttry {\r\n\t\t\tif (window.location.origin === window.opener?.origin) {\r\n\t\t\t\tsendOpenerMsg(CONSTANTS.OPENED_SIGNAL, (event) => {\r\n\t\t\t\t\t// called when the opener replies to our message above\r\n\t\t\t\t\tpending = false;\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tconsole.warn(\"Origins didn't match\");\r\n\t\t}\r\n\r\n\t\tfunction sendOpenerMsg(msg: any, callback = (_: any) => {}) {\r\n\t\t\tconst channel = new MessageChannel();\r\n\t\t\tchannel.port1.onmessage = callback; // Listen for messages on port1\r\n\t\t\ttry {\r\n\t\t\t\tif (window.opener?.origin === window.location.origin)\r\n\t\t\t\t\twindow.opener.postMessage(msg, window.location.origin, [channel.port2]); // the opener will receive this message\r\n\t\t\t} catch (error) {\r\n\t\t\t\tconsole.log(\"Origins didn't match\");\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Called when user allows a copy of the keys to be imported to another browser window in same origin\r\n\t\tsyncKeys = (e: CustomEvent<any>): void => {\r\n\t\t\tsendOpenerMsg({ key: CONSTANTS.WINDOW_SYNC, storedValue: $storedValue }, (event) => {\r\n\t\t\t\tpending = false;\r\n\t\t\t\tnavigateBack();\r\n\t\t\t}); // uses same origin, keys are secure\r\n\t\t};\r\n\r\n\t\twindow.addEventListener('beforeunload', () => {\r\n\t\t\ttry {\r\n\t\t\t\tif (window.opener?.origin === window.location.origin)\r\n\t\t\t\t\twindow.opener.postMessage(CONSTANTS.CLOSING);\r\n\t\t\t\tnavigateBack();\r\n\t\t\t} catch (error) {\r\n\t\t\t\tconsole.log(\"Origins didn't match\");\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tmounted = true;\r\n\t});\r\n\r\n\tfunction navigateBack() {\r\n\t\tif (!window.opener) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\ttry {\r\n\t\t\t// window.opener.focus(); // fails\r\n\t\t\twindow.history.back(); // works\r\n\t\t\t// window.close();\r\n\t\t} catch (e) {\r\n\t\t\tconsole.log(e);\r\n\t\t}\r\n\t}\r\n</script>\r\n\r\n{#if mounted && !pending}\r\n\t<slot {syncKeys} />\r\n{/if}\r\n","<script>\r\n\t// @ts-nocheck\r\n\r\n\timport { confirmationComponents } from './components/confirm/index';\r\n\timport { handlers } from '@peerpiper/iframe-wallet-sdk';\r\n\r\n\texport let show;\r\n\texport let hide;\r\n\r\n\tconst leaf = (obj, path) => path.split('.').reduce((value, el) => value && value[el], obj);\r\n\r\n\tlet requests = [];\r\n\r\n\t// set confirm fn\r\n\t// calling confirm adds a confirmation request to the list of outstanding request\r\n\t// resolving the Promise removes the request\r\n\t// if last request, hide() the UI\r\n\tconst confirm = async (confirmSection, params) => {\r\n\t\tconst component = confirmSection\r\n\t\t\t? leaf(confirmationComponents, confirmSection) || confirmationComponents.Default\r\n\t\t\t: false;\r\n\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\tconst handleConfirmed = () => {\r\n\t\t\t\tcommon();\r\n\t\t\t\tresolve(true); // signal handler to continue with action\r\n\t\t\t};\r\n\t\t\tconst handleDenied = () => {\r\n\t\t\t\tcommon();\r\n\t\t\t\tresolve(false); // signal handler to continue with action\r\n\t\t\t};\r\n\r\n\t\t\tconst thisRequest = { component, confirmSection, params, handleConfirmed, handleDenied };\r\n\r\n\t\t\tfunction common() {\r\n\t\t\t\trequests = requests.filter((req) => req !== thisRequest); // find and remove element\r\n\t\t\t\tif (requests.length == 0) hide(); // hide if last one removed\r\n\t\t\t}\r\n\r\n\t\t\trequests = [...requests, thisRequest];\r\n\t\t\tshow(); // trigger the UI to show this request\r\n\t\t});\r\n\t};\r\n\r\n\t// pass the above confirm function to the handlers so they can use it when their methods are called\r\n\thandlers.setConfig('confirm', confirm);\r\n</script>\r\n\r\n{#if requests}\r\n\t{#each requests as { component, confirmSection, params, handleConfirmed, handleDenied }}\r\n\t\t<div class=\"active\">\r\n\t\t\t<svelte:component\r\n\t\t\t\tthis={component.component}\r\n\t\t\t\tprops={{ method: confirmSection, params }}\r\n\t\t\t\t{handleConfirmed}\r\n\t\t\t\t{handleDenied}\r\n\t\t\t/>\r\n\t\t</div>\r\n\t{/each}\r\n{/if}\r\n\r\n<style>\r\n\t.active {\r\n\t\tdisplay: flex;\r\n\t\talign-items: center;\r\n\t\tmin-width: 350px;\r\n\t\tmin-height: 50px;\r\n\t\tflex-direction: column;\r\n\t}\r\n</style>\r\n","<script context=\"module\" lang=\"ts\">\r\n\texport const prerender = true;\r\n</script>\r\n\r\n<script lang=\"ts\">\r\n\timport { onMount } from 'svelte';\r\n\timport AutoSizer from './AutoSizer.svelte';\r\n\timport Connector from './Connector.svelte';\r\n\timport GetKeys from './GetKeys.svelte';\r\n\timport { storedValue } from './stores';\r\n\timport Opened from './Opened.svelte';\r\n\timport Confirmer from './Confirmer.svelte';\r\n\r\n\tconst STORED_VALUE = 'STORED_VALUE';\r\n\tconst def = null;\r\n\r\n\t// browser functions (set in onMount to ensure browser loaded)\r\n\tlet ImmortalDB: any;\r\n\tlet save: Function;\r\n\tlet mounted: boolean = false;\r\n\r\n\tlet syncing: any;\r\n\r\n\tonMount(async () => {\r\n\t\t({ ImmortalDB } = await import('immortal-db'));\r\n\t\tconst storedString = await ImmortalDB.get(STORED_VALUE, def);\r\n\r\n\t\tif (storedString) {\r\n\t\t\tconst parsedVal = JSON.parse(storedString);\r\n\t\t\tif (parsedVal.mnemonic || parsedVal.rsajwk) $storedValue = parsedVal;\r\n\t\t}\r\n\r\n\t\tsave = () => {\r\n\t\t\tImmortalDB.set(STORED_VALUE, JSON.stringify($storedValue)); // auto save when $storedValue changes\r\n\t\t};\r\n\r\n\t\ttry {\r\n\t\t\tsyncing = window.opener && window.opener?.origin === window.location.origin;\r\n\t\t} catch (error) {\r\n\t\t\t// not syncing by same origin, that's ok it was probably a regular link from somewhere\r\n\t\t}\r\n\t\tmounted = true;\r\n\t});\r\n\r\n\t$: if (ImmortalDB && $storedValue && save) save();\r\n\r\n\tfunction loadedKeys() {\r\n\t\tsave();\r\n\t}\r\n</script>\r\n\r\n<!-- Based on whether this is the Window.Top (not an iframe) or a Child (iframe) depends on which to show: -->\r\n{#if ImmortalDB}\r\n\t{#if window == window.top}\r\n\t\t<!-- NOT an iframe  -->\r\n\t\t<div class=\"m-2\">\r\n\t\t\t{#if syncing}\r\n\t\t\t\t<!-- Opened handles on:loadedKeys by ALSO syncing them with the opener window -->\r\n\t\t\t\t<Opened let:syncKeys>\r\n\t\t\t\t\t{#if syncKeys}\r\n\t\t\t\t\t\t<GetKeys on:loadedKeys={loadedKeys} on:loadedKeys={syncKeys} />\r\n\t\t\t\t\t{/if}\r\n\t\t\t\t</Opened>\r\n\t\t\t{:else}\r\n\t\t\t\t<GetKeys on:loadedKeys />\r\n\t\t\t{/if}\r\n\t\t</div>\r\n\t{:else}\r\n\t\t<!-- Auto-resize embedded iframe -->\r\n\t\t<AutoSizer let:connectionReady let:show let:hide>\r\n\t\t\t<!-- connectionReady gets passed from AutoSizer to GetKeys -->\r\n\t\t\t<Connector {mounted}>\r\n\t\t\t\t<Confirmer {show} {hide} />\r\n\t\t\t\t{#if connectionReady}\r\n\t\t\t\t\t<GetKeys on:loadedKeys={connectionReady} />\r\n\t\t\t\t{/if}\r\n\t\t\t</Connector>\r\n\t\t</AutoSizer>\r\n\t{/if}\r\n{/if}\r\n","export const CONSTANTS = {\r\n    OPENED_SIGNAL: \"OPENED\",\r\n    KEYS_SYNC: \"KEYS_SYNC\",\r\n    WINDOW_SYNC: \"WINDOW_SYNC\",\r\n    SAVED_KEYS: \"__SAVED_KEY\",\r\n    CLOSING: \"CLOSING\",\r\n}\r\n"],"file":"_app/immutable/chunks/index-4fe40be5.js"}