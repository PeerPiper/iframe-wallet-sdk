{"version":3,"file":"EncodingSelector-401ffedb.js","sources":["../../../../../../node_modules/uint8arrays/esm/src/alloc.js","../../../../../../node_modules/uint8arrays/esm/src/util/bases.js","../../../../../../node_modules/uint8arrays/esm/src/to-string.js","../../../../../../src/lib/frontend/components/atomic/EncodingSelector.svelte"],"sourcesContent":["export function alloc(size = 0) {\n  if (globalThis.Buffer != null && globalThis.Buffer.alloc != null) {\n    return globalThis.Buffer.alloc(size);\n  }\n  return new Uint8Array(size);\n}\nexport function allocUnsafe(size = 0) {\n  if (globalThis.Buffer != null && globalThis.Buffer.allocUnsafe != null) {\n    return globalThis.Buffer.allocUnsafe(size);\n  }\n  return new Uint8Array(size);\n}","import { bases } from 'multiformats/basics';\nimport { allocUnsafe } from '../alloc.js';\nfunction createCodec(name, prefix, encode, decode) {\n  return {\n    name,\n    prefix,\n    encoder: {\n      name,\n      prefix,\n      encode\n    },\n    decoder: { decode }\n  };\n}\nconst string = createCodec('utf8', 'u', buf => {\n  const decoder = new TextDecoder('utf8');\n  return 'u' + decoder.decode(buf);\n}, str => {\n  const encoder = new TextEncoder();\n  return encoder.encode(str.substring(1));\n});\nconst ascii = createCodec('ascii', 'a', buf => {\n  let string = 'a';\n  for (let i = 0; i < buf.length; i++) {\n    string += String.fromCharCode(buf[i]);\n  }\n  return string;\n}, str => {\n  str = str.substring(1);\n  const buf = allocUnsafe(str.length);\n  for (let i = 0; i < str.length; i++) {\n    buf[i] = str.charCodeAt(i);\n  }\n  return buf;\n});\nconst BASES = {\n  utf8: string,\n  'utf-8': string,\n  hex: bases.base16,\n  latin1: ascii,\n  ascii: ascii,\n  binary: ascii,\n  ...bases\n};\nexport default BASES;","import bases from './util/bases.js';\nexport function toString(array, encoding = 'utf8') {\n  const base = bases[encoding];\n  if (!base) {\n    throw new Error(`Unsupported encoding \"${ encoding }\"`);\n  }\n  if ((encoding === 'utf8' || encoding === 'utf-8') && globalThis.Buffer != null && globalThis.Buffer.from != null) {\n    return globalThis.Buffer.from(array.buffer, array.byteOffset, array.byteLength).toString('utf8');\n  }\n  return base.encoder.encode(array).substring(1);\n}","<script lang=\"ts\">\r\n\timport * as u8a from 'uint8arrays';\r\n\r\n\texport let pubkey: Uint8Array;\r\n\r\n\tfunction bytesToBase64(b: Uint8Array): string {\r\n\t\treturn u8a.toString(b, 'base64pad');\r\n\t}\r\n\r\n\tfunction bytesToBase58(b: Uint8Array): string {\r\n\t\treturn u8a.toString(b, 'base58btc');\r\n\t}\r\n\r\n\tfunction bytesToHex(b: Uint8Array): string {\r\n\t\treturn u8a.toString(b, 'base16');\r\n\t}\r\n\tlet selected = 'Base64';\r\n\tlet encoded = bytesToBase64(pubkey);\r\n\r\n\tlet white = ' bg-white rounded-lg text-black font-semibold py-1 px-2 m-1 ';\r\n\tlet grey = ' bg-gray-600 rounded-lg text-grey-dark font-semibold py-1 px-2 m-1 ';\r\n</script>\r\n\r\n<div class=\"flex flex-col sm:flex-row leading-8\">\r\n\t<div class=\"flex-grow justify-self-auto\">\r\n\t\t<slot {encoded}>\r\n\t\t\t{encoded}\r\n\t\t</slot>\r\n\t</div>\r\n\t<div class=\"flex-none flex flex-col justify-self-end bg-neutral-500/30 p-1 sm:p-2 rounded-lg\">\r\n\t\t<div class=\"flex-none text-center\">Same key, different format</div>\r\n\t\t<div class=\"flex-none text-center cursor-pointer select-none\">\r\n\t\t\t<span\r\n\t\t\t\tclass={selected == 'Base64' ? white : grey}\r\n\t\t\t\ton:click={() => {\r\n\t\t\t\t\tencoded = bytesToBase64(pubkey);\r\n\t\t\t\t\tselected = 'Base64';\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\tBase64\r\n\t\t\t</span>\r\n\r\n\t\t\t<span\r\n\t\t\t\tclass={selected == 'Base58' ? white : grey}\r\n\t\t\t\ton:click={() => {\r\n\t\t\t\t\tencoded = bytesToBase58(pubkey);\r\n\t\t\t\t\tselected = 'Base58';\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\tBase58\r\n\t\t\t</span>\r\n\r\n\t\t\t<span\r\n\t\t\t\tclass={selected == 'Hex' ? white : grey}\r\n\t\t\t\ton:click={() => {\r\n\t\t\t\t\tencoded = bytesToHex(pubkey);\r\n\t\t\t\t\tselected = 'Hex';\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\tHex\r\n\t\t\t</span>\r\n\t\t</div>\r\n\t</div>\r\n</div>\r\n"],"names":["string","bases","ctx","u8a.toString"],"mappings":";;AAMO,SAAS,YAAY,OAAO,GAAG;AACpC,MAAI,WAAW,UAAU,QAAQ,WAAW,OAAO,eAAe,MAAM;AACtE,WAAO,WAAW,OAAO,YAAY,IAAI;AAAA,EAC1C;AACD,SAAO,IAAI,WAAW,IAAI;AAC5B;ACTA,SAAS,YAAY,MAAM,QAAQ,QAAQ,QAAQ;AACjD,SAAO;AAAA,IACL;AAAA,IACA;AAAA,IACA,SAAS;AAAA,MACP;AAAA,MACA;AAAA,MACA;AAAA,IACD;AAAA,IACD,SAAS,EAAE,OAAQ;AAAA,EACvB;AACA;AACA,MAAM,SAAS,YAAY,QAAQ,KAAK,SAAO;AAC7C,QAAM,UAAU,IAAI,YAAY,MAAM;AACtC,SAAO,MAAM,QAAQ,OAAO,GAAG;AACjC,GAAG,SAAO;AACR,QAAM,UAAU,IAAI;AACpB,SAAO,QAAQ,OAAO,IAAI,UAAU,CAAC,CAAC;AACxC,CAAC;AACD,MAAM,QAAQ,YAAY,SAAS,KAAK,SAAO;AAC7C,MAAIA,UAAS;AACb,WAAS,IAAI,GAAG,IAAI,IAAI,QAAQ,KAAK;AACnC,IAAAA,WAAU,OAAO,aAAa,IAAI,EAAE;AAAA,EACrC;AACD,SAAOA;AACT,GAAG,SAAO;AACR,QAAM,IAAI,UAAU,CAAC;AACrB,QAAM,MAAM,YAAY,IAAI,MAAM;AAClC,WAAS,IAAI,GAAG,IAAI,IAAI,QAAQ,KAAK;AACnC,QAAI,KAAK,IAAI,WAAW,CAAC;AAAA,EAC1B;AACD,SAAO;AACT,CAAC;AACD,MAAM,QAAQ;AAAA,EACZ,MAAM;AAAA,EACN,SAAS;AAAA,EACT,KAAK,MAAM;AAAA,EACX,QAAQ;AAAA,EACR;AAAA,EACA,QAAQ;AAAA,EACR,GAAG;AACL;AC1CO,SAAS,SAAS,OAAO,WAAW,QAAQ;AACjD,QAAM,OAAOC,MAAM;AACnB,MAAI,CAAC,MAAM;AACT,UAAM,IAAI,MAAM,yBAA0B,WAAY;AAAA,EACvD;AACD,OAAK,aAAa,UAAU,aAAa,YAAY,WAAW,UAAU,QAAQ,WAAW,OAAO,QAAQ,MAAM;AAChH,WAAO,WAAW,OAAO,KAAK,MAAM,QAAQ,MAAM,YAAY,MAAM,UAAU,EAAE,SAAS,MAAM;AAAA,EAChG;AACD,SAAO,KAAK,QAAQ,OAAO,KAAK,EAAE,UAAU,CAAC;AAC/C;;;;;;;eCgBI,IAAO,EAAA;AAAA;;4BAAP,IAAO,EAAA;AAAA;;;;;;oBAAPC,KAAO,EAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;gBAI0B,4BAA0B;;;;gBAQ3D,QAED;;;gBAQC,QAED;;;gBAQC,KAED;;;;;;;;;;;;;;;;kCA9BkC,4BAA0B;;;;;;;mCAQ3D,QAED;;;;;mCAQC,QAED;;;;;mCAQC,KAED;;;;;;;;;;AA3BQ,WAAA,OAAA,SAAA,oBAAA,IAAY,MAAA,WAAW,QAAQ,IAAI;AAUnC,WAAA,OAAA,SAAA,oBAAA,IAAY,MAAA,WAAW,QAAQ,IAAI;AAUnC,WAAA,OAAA,SAAA,oBAAA,IAAY,MAAA,QAAQ,QAAQ,IAAI;;;;;;AA9B3C,uBAwCM,QAAA,MAAA,MAAA;AAvCL,uBAIM,MAAA,IAAA;;;;;AACN,uBAiCM,MAAA,IAAA;AAhCL,uBAAmE,MAAA,IAAA;;;AACnE,uBA8BM,MAAA,IAAA;AA7BL,uBAQO,MAAA,KAAA;;;AAEP,uBAQO,MAAA,KAAA;;;AAEP,uBAQO,MAAA,KAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA3BC,UAAA,CAAA,WAAA,QAAA,KAAA,uBAAA,oBAAAA,KAAY,MAAA,WAAW,QAAQ,OAAI;;;AAUnC,UAAA,CAAA,WAAA,QAAA,KAAA,uBAAA,oBAAAA,KAAY,MAAA,WAAW,QAAQ,OAAI;;;AAUnC,UAAA,CAAA,WAAA,QAAA,KAAA,uBAAA,oBAAAA,KAAY,MAAA,QAAQ,QAAQ,OAAI;;;;;;;;;;;;;;;;;;;;;;;;AAlCtC,IAAA,QAAQ;AACR,IAAA,OAAO;;;QAjBA,OAAkB,IAAA;AAEpB,WAAA,cAAc,GAAa;AAC5B,WAAAC,SAAa,GAAG,WAAW;AAAA;AAG1B,WAAA,cAAc,GAAa;AAC5B,WAAAA,SAAa,GAAG,WAAW;AAAA;AAG1B,WAAA,WAAW,GAAa;AACzB,WAAAA,SAAa,GAAG,QAAQ;AAAA;AAE5B,MAAA,WAAW;MACX,UAAU,cAAc,MAAM;;oBAkB9B,UAAU,cAAc,MAAM,CAAA;AAC9B,iBAAA,GAAA,WAAW,QAAQ;AAAA;;oBASnB,UAAU,cAAc,MAAM,CAAA;AAC9B,iBAAA,GAAA,WAAW,QAAQ;AAAA;;oBASnB,UAAU,WAAW,MAAM,CAAA;AAC3B,iBAAA,GAAA,WAAW,KAAK;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;"}