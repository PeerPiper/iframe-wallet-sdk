{"version":3,"mappings":"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","names":["t1_value","ctx","insert_hydration","target","append_hydration","div3","div2","div0","dirty","p","defConf","$$value","deepHash","data","tag","ArweaveUtils.concatBuffers","ArweaveUtils.stringToBuffer","deepHashChunks","taggedHash","chunks","acc","newAcc","hashPair","concatBuffers","buffers","total_length","i","offset","temp","b64UrlToString","b64UrlString","b64UrlToBuffer","TextDecoder","buffer","bufferToString","stringToBuffer","string","TextEncoder","stringToB64Url","toByteArray","b64UrlDecode","bufferTob64","fromByteArray","bufferTob64Url","b64UrlEncode","padding","BaseObject","field","options","Tag","name","value","decode","Transaction","attributes","owner","id","reward","tags","signature","idx","chunk","proof","accumulator","tagList","winstonString","number","stringToBigNum","decimals","formatted","stringValue","decimalPlaces","BigNum","instance","BigNumber","error","t7_value","t9_value","ArweaveUtils.winstonToAr","create_if_block_1","attr","div1","props","transaction","confirmationComponents","DefaultConfirmation","key","handlers","customizedComponents","Connect","Sign","ArweaveSign","Decrypt","TransformEncrypt","ReDecrypt","switch_value","leaf","obj","path","el","requests","onMount","confirm","confirmSection","params","resolve","reject","thisRequest","common","req","hide","show"],"sources":["../../../../../../src/lib/frontend/components/confirm/DefaultConfirmation.svelte","../../../../../../src/lib/frontend/components/confirm/Connect.svelte","../../../../../../src/lib/frontend/components/confirm/arweave/deepHash.ts","../../../../../../src/lib/frontend/components/confirm/arweave/utils.ts","../../../../../../src/lib/frontend/components/confirm/ArweaveSign.svelte","../../../../../../src/lib/frontend/components/confirm/Sign.svelte","../../../../../../src/lib/frontend/components/confirm/Decrypt.svelte","../../../../../../src/lib/frontend/components/confirm/ReDecrypt.svelte","../../../../../../src/lib/frontend/components/confirm/TransformEncrypt.svelte","../../../../../../src/lib/frontend/components/confirm/index.ts","../../../../../../src/lib/frontend/Confirmer.svelte"],"sourcesContent":["<script>\r\n\timport Button from '../atomic/Button.svelte';\r\n\r\n\texport let props = { method: '', params: {} };\r\n\texport let handleConfirmed;\r\n\texport let handleDenied;\r\n</script>\r\n\r\n<slot>\r\n\t<div>\r\n\t\t<div class=\"attention\">\r\n\t\t\t<div>\r\n\t\t\t\t⚠️ Authorize {props.method} from your wallet?\r\n\t\t\t</div>\r\n\t\t\t<div class=\"submit\">\r\n\t\t\t\t<Button type={'Yes'} clickHandler={handleConfirmed}>Yes</Button>\r\n\t\t\t\t<Button type={'No'} clickHandler={handleDenied}>No</Button>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n</slot>\r\n\r\n<style>\r\n\tdiv.attention {\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\tbackground-color: #fff9c4;\r\n\t\tfilter: drop-shadow(2px 4px 6px rgba(0, 0, 0, 0.3));\r\n\t}\r\n\tdiv {\r\n\t\tpadding: 0.5em;\r\n\t\tmargin: 0.5em;\r\n\t\twidth: fit-content;\r\n\t}\r\n</style>\r\n","<script>\r\n\t// @ts-nocheck\r\n\r\n\timport DefaultConfirmation from './DefaultConfirmation.svelte';\r\n\timport Button from '../atomic/Button.svelte';\r\n\r\n\texport let props;\r\n\r\n\tlet defConf;\r\n</script>\r\n\r\n<DefaultConfirmation bind:this={defConf} {props} let:props={p} on:confirmed>\r\n\t<div class=\"attention\">\r\n\t\t<!-- this is default content, override with slot -->\r\n\t\t<div>\r\n\t\t\t⚠️ Allow {p.params.origin} to see your <b>Public</b> Key?\r\n\t\t</div>\r\n\t\t<div class=\"submit\">\r\n\t\t\t<Button type={'Yes'} clickHandler={defConf.handleConfirm}>Yes</Button>\r\n\t\t</div>\r\n\t</div>\r\n</DefaultConfirmation>\r\n\r\n<style>\r\n\tdiv.attention {\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\tbackground-color: #fff9c4;\r\n\t\tfilter: drop-shadow(2px 4px 6px rgba(0, 0, 0, 0.3));\r\n\t}\r\n\tdiv {\r\n\t\tpadding: 0.3em;\r\n\t\tmargin: 0.3em;\r\n\t}\r\n</style>\r\n","import * as ArweaveUtils from './utils';\r\n\r\n// In TypeScript 3.7, could be written as a single type:\r\n// `type DeepHashChunk = Uint8Array | DeepHashChunk[];`\r\ntype DeepHashChunk = Uint8Array | DeepHashChunks;\r\ninterface DeepHashChunks extends Array<DeepHashChunk> {}\r\n\r\nexport default async function deepHash(data: DeepHashChunk): Promise<Uint8Array> {\r\n\tif (Array.isArray(data)) {\r\n\t\tconst tag = ArweaveUtils.concatBuffers([\r\n\t\t\tArweaveUtils.stringToBuffer('list'),\r\n\t\t\tArweaveUtils.stringToBuffer(data.length.toString())\r\n\t\t]);\r\n\r\n\t\treturn await deepHashChunks(data, await crypto.subtle.digest('SHA-384', tag));\r\n\t}\r\n\r\n\tconst tag = ArweaveUtils.concatBuffers([\r\n\t\tArweaveUtils.stringToBuffer('blob'),\r\n\t\tArweaveUtils.stringToBuffer(data.byteLength.toString())\r\n\t]);\r\n\r\n\tconst taggedHash = ArweaveUtils.concatBuffers([\r\n\t\tawait crypto.subtle.digest('SHA-384', tag),\r\n\t\tawait crypto.subtle.digest('SHA-384', data)\r\n\t]);\r\n\r\n\treturn await crypto.subtle.digest('SHA-384', taggedHash);\r\n}\r\n\r\nasync function deepHashChunks(chunks: DeepHashChunks, acc: Uint8Array): Promise<Uint8Array> {\r\n\tif (chunks.length < 1) {\r\n\t\treturn acc;\r\n\t}\r\n\r\n\tconst hashPair = ArweaveUtils.concatBuffers([acc, await deepHash(chunks[0])]);\r\n\tconst newAcc = await crypto.subtle.digest('SHA-384', hashPair);\r\n\treturn await deepHashChunks(chunks.slice(1), newAcc);\r\n}\r\n","// import * as B64 from 'base64-js';\r\nimport { encode as fromByteArray, decode as toByteArray } from '@stablelib/base64';\r\nimport deepHash from './deepHash';\r\n// import * as BigNumber from 'bignumber.js';\r\nimport BigNumber from 'bignumber.js';\r\n\r\nexport type Base64UrlString = string;\r\n\r\nexport function concatBuffers(buffers: Uint8Array[] | ArrayBuffer[]): Uint8Array {\r\n\tlet total_length = 0;\r\n\r\n\tfor (let i = 0; i < buffers.length; i++) {\r\n\t\ttotal_length += buffers[i].byteLength;\r\n\t}\r\n\r\n\tlet temp = new Uint8Array(total_length);\r\n\tlet offset = 0;\r\n\r\n\ttemp.set(new Uint8Array(buffers[0]), offset);\r\n\toffset += buffers[0].byteLength;\r\n\r\n\tfor (let i = 1; i < buffers.length; i++) {\r\n\t\ttemp.set(new Uint8Array(buffers[i]), offset);\r\n\t\toffset += buffers[i].byteLength;\r\n\t}\r\n\r\n\treturn temp;\r\n}\r\n\r\nexport function b64UrlToString(b64UrlString: string): string {\r\n\tlet buffer = b64UrlToBuffer(b64UrlString);\r\n\r\n\t// TextEncoder will be available in browsers, but not in node\r\n\tif (typeof TextDecoder == 'undefined') {\r\n\t\tconst TextDecoder = require('util').TextDecoder;\r\n\t\treturn new TextDecoder('utf-8', { fatal: true }).decode(buffer);\r\n\t}\r\n\r\n\treturn new TextDecoder('utf-8', { fatal: true }).decode(buffer);\r\n}\r\n\r\nexport function bufferToString(buffer: Uint8Array | ArrayBuffer): string {\r\n\t// TextEncoder will be available in browsers, but not in node\r\n\tif (typeof TextDecoder == 'undefined') {\r\n\t\tconst TextDecoder = require('util').TextDecoder;\r\n\t\treturn new TextDecoder('utf-8', { fatal: true }).decode(buffer);\r\n\t}\r\n\r\n\treturn new TextDecoder('utf-8', { fatal: true }).decode(buffer);\r\n}\r\n\r\nexport function stringToBuffer(string: string): Uint8Array {\r\n\t// TextEncoder will be available in browsers, but not in node\r\n\tif (typeof TextEncoder == 'undefined') {\r\n\t\tconst TextEncoder = require('util').TextEncoder;\r\n\t\treturn new TextEncoder().encode(string);\r\n\t}\r\n\treturn new TextEncoder().encode(string);\r\n}\r\n\r\nexport function stringToB64Url(string: string): string {\r\n\treturn bufferTob64Url(stringToBuffer(string));\r\n}\r\n\r\nexport function b64UrlToBuffer(b64UrlString: string): Uint8Array {\r\n\treturn new Uint8Array(toByteArray(b64UrlDecode(b64UrlString)));\r\n}\r\n\r\nexport function bufferTob64(buffer: Uint8Array): string {\r\n\treturn fromByteArray(new Uint8Array(buffer));\r\n}\r\n\r\nexport function bufferTob64Url(buffer: Uint8Array): string {\r\n\treturn b64UrlEncode(bufferTob64(buffer));\r\n}\r\n\r\nexport function b64UrlEncode(b64UrlString: string): string {\r\n\treturn b64UrlString.replace(/\\+/g, '-').replace(/\\//g, '_').replace(/\\=/g, '');\r\n}\r\n\r\nexport function b64UrlDecode(b64UrlString: string): string {\r\n\tb64UrlString = b64UrlString.replace(/\\-/g, '+').replace(/\\_/g, '/');\r\n\tlet padding;\r\n\tb64UrlString.length % 4 == 0 ? (padding = 0) : (padding = 4 - (b64UrlString.length % 4));\r\n\treturn b64UrlString.concat('='.repeat(padding));\r\n}\r\n\r\nexport async function getSignatureData(tx): Promise<Uint8Array> {\r\n\t// Structured clone transfer strips all the fancy Function helpers\r\n\t// reconstruct Transaction Object to get them back\r\n\ttx = new Transaction(tx);\r\n\r\n\tswitch (tx.format) {\r\n\t\tcase 1:\r\n\t\t\tlet tags = tx.tags.reduce((accumulator: Uint8Array, tag: Tag) => {\r\n\t\t\t\treturn concatBuffers([\r\n\t\t\t\t\taccumulator,\r\n\t\t\t\t\ttag.get('name', { decode: true, string: false }),\r\n\t\t\t\t\ttag.get('value', { decode: true, string: false })\r\n\t\t\t\t]);\r\n\t\t\t}, new Uint8Array());\r\n\r\n\t\t\treturn concatBuffers([\r\n\t\t\t\ttx.get('owner', { decode: true, string: false }),\r\n\t\t\t\ttx.get('target', { decode: true, string: false }),\r\n\t\t\t\ttx.get('data', { decode: true, string: false }),\r\n\t\t\t\tstringToBuffer(tx.quantity),\r\n\t\t\t\tstringToBuffer(tx.reward),\r\n\t\t\t\ttx.get('last_tx', { decode: true, string: false }),\r\n\t\t\t\ttags\r\n\t\t\t]);\r\n\t\tcase 2:\r\n\t\t\tif (!tx.data_root) {\r\n\t\t\t\tawait tx.prepareChunks(tx.data);\r\n\t\t\t}\r\n\r\n\t\t\tconst tagList: [Uint8Array, Uint8Array][] = tx.tags.map((tag) => [\r\n\t\t\t\ttag.get('name', { decode: true, string: false }),\r\n\t\t\t\ttag.get('value', { decode: true, string: false })\r\n\t\t\t]);\r\n\r\n\t\t\treturn await deepHash([\r\n\t\t\t\tstringToBuffer(tx.format.toString()),\r\n\t\t\t\ttx.get('owner', { decode: true, string: false }),\r\n\t\t\t\ttx.get('target', { decode: true, string: false }),\r\n\t\t\t\tstringToBuffer(tx.quantity),\r\n\t\t\t\tstringToBuffer(tx.reward),\r\n\t\t\t\ttx.get('last_tx', { decode: true, string: false }),\r\n\t\t\t\ttagList,\r\n\t\t\t\tstringToBuffer(tx.data_size),\r\n\t\t\t\ttx.get('data_root', { decode: true, string: false })\r\n\t\t\t]);\r\n\t\tdefault:\r\n\t\t\tthrow new Error(`Unexpected transaction format: ${tx.format}`);\r\n\t}\r\n}\r\n\r\nexport function setSignature(\r\n\ttx,\r\n\t{\r\n\t\tid,\r\n\t\towner,\r\n\t\treward,\r\n\t\ttags,\r\n\t\tsignature\r\n\t}: {\r\n\t\tid: string;\r\n\t\towner: string;\r\n\t\treward?: string;\r\n\t\ttags?: Tag[];\r\n\t\tsignature: string;\r\n\t}\r\n) {\r\n\ttx.id = id;\r\n\ttx.owner = owner;\r\n\tif (reward) tx.reward = reward;\r\n\tif (tags) tx.tags = tags;\r\n\ttx.signature = signature;\r\n\treturn tx;\r\n}\r\n\r\n// from Arweave TX\r\n// https://github.com/ArweaveTeam/arweave-js/blob/8df379bfd2744fa3525fca8dee1f9d74f352bec6/src/common/lib/transaction.ts#L53\r\nclass BaseObject {\r\n\t[key: string]: any;\r\n\r\n\tpublic get(field: string): string;\r\n\tpublic get(field: string, options: { decode: true; string: false }): Uint8Array;\r\n\tpublic get(field: string, options: { decode: true; string: true }): string;\r\n\r\n\tpublic get(\r\n\t\tfield: string,\r\n\t\toptions?: {\r\n\t\t\tstring?: boolean;\r\n\t\t\tdecode?: boolean;\r\n\t\t}\r\n\t): string | Uint8Array | Tag[] {\r\n\t\tif (!Object.getOwnPropertyNames(this).includes(field)) {\r\n\t\t\tthrow new Error(`Field \"${field}\" is not a property of the Arweave Transaction class.`);\r\n\t\t}\r\n\r\n\t\t// Handle fields that are Uint8Arrays.\r\n\t\t// To maintain compat we encode them to b64url\r\n\t\t// if decode option is not specificed.\r\n\t\tif (this[field] instanceof Uint8Array) {\r\n\t\t\tif (options && options.decode && options.string) {\r\n\t\t\t\treturn bufferToString(this[field]);\r\n\t\t\t}\r\n\t\t\tif (options && options.decode && !options.string) {\r\n\t\t\t\treturn this[field];\r\n\t\t\t}\r\n\t\t\treturn bufferTob64Url(this[field]);\r\n\t\t}\r\n\r\n\t\tif (options && options.decode == true) {\r\n\t\t\tif (options && options.string) {\r\n\t\t\t\treturn b64UrlToString(this[field]);\r\n\t\t\t}\r\n\r\n\t\t\treturn b64UrlToBuffer(this[field]);\r\n\t\t}\r\n\r\n\t\treturn this[field];\r\n\t}\r\n}\r\n\r\nexport class Tag extends BaseObject {\r\n\treadonly name: string;\r\n\treadonly value: string;\r\n\r\n\tpublic constructor(name: string, value: string, decode = false) {\r\n\t\tsuper();\r\n\t\tthis.name = name;\r\n\t\tthis.value = value;\r\n\t}\r\n}\r\n\r\nexport interface TransactionInterface {\r\n\tformat: number;\r\n\tid: string;\r\n\tlast_tx: string;\r\n\towner: string;\r\n\ttags: Tag[];\r\n\ttarget: string;\r\n\tquantity: string;\r\n\tdata: Uint8Array;\r\n\treward: string;\r\n\tsignature: string;\r\n\tdata_size: string;\r\n\tdata_root: string;\r\n}\r\nexport default {};\r\nexport class Transaction extends BaseObject implements TransactionInterface {\r\n\tpublic readonly format: number = 2;\r\n\tpublic id: string = '';\r\n\tpublic readonly last_tx: string = '';\r\n\tpublic owner: string = '';\r\n\tpublic tags: Tag[] = [];\r\n\tpublic readonly target: string = '';\r\n\tpublic readonly quantity: string = '0';\r\n\tpublic readonly data_size: string = '0';\r\n\tpublic data: Uint8Array = new Uint8Array();\r\n\tpublic data_root: string = '';\r\n\tpublic reward: string = '0';\r\n\tpublic signature: string = '';\r\n\r\n\t// Computed when needed.\r\n\tpublic chunks?: {\r\n\t\tdata_root: Uint8Array;\r\n\t\tchunks: Chunk[];\r\n\t\tproofs: Proof[];\r\n\t};\r\n\r\n\tpublic constructor(attributes: Partial<TransactionInterface> = {}) {\r\n\t\tsuper();\r\n\t\tObject.assign(this, attributes);\r\n\r\n\t\t// If something passes in a Tx that has been toJSON'ed and back,\r\n\t\t// or where the data was filled in from /tx/data endpoint.\r\n\t\t// data will be b64url encoded, so decode it.\r\n\t\tif (typeof this.data === 'string') {\r\n\t\t\tthis.data = b64UrlToBuffer(this.data as string);\r\n\t\t}\r\n\r\n\t\tif (attributes.tags) {\r\n\t\t\tthis.tags = attributes.tags.map((tag: { name: string; value: string }) => {\r\n\t\t\t\treturn new Tag(tag.name, tag.value);\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\tpublic addTag(name: string, value: string) {\r\n\t\tthis.tags.push(new Tag(stringToB64Url(name), stringToB64Url(value)));\r\n\t}\r\n\r\n\tpublic toJSON() {\r\n\t\treturn {\r\n\t\t\tformat: this.format,\r\n\t\t\tid: this.id,\r\n\t\t\tlast_tx: this.last_tx,\r\n\t\t\towner: this.owner,\r\n\t\t\ttags: this.tags,\r\n\t\t\ttarget: this.target,\r\n\t\t\tquantity: this.quantity,\r\n\t\t\tdata: bufferTob64Url(this.data),\r\n\t\t\tdata_size: this.data_size,\r\n\t\t\tdata_root: this.data_root,\r\n\t\t\tdata_tree: this.data_tree,\r\n\t\t\treward: this.reward,\r\n\t\t\tsignature: this.signature\r\n\t\t};\r\n\t}\r\n\r\n\tpublic setOwner(owner: string) {\r\n\t\tthis.owner = owner;\r\n\t}\r\n\r\n\tpublic setSignature({\r\n\t\tid,\r\n\t\towner,\r\n\t\treward,\r\n\t\ttags,\r\n\t\tsignature\r\n\t}: {\r\n\t\tid: string;\r\n\t\towner: string;\r\n\t\treward?: string;\r\n\t\ttags?: Tag[];\r\n\t\tsignature: string;\r\n\t}) {\r\n\t\tthis.id = id;\r\n\t\tthis.owner = owner;\r\n\t\tif (reward) this.reward = reward;\r\n\t\tif (tags) this.tags = tags;\r\n\t\tthis.signature = signature;\r\n\t}\r\n\r\n\tpublic async prepareChunks(data: Uint8Array) {\r\n\t\t// Note: we *do not* use `this.data`, the caller may be\r\n\t\t// operating on a transaction with an zero length data field.\r\n\t\t// This function computes the chunks for the data passed in and\r\n\t\t// assigns the result to this transaction. It should not read the\r\n\t\t// data *from* this transaction.\r\n\r\n\t\tif (!this.chunks && data.byteLength > 0) {\r\n\t\t\tthis.chunks = await generateTransactionChunks(data);\r\n\t\t\tthis.data_root = bufferTob64Url(this.chunks.data_root);\r\n\t\t}\r\n\r\n\t\tif (!this.chunks && data.byteLength === 0) {\r\n\t\t\tthis.chunks = {\r\n\t\t\t\tchunks: [],\r\n\t\t\t\tdata_root: new Uint8Array(),\r\n\t\t\t\tproofs: []\r\n\t\t\t};\r\n\t\t\tthis.data_root = '';\r\n\t\t}\r\n\t}\r\n\r\n\t// Returns a chunk in a format suitable for posting to /chunk.\r\n\t// Similar to `prepareChunks()` this does not operate `this.data`,\r\n\t// instead using the data passed in.\r\n\tpublic getChunk(idx: number, data: Uint8Array) {\r\n\t\tif (!this.chunks) {\r\n\t\t\tthrow new Error(`Chunks have not been prepared`);\r\n\t\t}\r\n\t\tconst proof = this.chunks.proofs[idx];\r\n\t\tconst chunk = this.chunks.chunks[idx];\r\n\t\treturn {\r\n\t\t\tdata_root: this.data_root,\r\n\t\t\tdata_size: this.data_size,\r\n\t\t\tdata_path: bufferTob64Url(proof.proof),\r\n\t\t\toffset: proof.offset.toString(),\r\n\t\t\tchunk: bufferTob64Url(data.slice(chunk.minByteRange, chunk.maxByteRange))\r\n\t\t};\r\n\t}\r\n\r\n\tpublic async getSignatureData(): Promise<Uint8Array> {\r\n\t\tswitch (this.format) {\r\n\t\t\tcase 1:\r\n\t\t\t\tlet tags = this.tags.reduce((accumulator: Uint8Array, tag: Tag) => {\r\n\t\t\t\t\treturn concatBuffers([\r\n\t\t\t\t\t\taccumulator,\r\n\t\t\t\t\t\ttag.get('name', { decode: true, string: false }),\r\n\t\t\t\t\t\ttag.get('value', { decode: true, string: false })\r\n\t\t\t\t\t]);\r\n\t\t\t\t}, new Uint8Array());\r\n\r\n\t\t\t\treturn concatBuffers([\r\n\t\t\t\t\tthis.get('owner', { decode: true, string: false }),\r\n\t\t\t\t\tthis.get('target', { decode: true, string: false }),\r\n\t\t\t\t\tthis.get('data', { decode: true, string: false }),\r\n\t\t\t\t\tstringToBuffer(this.quantity),\r\n\t\t\t\t\tstringToBuffer(this.reward),\r\n\t\t\t\t\tthis.get('last_tx', { decode: true, string: false }),\r\n\t\t\t\t\ttags\r\n\t\t\t\t]);\r\n\t\t\tcase 2:\r\n\t\t\t\tif (!this.data_root) {\r\n\t\t\t\t\tawait this.prepareChunks(this.data);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst tagList: [Uint8Array, Uint8Array][] = this.tags.map((tag) => [\r\n\t\t\t\t\ttag.get('name', { decode: true, string: false }),\r\n\t\t\t\t\ttag.get('value', { decode: true, string: false })\r\n\t\t\t\t]);\r\n\r\n\t\t\t\treturn await deepHash([\r\n\t\t\t\t\tstringToBuffer(this.format.toString()),\r\n\t\t\t\t\tthis.get('owner', { decode: true, string: false }),\r\n\t\t\t\t\tthis.get('target', { decode: true, string: false }),\r\n\t\t\t\t\tstringToBuffer(this.quantity),\r\n\t\t\t\t\tstringToBuffer(this.reward),\r\n\t\t\t\t\tthis.get('last_tx', { decode: true, string: false }),\r\n\t\t\t\t\ttagList,\r\n\t\t\t\t\tstringToBuffer(this.data_size),\r\n\t\t\t\t\tthis.get('data_root', { decode: true, string: false })\r\n\t\t\t\t]);\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error(`Unexpected transaction format: ${this.format}`);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport function winstonToAr(\r\n\twinstonString: string,\r\n\t{ formatted = false, decimals = 12, trim = true } = {}\r\n) {\r\n\tlet number = stringToBigNum(winstonString, decimals).shiftedBy(-12);\r\n\r\n\treturn formatted ? number.toFormat(decimals) : number.toFixed(decimals);\r\n}\r\n\r\nexport function arToWinston(arString: string, { formatted = false } = {}) {\r\n\tlet number = stringToBigNum(arString).shiftedBy(12);\r\n\r\n\treturn formatted ? number.toFormat() : number.toFixed(0);\r\n}\r\n\r\nfunction stringToBigNum(stringValue: string, decimalPlaces: number = 12): BigNumber {\r\n\treturn BigNum(stringValue, decimalPlaces);\r\n}\r\n\r\nconst BigNum = (value: string, decimals: number): BigNumber => {\r\n\t// because of the way Vite builds libraries that have both commonjs and es modules :/\r\n\tlet instance;\r\n\ttry {\r\n\t\tinstance = BigNumber.clone({ DECIMAL_PLACES: decimals });\r\n\t} catch (error) {\r\n\t\tconsole.warn('Caught big num issues, try default', error);\r\n\t\tinstance = BigNumber.default.clone({ DECIMAL_PLACES: decimals });\r\n\t}\r\n\treturn new instance(value);\r\n};\r\n","<script>\r\n\timport * as ArweaveUtils from './arweave/utils';\r\n\timport Button from '../atomic/Button.svelte';\r\n\r\n\texport let props;\r\n\texport let handleConfirmed;\r\n\texport let handleDenied;\r\n\r\n\tconsole.log('Signing ', { params: props.params });\r\n\r\n\tconst transaction = props.params;\r\n\r\n\tlet tx = new ArweaveUtils.Transaction(transaction);\r\n\tlet tags = tx.tags.map((tag) => ({\r\n\t\tname: tag.get('name', { decode: true, string: true }),\r\n\t\tval: tag.get('value', { decode: true, string: true })\r\n\t}));\r\n</script>\r\n\r\n<!--\r\n{props} passes the properties down to <DefaultConfirmation>\r\nlet:props={p} gets them back up from the <DefaultConfirmation> slot\r\n-->\r\n{#if transaction}\r\n\t<div class=\"attention\">\r\n\t\t<!-- this is default content, override with slot -->\r\n\t\t<div>\r\n\t\t\t⚠️ Attention! You are about to sign ({props.method}) this Arweave transaction. Authorize to\r\n\t\t\tproceed?\r\n\t\t</div>\r\n\t\t<div>\r\n\t\t\tTags:<br />\r\n\t\t\t{#each tags as { name, val }}\r\n\t\t\t\t<li class={name.includes('App-Name') ? 'bold' : ''}>\r\n\t\t\t\t\t{name}:\r\n\t\t\t\t\t{val}\r\n\t\t\t\t</li>\r\n\t\t\t{/each}\r\n\t\t\t<!-- if transaction.data_size < 100000, cross out and thank uploadDataToBundlr.Network -->\r\n\t\t\tToken transfer:\r\n\t\t\t<span class={transaction.quantity == 0 ? 'green' : ''}>{transaction.quantity}</span><br />\r\n\t\t\tOne time storage Fee:\r\n\t\t\t<span class={transaction.data_size < 100000 ? 'line-through' : ''}\r\n\t\t\t\t>{transaction.reward} (~${(ArweaveUtils.winstonToAr(transaction.reward) * 100).toFixed(\r\n\t\t\t\t\t5\r\n\t\t\t\t)})</span\r\n\t\t\t>{#if transaction.data_size < 100000}\r\n\t\t\t\t<br />\r\n\t\t\t\t<span class=\"bold\">Thank you for using Bundlr.Network!</span>\r\n\t\t\t{/if}\r\n\t\t\t<br />\r\n\t\t</div>\r\n\t\t<div class=\"submit\">\r\n\t\t\t<Button type={'Yes'} clickHandler={handleConfirmed}>Yes</Button>\r\n\t\t\t<Button type={'No'} clickHandler={handleDenied}>No</Button>\r\n\t\t</div>\r\n\t</div>\r\n{/if}\r\n\r\n<style>\r\n\tdiv.attention {\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\tbackground-color: #fff9c4;\r\n\t\tfilter: drop-shadow(2px 4px 6px rgba(0, 0, 0, 0.3));\r\n\t}\r\n\tdiv {\r\n\t\tpadding: 0.3em;\r\n\t\tmargin: 0.3em;\r\n\t}\r\n\r\n\t.bold {\r\n\t\tfont-weight: bolder;\r\n\t}\r\n\tli {\r\n\t\toverflow-wrap: break-word;\r\n\t\tword-break: break-all;\r\n\t}\r\n</style>\r\n","<script>\r\n\timport Button from '../atomic/Button.svelte';\r\n\timport DefaultConfirmation from './DefaultConfirmation.svelte';\r\n\r\n\texport let props;\r\n\texport let handleConfirmed;\r\n\texport let handleDenied;\r\n\r\n\tconst decoder = new TextDecoder();\r\n\r\n\tlet defConf;\r\n</script>\r\n\r\n<!-- on:confirmed on:denied -- they just forward the event notification up to <Confirmer /> -->\r\n<!-- https://svelte.dev/tutorial/event-forwarding -->\r\n<div class=\"flex flex-col bg-yellow-100 drop-shadow-lg rounded-sm w-auto m-4 p-6\">\r\n\t<!-- this is default content, override with slot -->\r\n\t<div class=\"flex-1\">\r\n\t\t<!-- JSON.stringify(, null, 2)   decoder.decode()-->\r\n\t\t<!-- {props.params.toString()}  -->\r\n\t\t<!-- TODO: Data layouts for confirmer  -->\r\n\t\t⚠️ Sign this transaction?\r\n\t</div>\r\n\t<div class=\"flex-1 p-4\">\r\n\t\t<Button type={'Yes'} clickHandler={handleConfirmed}>Yes</Button>\r\n\t\t<Button type={'No'} clickHandler={handleDenied}>No</Button>\r\n\t</div>\r\n</div>\r\n","<script>\r\n\t// @ts-nocheck\r\n\r\n\timport Button from '../atomic/Button.svelte';\r\n\r\n\texport let props;\r\n\texport let handleConfirmed;\r\n\texport let handleDenied;\r\n\r\n\tconst decoder = new TextDecoder();\r\n\r\n\tlet defConf;\r\n</script>\r\n\r\n<!-- on:confirmed on:denied -- they just forward the event notification up to <Confirmer /> -->\r\n<!-- https://svelte.dev/tutorial/event-forwarding -->\r\n<div class=\"attention\">\r\n\t<!-- this is default content, override with slot -->\r\n\t<div>\r\n\t\t⚠️ Decrypt {decoder.decode(props.params.tag)}?\r\n\t</div>\r\n\t<div class=\"submit\">\r\n\t\t<Button type={'Yes'} clickHandler={handleConfirmed}>Yes</Button>\r\n\t\t<Button type={'No'} clickHandler={handleDenied}>No</Button>\r\n\t</div>\r\n</div>\r\n\r\n<style>\r\n\tdiv.attention {\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\tbackground-color: #fff9c4;\r\n\t\tfilter: drop-shadow(2px 4px 6px rgba(0, 0, 0, 0.3));\r\n\t\twidth: 100%;\r\n\t}\r\n\tdiv {\r\n\t\tpadding: 0.3em;\r\n\t\tmargin: 0.3em;\r\n\t}\r\n</style>\r\n","<script>\r\n\t// @ts-nocheck\r\n\r\n\timport Button from '../atomic/Button.svelte';\r\n\r\n\t// export let props;\r\n\texport let handleConfirmed;\r\n\texport let handleDenied;\r\n\r\n\tconst decoder = new TextDecoder();\r\n\r\n\tlet defConf;\r\n</script>\r\n\r\n<!-- on:confirmed on:denied -- they just forward the event notification up to <Confirmer /> -->\r\n<!-- https://svelte.dev/tutorial/event-forwarding -->\r\n<div class=\"attention\">\r\n\t<!-- this is default content, override with slot -->\r\n\t<div>⚠️ Allow this app to Decrypt data?</div>\r\n\t<div class=\"submit\">\r\n\t\t<Button type={'Yes'} clickHandler={handleConfirmed}>Yes</Button>\r\n\t\t<Button type={'No'} clickHandler={handleDenied}>No</Button>\r\n\t</div>\r\n</div>\r\n\r\n<style>\r\n\tdiv.attention {\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\tbackground-color: #fff9c4;\r\n\t\tfilter: drop-shadow(2px 4px 6px rgba(0, 0, 0, 0.3));\r\n\t\twidth: 100%;\r\n\t}\r\n\tdiv {\r\n\t\tpadding: 0.3em;\r\n\t\tmargin: 0.3em;\r\n\t}\r\n</style>\r\n","<script>\r\n\t// @ts-nocheck\r\n\r\n\timport Button from '../atomic/Button.svelte';\r\n\timport EncodingSelector from '../atomic/EncodingSelector.svelte';\r\n\r\n\texport let props;\r\n\texport let handleConfirmed;\r\n\texport let handleDenied;\r\n\r\n\tconst decoder = new TextDecoder();\r\n\r\n\tlet defConf;\r\n</script>\r\n\r\n<!-- on:confirmed on:denied -- they just forward the event notification up to <Confirmer /> -->\r\n<!-- https://svelte.dev/tutorial/event-forwarding -->\r\n<div class=\"attention rounded-lg m-4 p-4\">\r\n\t<!-- this is default content, override with slot -->\r\n\t<div class=\"break-all\">\r\n\t\t⚠️ Grant Access to {props.params.tag} for\r\n\t\t<EncodingSelector pubkey={props.params.targetPublicKey} />\r\n\t</div>\r\n\t<div class=\"submit\">\r\n\t\t<Button type={'Yes'} clickHandler={handleConfirmed}>Yes</Button>\r\n\t\t<Button type={'No'} clickHandler={handleDenied}>No</Button>\r\n\t</div>\r\n</div>\r\n\r\n<style>\r\n\tdiv.attention {\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\tbackground-color: #fff9c4;\r\n\t\tfilter: drop-shadow(2px 4px 6px rgba(0, 0, 0, 0.3));\r\n\t\twidth: 100%;\r\n\t}\r\n\tdiv {\r\n\t\tpadding: 0.3em;\r\n\t\tmargin: 0.3em;\r\n\t}\r\n</style>\r\n","import { handlers } from '@peerpiper/iframe-wallet-sdk';\r\nimport DefaultConfirmation from './DefaultConfirmation.svelte';\r\nimport Connect from './Connect.svelte';\r\nimport ArweaveSign from './ArweaveSign.svelte';\r\nimport Sign from './Sign.svelte';\r\nimport Decrypt from './Decrypt.svelte';\r\nimport ReDecrypt from './ReDecrypt.svelte';\r\nimport TransformEncrypt from './TransformEncrypt.svelte';\r\n\r\nlet confirmationComponents = {\r\n\tDefault: { component: DefaultConfirmation }\r\n};\r\n\r\n// setup boring defaults, can be overriden with fanicer by users\r\nfor (const [key, value] of Object.entries(handlers)) {\r\n\tconfirmationComponents[key] = { component: DefaultConfirmation };\r\n}\r\n\r\n// Customize certain confirmation components\r\nlet customizedComponents = {\r\n\tconnect: { component: Connect },\r\n\ted25519: {\r\n\t\tsign: {\r\n\t\t\tcomponent: Sign\r\n\t\t}\r\n\t},\r\n\tarweaveWalletAPI: {\r\n\t\tsign: {\r\n\t\t\tcomponent: ArweaveSign\r\n\t\t}\r\n\t},\r\n\tproxcryptor: {\r\n\t\tselfDecrypt: {\r\n\t\t\tcomponent: Decrypt\r\n\t\t},\r\n\t\ttransformEncrypt: {\r\n\t\t\tcomponent: TransformEncrypt\r\n\t\t},\r\n\t\treDecrypt: {\r\n\t\t\tcomponent: ReDecrypt\r\n\t\t}\r\n\t}\r\n};\r\n\r\nconfirmationComponents = { ...confirmationComponents, ...customizedComponents };\r\n\r\nexport { confirmationComponents };\r\n","<script>\r\n\t// @ts-nocheck\r\n\timport { onMount } from 'svelte';\r\n\r\n\timport { confirmationComponents } from './components/confirm/index';\r\n\r\n\texport let show;\r\n\texport let hide;\r\n\r\n\tconst leaf = (obj, path) => path.split('.').reduce((value, el) => value && value[el], obj);\r\n\r\n\tlet requests = [];\r\n\tlet handlers;\r\n\r\n\tonMount(async () => {\r\n\t\t({ handlers } = await import('@peerpiper/iframe-wallet-sdk'));\r\n\r\n\t\t// pass the above confirm function to the handlers so they can use it when their methods are called\r\n\t\thandlers.setConfig('confirm', confirm);\r\n\t});\r\n\t// set confirm fn\r\n\t// calling confirm adds a confirmation request to the list of outstanding request\r\n\t// resolving the Promise removes the request\r\n\t// if last request, hide() the UI\r\n\tasync function confirm(confirmSection, params) {\r\n\t\tconst component = confirmSection\r\n\t\t\t? leaf(confirmationComponents, confirmSection) || confirmationComponents.Default\r\n\t\t\t: false;\r\n\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\tconst handleConfirmed = () => {\r\n\t\t\t\tcommon();\r\n\t\t\t\tresolve(true); // signal handler to continue with action\r\n\t\t\t};\r\n\t\t\tconst handleDenied = () => {\r\n\t\t\t\tcommon();\r\n\t\t\t\tresolve(false); // signal handler to continue with action\r\n\t\t\t};\r\n\r\n\t\t\tconst thisRequest = { component, confirmSection, params, handleConfirmed, handleDenied };\r\n\r\n\t\t\tfunction common() {\r\n\t\t\t\trequests = requests.filter((req) => req !== thisRequest); // find and remove element\r\n\t\t\t\tif (requests.length == 0) hide(); // hide if last one removed\r\n\t\t\t}\r\n\r\n\t\t\trequests = [...requests, thisRequest];\r\n\t\t\tshow(); // trigger the UI to show this request\r\n\t\t});\r\n\t}\r\n</script>\r\n\r\n{#if requests}\r\n\t{#each requests as { component, confirmSection, params, handleConfirmed, handleDenied }}\r\n\t\t<div class=\"active\">\r\n\t\t\t<svelte:component\r\n\t\t\t\tthis={component.component}\r\n\t\t\t\tprops={{ method: confirmSection, params }}\r\n\t\t\t\t{handleConfirmed}\r\n\t\t\t\t{handleDenied}\r\n\t\t\t/>\r\n\t\t</div>\r\n\t{/each}\r\n{/if}\r\n\r\n<style>\r\n\t.active {\r\n\t\tdisplay: flex;\r\n\t\talign-items: center;\r\n\t\tmin-width: 350px;\r\n\t\tmin-height: 50px;\r\n\t\tflex-direction: column;\r\n\t}\r\n</style>\r\n"],"file":"_app/immutable/chunks/Confirmer-02e34705.js"}