{"version":3,"file":"index-f3824ee7.js","sources":["../../../../../../node_modules/js-cookie/src/js.cookie.js","../../../../../../node_modules/immortal-db/src/cookie-store.js","../../../../../../node_modules/idb-keyval/dist/idb-keyval.mjs","../../../../../../node_modules/immortal-db/src/indexed-db.js","../../../../../../node_modules/immortal-db/src/web-storage.js","../../../../../../node_modules/immortal-db/src/index.js"],"sourcesContent":["/*!\n * JavaScript Cookie v2.2.1\n * https://github.com/js-cookie/js-cookie\n *\n * Copyright 2006, 2015 Klaus Hartl & Fagner Brack\n * Released under the MIT license\n */\n;(function (factory) {\n\tvar registeredInModuleLoader;\n\tif (typeof define === 'function' && define.amd) {\n\t\tdefine(factory);\n\t\tregisteredInModuleLoader = true;\n\t}\n\tif (typeof exports === 'object') {\n\t\tmodule.exports = factory();\n\t\tregisteredInModuleLoader = true;\n\t}\n\tif (!registeredInModuleLoader) {\n\t\tvar OldCookies = window.Cookies;\n\t\tvar api = window.Cookies = factory();\n\t\tapi.noConflict = function () {\n\t\t\twindow.Cookies = OldCookies;\n\t\t\treturn api;\n\t\t};\n\t}\n}(function () {\n\tfunction extend () {\n\t\tvar i = 0;\n\t\tvar result = {};\n\t\tfor (; i < arguments.length; i++) {\n\t\t\tvar attributes = arguments[ i ];\n\t\t\tfor (var key in attributes) {\n\t\t\t\tresult[key] = attributes[key];\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n\n\tfunction decode (s) {\n\t\treturn s.replace(/(%[0-9A-Z]{2})+/g, decodeURIComponent);\n\t}\n\n\tfunction init (converter) {\n\t\tfunction api() {}\n\n\t\tfunction set (key, value, attributes) {\n\t\t\tif (typeof document === 'undefined') {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tattributes = extend({\n\t\t\t\tpath: '/'\n\t\t\t}, api.defaults, attributes);\n\n\t\t\tif (typeof attributes.expires === 'number') {\n\t\t\t\tattributes.expires = new Date(new Date() * 1 + attributes.expires * 864e+5);\n\t\t\t}\n\n\t\t\t// We're using \"expires\" because \"max-age\" is not supported by IE\n\t\t\tattributes.expires = attributes.expires ? attributes.expires.toUTCString() : '';\n\n\t\t\ttry {\n\t\t\t\tvar result = JSON.stringify(value);\n\t\t\t\tif (/^[\\{\\[]/.test(result)) {\n\t\t\t\t\tvalue = result;\n\t\t\t\t}\n\t\t\t} catch (e) {}\n\n\t\t\tvalue = converter.write ?\n\t\t\t\tconverter.write(value, key) :\n\t\t\t\tencodeURIComponent(String(value))\n\t\t\t\t\t.replace(/%(23|24|26|2B|3A|3C|3E|3D|2F|3F|40|5B|5D|5E|60|7B|7D|7C)/g, decodeURIComponent);\n\n\t\t\tkey = encodeURIComponent(String(key))\n\t\t\t\t.replace(/%(23|24|26|2B|5E|60|7C)/g, decodeURIComponent)\n\t\t\t\t.replace(/[\\(\\)]/g, escape);\n\n\t\t\tvar stringifiedAttributes = '';\n\t\t\tfor (var attributeName in attributes) {\n\t\t\t\tif (!attributes[attributeName]) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tstringifiedAttributes += '; ' + attributeName;\n\t\t\t\tif (attributes[attributeName] === true) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t// Considers RFC 6265 section 5.2:\n\t\t\t\t// ...\n\t\t\t\t// 3.  If the remaining unparsed-attributes contains a %x3B (\";\")\n\t\t\t\t//     character:\n\t\t\t\t// Consume the characters of the unparsed-attributes up to,\n\t\t\t\t// not including, the first %x3B (\";\") character.\n\t\t\t\t// ...\n\t\t\t\tstringifiedAttributes += '=' + attributes[attributeName].split(';')[0];\n\t\t\t}\n\n\t\t\treturn (document.cookie = key + '=' + value + stringifiedAttributes);\n\t\t}\n\n\t\tfunction get (key, json) {\n\t\t\tif (typeof document === 'undefined') {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar jar = {};\n\t\t\t// To prevent the for loop in the first place assign an empty array\n\t\t\t// in case there are no cookies at all.\n\t\t\tvar cookies = document.cookie ? document.cookie.split('; ') : [];\n\t\t\tvar i = 0;\n\n\t\t\tfor (; i < cookies.length; i++) {\n\t\t\t\tvar parts = cookies[i].split('=');\n\t\t\t\tvar cookie = parts.slice(1).join('=');\n\n\t\t\t\tif (!json && cookie.charAt(0) === '\"') {\n\t\t\t\t\tcookie = cookie.slice(1, -1);\n\t\t\t\t}\n\n\t\t\t\ttry {\n\t\t\t\t\tvar name = decode(parts[0]);\n\t\t\t\t\tcookie = (converter.read || converter)(cookie, name) ||\n\t\t\t\t\t\tdecode(cookie);\n\n\t\t\t\t\tif (json) {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tcookie = JSON.parse(cookie);\n\t\t\t\t\t\t} catch (e) {}\n\t\t\t\t\t}\n\n\t\t\t\t\tjar[name] = cookie;\n\n\t\t\t\t\tif (key === name) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t} catch (e) {}\n\t\t\t}\n\n\t\t\treturn key ? jar[key] : jar;\n\t\t}\n\n\t\tapi.set = set;\n\t\tapi.get = function (key) {\n\t\t\treturn get(key, false /* read as raw */);\n\t\t};\n\t\tapi.getJSON = function (key) {\n\t\t\treturn get(key, true /* read as json */);\n\t\t};\n\t\tapi.remove = function (key, attributes) {\n\t\t\tset(key, '', extend(attributes, {\n\t\t\t\texpires: -1\n\t\t\t}));\n\t\t};\n\n\t\tapi.defaults = {};\n\n\t\tapi.withConverter = init;\n\n\t\treturn api;\n\t}\n\n\treturn init(function () {});\n}));\n","//\n// ImmortalDB - A resilient key-value store for browsers.\n//\n// Ansgar Grunseid\n// grunseid.com\n// grunseid@gmail.com\n//\n// License: MIT\n//\n\nimport Cookies from 'js-cookie'\n\nconst DEFAULT_COOKIE_TTL = 365 // Days.\n// If this script is executing in a cross-origin iframe, the cookie must\n// be set with SameSite=None and Secure=true. See\n// https://web.dev/samesite-cookies-explained/ and\n// https://tools.ietf.org/html/draft-west-cookie-incrementalism-00 for\n// details on SameSite and cross-origin behavior.\nconst CROSS_ORIGIN_IFRAME = amIInsideACrossOriginIframe()\nconst DEFAULT_SECURE = (CROSS_ORIGIN_IFRAME ? true : false)\nconst DEFAULT_SAMESITE = (CROSS_ORIGIN_IFRAME ? 'None' : 'Lax')\n\nfunction amIInsideACrossOriginIframe () {\n  try {\n    // Raises ReferenceError if window isn't defined, eg if executed\n    // outside a browser.\n    //\n    // If inside a cross-origin iframe, raises: Uncaught\n    // DOMException: Blocked a frame with origin \"...\" from\n    // accessing a cross-origin frame.\n    return !Boolean(window.top.location.href)\n  } catch (err) {\n    return true\n  }\n}\n\nclass CookieStore {\n  constructor ({\n      ttl = DEFAULT_COOKIE_TTL,\n      secure = DEFAULT_SECURE,\n      sameSite = DEFAULT_SAMESITE} = {}) {\n    this.ttl = ttl\n    this.secure = secure\n    this.sameSite = sameSite\n\n    return (async () => this)()\n  }\n\n  async get (key) {\n    const value = Cookies.get(key)\n    return typeof value === 'string' ? value : undefined\n  }\n\n  async set (key, value) {\n    Cookies.set(key, value, this._constructCookieParams())\n  }\n\n  async remove (key) {\n    Cookies.remove(key, this._constructCookieParams())\n  }\n\n  _constructCookieParams () {\n    return {\n      expires: this.ttl,\n      secure: this.secure,\n      sameSite: this.sameSite,\n    }\n  }\n}\n\nexport { CookieStore }\n","class Store {\r\n    constructor(dbName = 'keyval-store', storeName = 'keyval') {\r\n        this.storeName = storeName;\r\n        this._dbp = new Promise((resolve, reject) => {\r\n            const openreq = indexedDB.open(dbName, 1);\r\n            openreq.onerror = () => reject(openreq.error);\r\n            openreq.onsuccess = () => resolve(openreq.result);\r\n            // First time setup: create an empty object store\r\n            openreq.onupgradeneeded = () => {\r\n                openreq.result.createObjectStore(storeName);\r\n            };\r\n        });\r\n    }\r\n    _withIDBStore(type, callback) {\r\n        return this._dbp.then(db => new Promise((resolve, reject) => {\r\n            const transaction = db.transaction(this.storeName, type);\r\n            transaction.oncomplete = () => resolve();\r\n            transaction.onabort = transaction.onerror = () => reject(transaction.error);\r\n            callback(transaction.objectStore(this.storeName));\r\n        }));\r\n    }\r\n}\r\nlet store;\r\nfunction getDefaultStore() {\r\n    if (!store)\r\n        store = new Store();\r\n    return store;\r\n}\r\nfunction get(key, store = getDefaultStore()) {\r\n    let req;\r\n    return store._withIDBStore('readonly', store => {\r\n        req = store.get(key);\r\n    }).then(() => req.result);\r\n}\r\nfunction set(key, value, store = getDefaultStore()) {\r\n    return store._withIDBStore('readwrite', store => {\r\n        store.put(value, key);\r\n    });\r\n}\r\nfunction del(key, store = getDefaultStore()) {\r\n    return store._withIDBStore('readwrite', store => {\r\n        store.delete(key);\r\n    });\r\n}\r\nfunction clear(store = getDefaultStore()) {\r\n    return store._withIDBStore('readwrite', store => {\r\n        store.clear();\r\n    });\r\n}\r\nfunction keys(store = getDefaultStore()) {\r\n    const keys = [];\r\n    return store._withIDBStore('readonly', store => {\r\n        // This would be store.getAllKeys(), but it isn't supported by Edge or Safari.\r\n        // And openKeyCursor isn't supported by Safari.\r\n        (store.openKeyCursor || store.openCursor).call(store).onsuccess = function () {\r\n            if (!this.result)\r\n                return;\r\n            keys.push(this.result.key);\r\n            this.result.continue();\r\n        };\r\n    }).then(() => keys);\r\n}\n\nexport { Store, get, set, del, clear, keys };\n","//\n// ImmortalDB - A resilient key-value store for browsers.\n//\n// Ansgar Grunseid\n// grunseid.com\n// grunseid@gmail.com\n//\n// License: MIT\n//\n\nimport {\n  Store,\n  get as idbGet,\n  set as idbSet,\n  del as idbRemove,\n} from 'idb-keyval'\n\nconst DEFAULT_DATABASE_NAME = 'ImmortalDB'\nconst DEFAULT_STORE_NAME = 'key-value-pairs'\n\nclass IndexedDbStore {\n  constructor (dbName = DEFAULT_DATABASE_NAME, storeName = DEFAULT_STORE_NAME) {\n    this.store = new Store(dbName, storeName)\n\n    return (async () => {\n      // Safari throws a SecurityError if IndexedDB.open() is called in a\n      // cross-origin iframe.\n      //\n      //   SecurityError: IDBFactory.open() called in an invalid security context\n      //\n      // Catch such and fail gracefully.\n      //\n      // TODO(grun): Update idb-keyval's Store class to fail gracefully in\n      // Safari. Push the fix(es) upstream.\n      try {\n        await this.store._dbp\n      } catch (err) {\n        if (err.name === 'SecurityError') {\n          return null // Failed to open an IndexedDB database.\n        } else {\n          throw err\n        }\n      }\n\n      return this\n    })()\n  }\n\n  async get (key) {\n    const value = await idbGet(key, this.store)\n    return typeof value === 'string' ? value : undefined\n  }\n\n  async set (key, value) {\n    await idbSet(key, value, this.store)\n  }\n\n  async remove (key) {\n    await idbRemove(key, this.store)\n  }\n}\n\nexport { IndexedDbStore, DEFAULT_DATABASE_NAME, DEFAULT_STORE_NAME }\n","//\n// ImmortalDB - A resilient key-value store for browsers.\n//\n// Ansgar Grunseid\n// grunseid.com\n// grunseid@gmail.com\n//\n// License: MIT\n//\n\nclass StorageApiWrapper {\n  constructor (store) {\n    this.store = store\n\n    return (async () => this)()\n  }\n\n  async get (key) {\n    const value = this.store.getItem(key)\n    return typeof value === 'string' ? value : undefined\n  }\n\n  async set (key, value) {\n    this.store.setItem(key, value)\n  }\n\n  async remove (key) {\n    this.store.removeItem(key)\n  }\n}\n\nclass LocalStorageStore extends StorageApiWrapper {\n  constructor () {\n    super(window.localStorage)\n  }\n}\n\nclass SessionStorageStore extends StorageApiWrapper {\n  constructor () {\n    super(window.sessionStorage)\n  }\n}\n\nexport { LocalStorageStore, SessionStorageStore }\n","//\n// ImmortalDB - A resilient key-value store for browsers.\n//\n// Ansgar Grunseid\n// grunseid.com\n// grunseid@gmail.com\n//\n// License: MIT\n//\n\nimport { CookieStore } from './cookie-store'\nimport { IndexedDbStore } from './indexed-db'\nimport { LocalStorageStore, SessionStorageStore } from './web-storage'\n\nconst cl = console.log\nconst DEFAULT_KEY_PREFIX = '_immortal|'\nconst WINDOW_IS_DEFINED = (typeof window !== 'undefined')\n\n// Stores must implement asynchronous constructor, get(), set(), and\n// remove() methods.\nconst DEFAULT_STORES = [CookieStore]\ntry {\n  if (WINDOW_IS_DEFINED && window.indexedDB) {\n    DEFAULT_STORES.push(IndexedDbStore)\n  }\n} catch (err) {}\n\ntry {\n  if (WINDOW_IS_DEFINED && window.localStorage) {\n    DEFAULT_STORES.push(LocalStorageStore)\n  }\n} catch (err) {}\n\nfunction arrayGet (arr, index, _default = null) {\n  if (index in arr) {\n    return arr[index]\n  }\n  return _default\n}\n\nfunction countUniques (iterable) {\n  // A Map must be used instead of an Object because JavaScript is a\n  // buttshit language and all Object keys are serialized to strings.\n  // Thus undefined becomes 'undefined', null becomes 'null', etc. Then,\n  // in turn, 'undefined' can't be differentiated from undefined, null\n  // from 'null', etc, and countUniques([null, 'null']) would\n  // incorrectly return {'null': 2} instead of {null: 1, 'null': 1}.\n  //\n  // Unfortunately this Object behavior precludes the use of\n  // lodash.countBy() and similar methods which count with Objects\n  // instead of Maps.\n  const m = new Map()\n  let eles = iterable.slice()\n\n  for (const ele of eles) {\n    let count = 0\n    for (const obj of eles) {\n      if (ele === obj) {\n        count += 1\n      }\n    }\n\n    if (count > 0) {\n      m.set(ele, count)\n      eles = eles.filter(obj => obj !== ele)\n    }\n  }\n\n  return m\n}\n\nclass ImmortalStorage {\n  constructor (stores = DEFAULT_STORES) {\n    this.stores = []\n\n    // Initialize stores asynchronously. Accept both instantiated store\n    // objects and uninstantiated store classes. If the latter,\n    // implicitly instantiate instances thereof in this constructor.\n    //\n    // This constructor must accept both instantiated store objects and\n    // uninstantiated store classes because it's impossible to export\n    // ImmortalStore if it only took store objects initialized\n    // asynchronously. Like:\n    //\n    //   ;(async () => {\n    //       const cookieStore = await CookieStore()\n    //       const ImmortalDB = new ImmortalStorage([cookieStore])\n    //       export { ImmortalDB }  // <----- Doesn't work.\n    //   })\n    //\n    // So to export a synchronous ImmortalStorage class, datastore\n    // classes (whose definitions are synchronous) must be accepted in\n    // addition to instantiated store objects.\n    this.onReady = (async () => {\n      this.stores = (await Promise.all(\n        stores.map(async StoreClassOrInstance => {\n          if (typeof StoreClassOrInstance === 'object') { // Store instance.\n            return StoreClassOrInstance\n          } else { // Store class.\n            try {\n              return await new StoreClassOrInstance() // Instantiate instance.\n            } catch (err) {\n              // TODO(grun): Log (where?) that the <Store> constructor Promise\n              // failed.\n              return null\n            }\n          }\n        }),\n      )).filter(Boolean)\n    })()\n  }\n\n  async get (key, _default = null) {\n    await this.onReady\n\n    const prefixedKey = `${DEFAULT_KEY_PREFIX}${key}`\n\n    const values = await Promise.all(\n      this.stores.map(async store => {\n        try {\n          return await store.get(prefixedKey)\n        } catch (err) {\n          cl(err)\n        }\n      }),\n    )\n\n    const counted = Array.from(countUniques(values).entries())\n    counted.sort((a, b) => a[1] <= b[1])\n\n    let value\n    const [firstValue, firstCount] = arrayGet(counted, 0, [undefined, 0])\n    const [secondValue, secondCount] = arrayGet(counted, 1, [undefined, 0])\n    if (\n      firstCount > secondCount ||\n      (firstCount === secondCount && firstValue !== undefined)\n    ) {\n      value = firstValue\n    } else {\n      value = secondValue\n    }\n\n    if (value !== undefined) {\n      await this.set(key, value)\n      return value\n    } else {\n      await this.remove(key)\n      return _default\n    }\n  }\n\n  async set (key, value) {\n    await this.onReady\n\n    key = `${DEFAULT_KEY_PREFIX}${key}`\n\n    await Promise.all(\n      this.stores.map(async store => {\n        try {\n          await store.set(key, value)\n        } catch (err) {\n          cl(err)\n        }\n      }),\n    )\n\n    return value\n  }\n\n  async remove (key) {\n    await this.onReady\n\n    key = `${DEFAULT_KEY_PREFIX}${key}`\n\n    await Promise.all(\n      this.stores.map(async store => {\n        try {\n          await store.remove(key)\n        } catch (err) {\n          cl(err)\n        }\n      }),\n    )\n  }\n}\n\nconst ImmortalDB = new ImmortalStorage()\n\nexport {\n  ImmortalDB,\n  ImmortalStorage,\n  CookieStore,\n  IndexedDbStore,\n  LocalStorageStore,\n  SessionStorageStore,\n  DEFAULT_STORES,\n  DEFAULT_KEY_PREFIX,\n}\n"],"names":["set","get","store","idbGet","idbSet","idbRemove"],"mappings":"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"}