{"version":3,"mappings":"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","names":["LUT_HEX_4b","LUT_HEX_8b","n","insert_hydration","target","append_hydration","div","svg","ctx","div_intro","duration","div1","clip","copied","copy","promise","$$invalidate","$$value","blob","filename","url","link","div3","div2","div0","quintOut","section","button","node","initialEnabled","cb","enabled","handleOutsideClick","showWarning","toggle","show","exportKeyfile","$storedValue","bytes","str","downloadBlob","e","set_data","func_1","show_if","func","dirty","each_value_1","func_2","i","each_value","func_3","if_block","create_if_block","k","is_function","createEventDispatcher","creating","keys","generateMnemonic","generateRsaJwk","loadSecrets","getLoadedKeys","onMount","handleGenerateKeypair","rsajwk","set_store_value","mnemonic","loadKeys","dispatch"],"sources":["../../../../../../src/lib/frontend/utils.ts","../../../../../../src/lib/frontend/Clipboard.svelte","../../../../../../src/lib/frontend/downloadBlob.js","../../../../../../src/lib/frontend/Menu.svelte","../../../../../../src/lib/frontend/ListKeys.svelte","../../../../../../src/lib/frontend/GetKeys.svelte"],"sourcesContent":["// Pre-Init\r\nconst LUT_HEX_4b = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'A', 'B', 'C', 'D', 'E', 'F'];\r\nconst LUT_HEX_8b = new Array(0x100);\r\nfor (let n = 0; n < 0x100; n++) {\r\n\tLUT_HEX_8b[n] = `${LUT_HEX_4b[(n >>> 4) & 0xf]}${LUT_HEX_4b[n & 0xf]}`;\r\n}\r\n\r\n// End Pre-Init\r\nexport function bufftoHex(buffer) {\r\n\tlet out = '';\r\n\tfor (let idx = 0, edx = buffer.length; idx < edx; idx++) {\r\n\t\tout += LUT_HEX_8b[buffer[idx]];\r\n\t}\r\n\treturn out;\r\n}\r\n\r\nexport const shorten = (key: string, start = 6, end = 6) => {\r\n\tif (key.length < start + end + 3) return key;\r\n\treturn key.slice(0, start) + '...' + key.slice(key.length - end, key.length);\r\n};\r\n\r\nexport const shortenURL = (key: string) => {\r\n\tconst tail = 30;\r\n\tconst start = 'https://'.length; // key.slice(start, Math.min(start, 8)) +\r\n\tconst end = Math.max(key.length - tail, 0);\r\n\tconst maybeEllips = key.length > tail ? '..' : '';\r\n\treturn maybeEllips + key.slice(end, key.length);\r\n};\r\n\r\n// https://github.com/w3c/webextensions/issues/78#issuecomment-1243309960\r\n/**\r\n * Create iframe with a random token in the URL inside a closed ShadowDOM so the site cannot see it\r\n * Then send MessageChannel's port into the iframe that will be accepted only if the message equals that random token\r\n * then this port will be used for all communication.\r\n */\r\n// let reqs, host, shadow, iframe, channel;\r\n// export async function bgFetch(url, init) {\r\n// \tconst id = Math.random();\r\n// \tconst { stack } = new Error();\r\n// \tconst { headers } = init || {};\r\n// \tif (headers instanceof Headers) {\r\n// \t\tinit = { ...init, headers: Object.fromEntries(headers) };\r\n// \t}\r\n// \tif (!iframe?.contentWindow) {\r\n// \t\tawait initFrame();\r\n// \t}\r\n// \treturn new Promise((resolve, reject) => {\r\n// \t\treqs[id] = { resolve, reject, stack };\r\n// \t\tchannel.port1.postMessage({ id, url, init });\r\n// \t\t// TODO: autocreate `transfer` from `init`\r\n// \t});\r\n// }\r\n\r\n// export async function initFrame() {\r\n// \tif (reqs) Object.values(reqs).forEach((req) => req.reject('iframeKilled'));\r\n// \treqs = {};\r\n// \thost = document.createElement('div');\r\n// \tshadow = host.attachShadow({ mode: 'closed' });\r\n// \t(shadow.adoptedStyleSheets = [new CSSStyleSheet()])[0].replaceSync(\r\n// \t\t':host { display: none !important }'\r\n// \t);\r\n// \tiframe = shadow.appendChild(document.createElement('iframe'));\r\n// \tiframe.src = chrome.runtime.getURL('sender.html?id=' + Math.random());\r\n// \tshadow.appendChild(iframe);\r\n// \t(document.body || document.documentElement).appendChild(host);\r\n// \tawait new Promise((resolve) => (iframe.onload = resolve));\r\n// \tchannel = new MessageChannel();\r\n// \tchannel.port1.onmessage = onFrameMessage;\r\n// \tiframe.contentWindow.postMessage(iframe.src, '*', [channel.port2]);\r\n// }\r\n\r\n// export function onFrameMessage(e) {\r\n// \tconst { id, result, error } = e.data;\r\n// \tconst { resolve, reject, stack } = reqs[id];\r\n// \tdelete reqs[id];\r\n// \tif (error) reject(Object.assign(new Error(error), { stack }));\r\n// \telse resolve(new Response(...result));\r\n// }\r\n","<script>\r\n\t// @ts-nocheck\r\n\timport { fade } from 'svelte/transition';\r\n\r\n\texport let value = null;\r\n\r\n\tlet clip;\r\n\tlet copied;\r\n\tlet duration = 2000;\r\n\r\n\tasync function copy() {\r\n\t\tvar promise = navigator.clipboard.writeText(clip.innerHTML);\r\n\t\tawait promise;\r\n\t\tvalue = promise;\r\n\t\tcopied = true;\r\n\t\tsetTimeout(() => (copied = false), 1);\r\n\t}\r\n</script>\r\n\r\n<!-- Clipboard  -->\r\n<div class=\"Clipboard-Container\" on:click={copy}>\r\n\t{#if copied}\r\n\t\t<div out:fade={{ duration }}>✔️Copied</div>\r\n\t{:else}\r\n\t\t<div in:fade={{ duration: 0, delay: duration }}>\r\n\t\t\t<svg\r\n\t\t\t\ton:click={copy}\r\n\t\t\t\tclass=\"octicon octicon-clippy\"\r\n\t\t\t\tviewBox=\"0 0 14 16\"\r\n\t\t\t\tversion=\"1.1\"\r\n\t\t\t\twidth=\"14\"\r\n\t\t\t\theight=\"16\"\r\n\t\t\t\taria-hidden=\"true\"\r\n\t\t\t\tstroke=\"currentColor\"\r\n\t\t\t>\r\n\t\t\t\t<title>Copy to clipboard</title>\r\n\t\t\t\t<path\r\n\t\t\t\t\tfill-rule=\"evenodd\"\r\n\t\t\t\t\td=\"M2 13h4v1H2v-1zm5-6H2v1h5V7zm2 3V8l-3 3 3 3v-2h5v-2H9zM4.5 9H2v1h2.5V9zM2 12h2.5v-1H2v1zm9 1h1v2c-.02.28-.11.52-.3.7-.19.18-.42.28-.7.3H1c-.55 0-1-.45-1-1V4c0-.55.45-1 1-1h3c0-1.11.89-2 2-2 1.11 0 2 .89 2 2h3c.55 0 1 .45 1 1v5h-1V6H1v9h10v-2zM2 5h8c0-.55-.45-1-1-1H8c-.55 0-1-.45-1-1s-.45-1-1-1-1 .45-1 1-.45 1-1 1H3c-.55 0-1 .45-1 1z\"\r\n\t\t\t\t/>\r\n\t\t\t</svg>\r\n\t\t</div>\r\n\t{/if}\r\n\t<div class=\"Clipboard text-ellipsis overflow-hidden\" bind:this={clip}>\r\n\t\t<slot {copy} />\r\n\t</div>\r\n</div>\r\n\r\n<style>\r\n\t.Clipboard {\r\n\t\tmargin: 0 0.5em;\r\n\t\tword-break: break-all;\r\n\t}\r\n\t.Clipboard-Container {\r\n\t\tdisplay: flex;\r\n\t}\r\n\t.Clipboard-Container,\r\n\tsvg {\r\n\t\tcursor: pointer;\r\n\t}\r\n\tsvg {\r\n\t\tcursor: pointer;\r\n\t\tbackground-color: transparent;\r\n\t\tfill: transparent;\r\n\t\twidth: auto;\r\n\t\theight: 1.5em;\r\n\t}\r\n</style>\r\n","export default (blob, filename) => {\r\n\tconst url = URL.createObjectURL(blob);\r\n\tconst link = document.createElement('a');\r\n\tlink.href = url;\r\n\tlink.download = filename;\r\n\tlink.style.display = 'none';\r\n\tdocument.body.appendChild(link);\r\n\tlink.click();\r\n\tURL.revokeObjectURL(url);\r\n\tlink.remove();\r\n};\r\n","<script>\r\n\t// @ts-nocheck\r\n\r\n\timport { slide } from 'svelte/transition';\r\n\timport { quintOut } from 'svelte/easing';\r\n\timport { storedValue } from './stores';\r\n\timport downloadBlob from './downloadBlob.js';\r\n\r\n\tlet show = false;\r\n\tlet showWarning = false;\r\n\r\n\tfunction toggle() {\r\n\t\tshowWarning = false;\r\n\t\tshow = !show;\r\n\t}\r\n\r\n\tfunction exportKeyfile() {\r\n\t\tshowWarning = false;\r\n\t\tif (!$storedValue?.rsajwk) {\r\n\t\t\tconsole.log('No RSA key found');\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tconst str = JSON.stringify($storedValue.rsajwk);\r\n\t\tconst bytes = new TextEncoder().encode(str);\r\n\t\tconst blob = new Blob([bytes], {\r\n\t\t\ttype: 'application/json;charset=utf-8'\r\n\t\t});\r\n\t\tdownloadBlob(blob, `arweave-keyfile-${$storedValue?.rsajwk?.kid || 'noname'}.json`);\r\n\t\tconsole.log('export keyfile');\r\n\t}\r\n\r\n\tfunction clickOutside(node, { enabled: initialEnabled, cb }) {\r\n\t\tconst handleOutsideClick = ({ target }) => {\r\n\t\t\tif (!node.contains(target)) {\r\n\t\t\t\tcb();\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tfunction update({ enabled }) {\r\n\t\t\tif (enabled) {\r\n\t\t\t\twindow.addEventListener('click', handleOutsideClick);\r\n\t\t\t} else {\r\n\t\t\t\twindow.removeEventListener('click', handleOutsideClick);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tupdate({ enabled: initialEnabled });\r\n\t\treturn {\r\n\t\t\tupdate,\r\n\t\t\tdestroy() {\r\n\t\t\t\twindow.removeEventListener('click', handleOutsideClick);\r\n\t\t\t}\r\n\t\t};\r\n\t}\r\n</script>\r\n\r\n<section class=\"grow\" use:clickOutside={{ enabled: show, cb: () => (show = false) }}>\r\n\t<div>\r\n\t\t<button class=\"m-auto w-full\" on:click={toggle}>\r\n\t\t\t<div class=\"p-6 flex flex-row-reverse\">\r\n\t\t\t\t<!-- vertical ellipsis -->\r\n\t\t\t\t<svg\r\n\t\t\t\t\txmlns=\"http://www.w3.org/2000/svg\"\r\n\t\t\t\t\tclass=\"h-6 w-6\"\r\n\t\t\t\t\tfill=\"none\"\r\n\t\t\t\t\tviewBox=\"0 0 24 24\"\r\n\t\t\t\t\tstroke=\"currentColor\"\r\n\t\t\t\t>\r\n\t\t\t\t\t<path\r\n\t\t\t\t\t\tstroke-linecap=\"round\"\r\n\t\t\t\t\t\tstroke-linejoin=\"round\"\r\n\t\t\t\t\t\tstroke-width=\"2\"\r\n\t\t\t\t\t\td=\"M4 6h16M4 12h16M4 18h16\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t</svg>\r\n\t\t\t</div>\r\n\t\t</button>\r\n\t</div>\r\n\t<div class=\"relative\">\r\n\t\t<div class=\"absolute m-2 w-48 top-0 right-0 text-toxic\">\r\n\t\t\t{#if show}\r\n\t\t\t\t<div\r\n\t\t\t\t\ttransition:slide={{ delay: 100, duration: 300, easing: quintOut }}\r\n\t\t\t\t\ton:click|preventDefault={(e) => (showWarning = true)}\r\n\t\t\t\t\tclass=\"card relative cursor-pointer text-toxic p-4 border border-toxic shadow-md shadow-toxic/50 rounded-lg w-auto bg-neutral-800\"\r\n\t\t\t\t>\r\n\t\t\t\t\t<!-- donwload svg icon, arrow pointing down to tray  -->\r\n\t\t\t\t\t<div class=\"flex flex-row\">\r\n\t\t\t\t\t\t<div class=\"flex-1\">\r\n\t\t\t\t\t\t\t<svg\r\n\t\t\t\t\t\t\t\txmlns=\"http://www.w3.org/2000/svg\"\r\n\t\t\t\t\t\t\t\tclass=\"h-6 w-6 m-2\"\r\n\t\t\t\t\t\t\t\tfill=\"none\"\r\n\t\t\t\t\t\t\t\tviewBox=\"0 0 24 24\"\r\n\t\t\t\t\t\t\t\tstroke=\"currentColor\"\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<path\r\n\t\t\t\t\t\t\t\t\tstroke-linecap=\"round\"\r\n\t\t\t\t\t\t\t\t\tstroke-linejoin=\"round\"\r\n\t\t\t\t\t\t\t\t\tstroke-width=\"2\"\r\n\t\t\t\t\t\t\t\t\td=\"M19 13l-7 7-7-7m14-8l-7 7-7-7\"\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</svg>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div class=\"flex-1\">Download Arweave KeyFile</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t{#if showWarning}\r\n\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\tclass=\"text-yellow-400 w-full cursor-default\"\r\n\t\t\t\t\t\t\ttransition:slide={{ delay: 50, duration: 200, easing: quintOut }}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t⚠️ Warning: Do not give your key file to anyone, these are your secret keys!\r\n\r\n\t\t\t\t\t\t\t<!-- I undetsand, start download -->\r\n\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\tclass=\"my-4 border border-toxic rounded-lg bg-green-500 text-white\"\r\n\t\t\t\t\t\t\t\ton:click|preventDefault={exportKeyfile}>Understood, Start Download</button\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t{/if}\r\n\t\t\t\t</div>\r\n\t\t\t{/if}\r\n\t\t</div>\r\n\t</div>\r\n</section>\r\n","<script>\r\n\t// @ts-nocheck\r\n\r\n\t// show the user's keys\r\n\t// parse out the JWKs into types: RSA and Ed25519 according to JWK\r\n\timport { shorten, bufftoHex } from './utils';\r\n\timport Clipboard from './Clipboard.svelte';\r\n\timport EncodingSelector from './components/atomic/EncodingSelector.svelte';\r\n\timport Menu from './Menu.svelte';\r\n\timport { slide } from 'svelte/transition';\r\n\timport { quintOut } from 'svelte/easing';\r\n\r\n\texport let keys;\r\n\r\n\tlet show = false;\r\n</script>\r\n\r\n{#if keys && keys.length > 0}\r\n\t<div class=\"flex flex-row justify-around text-toxic\">\r\n\t\t<button\r\n\t\t\tclass=\"grow m-4 bg-neutral-800 shadow-toxic shadow rounded-lg select-none cursor-pointer\"\r\n\t\t\ton:click={(e) => (show = !show)}>{show ? 'Hide' : 'Show'} Keys</button\r\n\t\t>\r\n\t\t<Menu />\r\n\t</div>\r\n\t{#if show}\r\n\t\t<div\r\n\t\t\tclass=\"card text-toxic shadow-md shadow-toxic/50 rounded-lg p-4 m-4 w-auto bg-neutral-800\"\r\n\t\t\ttransition:slide={{ delay: 100, duration: 300, easing: quintOut }}\r\n\t\t>\r\n\t\t\t{#if keys.filter((k) => k.publicKeyJWK.kty == 'RSA').length}\r\n\t\t\t\t<div class=\"keylist overflow-hidden\">\r\n\t\t\t\t\t<div class=\"row left\">\r\n\t\t\t\t\t\t<span>Arweave</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div class=\"row list-group\">\r\n\t\t\t\t\t\t{#each keys.filter((k) => k.publicKeyJWK.kty == 'RSA') as rsaJWK}\r\n\t\t\t\t\t\t\t<div class=\"flex flex-col\">\r\n\t\t\t\t\t\t\t\t<div class=\"flex-1 text-ellipsis overflow-hidden\">\r\n\t\t\t\t\t\t\t\t\t<span class=\"text-sm\"><Clipboard>{rsaJWK.publicKeyJWK.kid}</Clipboard></span>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t{/each}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t{/if}\r\n\t\t\t{#if keys.filter((k) => k.publicKeyJWK.crv == 'Ed25519')}\r\n\t\t\t\t<div class=\"keylist\">\r\n\t\t\t\t\t<div class=\"row left\">\r\n\t\t\t\t\t\t<span>Ed25519</span>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div class=\"row list-group\">\r\n\t\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t\t{#each keys.filter((k) => k.publicKeyJWK.crv == 'Ed25519') as edJWK}\r\n\t\t\t\t\t\t\t\t<EncodingSelector pubkey={new Uint8Array(edJWK.publicKey)} let:encoded>\r\n\t\t\t\t\t\t\t\t\t<span class=\"text-sm\"><Clipboard>{encoded}</Clipboard></span>\r\n\t\t\t\t\t\t\t\t</EncodingSelector>\r\n\t\t\t\t\t\t\t{/each}\r\n\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t{/if}\r\n\t\t</div>\r\n\t{/if}\r\n{/if}\r\n\r\n<style>\r\n</style>\r\n","<script lang=\"ts\">\r\n\t/**\r\n\tKeys can come from:\r\n\t- Loaded from storage (index.svelte, in which case this component is not needed)\r\n\t- Generated from scratch (here)\r\n\t- Load by user (here)\r\n\r\n\tkeys get saved to $storedValue which trigger the ImmortalDB saved\r\n\t*/\r\n\timport { onMount, createEventDispatcher } from 'svelte';\r\n\timport { storedValue } from './stores';\r\n\r\n\timport ListKeys from './ListKeys.svelte';\r\n\r\n\tconst dispatch = createEventDispatcher();\r\n\r\n\tlet handleGenerateKeypair:\r\n\t\t| ((event: MouseEvent & { currentTarget: EventTarget & HTMLButtonElement }) => void)\r\n\t\t| null = null;\r\n\r\n\t// state variables\r\n\tlet creating = '';\r\n\tlet keys: {\r\n\t\tname: string;\r\n\t\tpublicKey: string; // todo: to UInt8Array?\r\n\t\tpublicKeyJWK: {\r\n\t\t\tkty: string;\r\n\t\t\tkid: string;\r\n\t\t\te: string; //'AQAB'; //  value 65537, the octet sequence to be base64url-encoded MUST consist of the three octets [1, 0, 1]; the resulting representation for this value is \"AQAB\"\r\n\t\t\tn: string; // keyDetails.n;\r\n\t\t}; // already a JWK\r\n\t\tpublicKeyBase58: string; // address = base64URL encoded hash of jwk.n\r\n\t}[];\r\n\r\n\tlet generateMnemonic, generateRsaJwk, loadSecrets, getLoadedKeys;\r\n\r\n\tonMount(async () => {\r\n\t\t({ generateMnemonic, generateRsaJwk, loadSecrets, getLoadedKeys } = await import(\r\n\t\t\t'@peerpiper/iframe-wallet-sdk'\r\n\t\t));\r\n\t\thandleGenerateKeypair = async () => {\r\n\t\t\tcreating = 'Creating keypairs...';\r\n\r\n\t\t\tconst mnemonic = await generateMnemonic();\r\n\t\t\tconst rsajwk = await generateRsaJwk();\r\n\r\n\t\t\t// save to storedValue.\r\n\t\t\t// TODO: offer password protection/encryption?\r\n\t\t\t$storedValue = { ...$storedValue, mnemonic, rsajwk };\r\n\r\n\t\t\tcreating += '<br/>Created mnemonic.';\r\n\t\t\tcreating += `<br/>${mnemonic}`;\r\n\t\t\tcreating += '<br/>Creating master keypair (type ed25519)...';\r\n\t\t};\r\n\t});\r\n\r\n\t$: if (!!loadSecrets && !!getLoadedKeys && $storedValue && $storedValue.mnemonic) loadKeys(); // load keys once there is a storedValue\r\n\r\n\tasync function loadKeys() {\r\n\t\tawait loadSecrets({ mnemonic: $storedValue.mnemonic, rsajwk: $storedValue.rsajwk });\r\n\r\n\t\tdispatch('loadedKeys', 'details'); // let parent component know\r\n\t\tkeys = getLoadedKeys(); // get all proxcryptor public key info\r\n\t}\r\n</script>\r\n\r\n{#if handleGenerateKeypair}\r\n\t{#if ($storedValue != undefined && $storedValue == null) || !$storedValue?.mnemonic || !$storedValue?.rsajwk}\r\n\t\t<!-- Show \"Create Keys\" if no keys exist, no matter what page is showing -- toolbar? -->\r\n\t\t<div class=\"submit flex flex-col text-black bg-yellow-300 shadow p-8 m-4 rounded w-fit\">\r\n\t\t\t<button\r\n\t\t\t\tclass=\"bg-green-500 rounded shadow-lg shadow-slate-600/50 p-4 w-fit m-4 text-white\"\r\n\t\t\t\ton:click={handleGenerateKeypair}>Create New Keypairs</button\r\n\t\t\t>\r\n\t\t\t{@html creating}\r\n\t\t</div>\r\n\t{:else}\r\n\t\t<!-- GetKeys: has storedValue, sending to Connector if in Opened window. Else, allowing user to manage keys.<br /> -->\r\n\t\t<ListKeys {keys} />\r\n\t{/if}\r\n{/if}\r\n\r\n<style>\r\n\tdiv {\r\n\t\tpadding: 2em;\r\n\t}\r\n</style>\r\n"],"file":"_app/immutable/chunks/GetKeys-78c8de06.js"}