{"version":3,"mappings":";;;;;;;;;;;;eAewD,KAAG;AAAA;;4BAAH,KAAG;AAAA;;;;;;;;;;;;;;eACP,IAAE;AAAA;;4BAAF,IAAE;AAAA;;;;;;;;;;;;;;;AAJpC,wBAAM,SAAM;;;;;;;;;;;YAGZ;AAAA,oBAAqB,IAAe;AAAA;;;;;;YACpC;AAAA,oBAAoB,IAAY;AAAA;;;;;;;;;gBAL1C,yBACS;;gBAAc,oBAC5B;;;;;;;;;;;;;;;kCAFK,yBACS;;kCAAc,oBAC5B;;;;;;;;;;;;;;;;;;;;AAJF,uBAUM;AATL,uBAQM;AAPL,uBAEM;;;;;AACN,uBAGM;;;;;;;AALS,sEAAM,SAAM;AAAA;;;uCAGSA,KAAe;;;;;;;uCAChBA,KAAY;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAbtC,gBAAU,UAAQ,IAAI,QAAM;QAC5B,gBAAe;QACf,aAAY;;;;;;;;;;;;;;;;;;;;;;;;;;;;eCaqC,KAAG;AAAA;;4BAAH,KAAG;AAAA;;;;;;;;;;;;;;iBAHnD,IAAC,GAAC,OAAO,SAAM;;;;;;;;;;;;YAGX;AAAA,MAAqB,qBAAQ;AAAA;;;;;;;;gBAJvC,qBACK;;gBAAiB,eAAa;;gBAAG,QAAM;gBAAI,OACrD;;;;;;;;;;;kCAFK,qBACK;;kCAAiB,eAAa;;;+BAAG,QAAM;;kCAAI,OACrD;;;;;;;;;;;;;;;;AAJD,uBAQM;AANL,uBAEM;;;;AADkC,uBAAa;;;;AAErD,uBAEM;;;;;+DAJKA,KAAC,GAAC,OAAO,SAAM;AAAA;;AAGU;AAAA,8CAAQ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;kBAPc,EAAC;AAAA,kBAAD,EAAC;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QALjD,MAAK;MAEZ;;;AAG2B,gBAAO;;;;;;;;;;;;;;;;;;;ACJvC,eAA8B,SAAS,MAA0C;AAC5E,YAAM,QAAQ,IAAI,GAAG;AAClBC,iBAAMC,cAA2B;AAAA,MACtCC,eAA4B,MAAM;AAAA,MAClCA,eAA4B,KAAK,OAAO,UAAU;AAAA,KAClD;AAEM,iBAAM,eAAe,MAAM,MAAM,OAAO,OAAO,OAAO,WAAWF,IAAG,CAAC;AAAA,EAC7E;AAEM,cAAMC,cAA2B;AAAA,IACtCC,eAA4B,MAAM;AAAA,IAClCA,eAA4B,KAAK,WAAW,UAAU;AAAA,GACtD;AAEK,qBAAaD,cAA2B;AAAA,IAC7C,MAAM,OAAO,OAAO,OAAO,WAAW,GAAG;AAAA,IACzC,MAAM,OAAO,OAAO,OAAO,WAAW,IAAI;AAAA,GAC1C;AAED,SAAO,MAAM,OAAO,OAAO,OAAO,WAAW,UAAU;AACxD;AAEA,eAAe,eAAe,QAAwB,KAAsC;AACvF,aAAO,SAAS,GAAG;AACf;AAAA,EACR;AAEM,mBAAWA,cAA2B,CAAC,KAAK,MAAM,SAAS,OAAO,EAAE,CAAC,CAAC;AAC5E,QAAM,SAAS,MAAM,OAAO,OAAO,OAAO,WAAW,QAAQ;AAC7D,SAAO,MAAM,eAAe,OAAO,MAAM,CAAC,GAAG,MAAM;AACpD;AC9BO,SAAS,cAAc,SAAmD;AAChF,MAAI,eAAe;AAEnB,WAAS,IAAI,GAAG,IAAI,QAAQ,QAAQ,KAAK;AACxC,oBAAgB,QAAQ,GAAG;AAAA,EAC5B;AAEI,aAAO,IAAI,WAAW,YAAY;AACtC,MAAI,SAAS;AAEb,OAAK,IAAI,IAAI,WAAW,QAAQ,EAAE,GAAG,MAAM;AAC3C,YAAU,QAAQ,GAAG;AAErB,WAAS,IAAI,GAAG,IAAI,QAAQ,QAAQ,KAAK;AACxC,SAAK,IAAI,IAAI,WAAW,QAAQ,EAAE,GAAG,MAAM;AAC3C,cAAU,QAAQ,GAAG;AAAA,EACtB;AAEO;AACR;AAEO,SAAS,eAAe,cAA8B;AACxD,eAAS,eAAe,YAAY;AAGpC,aAAO,eAAe,aAAa;AAChCE,yBAAc,QAAQ,MAAM,EAAE;AAC7B,eAAIA,aAAY,SAAS,EAAE,OAAO,MAAM,EAAE,OAAO,MAAM;AAAA,EAC/D;AAEO,aAAI,YAAY,SAAS,EAAE,OAAO,MAAM,EAAE,OAAO,MAAM;AAC/D;AAEO,SAAS,eAAe,QAA0C;AAEpE,aAAO,eAAe,aAAa;AAChCA,yBAAc,QAAQ,MAAM,EAAE;AAC7B,eAAIA,aAAY,SAAS,EAAE,OAAO,MAAM,EAAE,OAAO,MAAM;AAAA,EAC/D;AAEO,aAAI,YAAY,SAAS,EAAE,OAAO,MAAM,EAAE,OAAO,MAAM;AAC/D;AAEO,SAAS,eAAe,QAA4B;AAEtD,aAAO,eAAe,aAAa;AAChCC,yBAAc,QAAQ,MAAM,EAAE;AACpC,WAAO,IAAIA,eAAc,OAAO,MAAM;AAAA,EACvC;AACA,SAAO,IAAI,cAAc,OAAO,MAAM;AACvC;AAEO,SAAS,eAAe,QAAwB;AAC/C,wBAAe,eAAe,MAAM,CAAC;AAC7C;AAEO,SAAS,eAAe,cAAkC;AAChE,SAAO,IAAI,WAAWC,SAAY,aAAa,YAAY,CAAC,CAAC;AAC9D;AAEO,SAAS,YAAY,QAA4B;AACvD,SAAOC,SAAc,IAAI,WAAW,MAAM,CAAC;AAC5C;AAEO,SAAS,eAAe,QAA4B;AACnD,sBAAa,YAAY,MAAM,CAAC;AACxC;AAEO,SAAS,aAAa,cAA8B;AACnD,sBAAa,QAAQ,OAAO,GAAG,EAAE,QAAQ,OAAO,GAAG,EAAE,QAAQ,OAAO,EAAE;AAC9E;AAEO,SAAS,aAAa,cAA8B;AAC1D,iBAAe,aAAa,QAAQ,OAAO,GAAG,EAAE,QAAQ,OAAO,GAAG;AAC9D;AACS,wBAAS,KAAK,IAAK,UAAU,IAAM,UAAU,IAAK,aAAa,SAAS;AACrF,SAAO,aAAa,OAAO,IAAI,OAAO,OAAO,CAAC;AAC/C;AA8EA,MAAM,WAAW;AAAA,EAOT,IACN,OACA,SAI8B;AAC9B,QAAI,CAAC,OAAO,oBAAoB,IAAI,EAAE,SAAS,KAAK,GAAG;AAChD,gBAAI,MAAM,UAAU,4DAA4D;AAAA,IACvF;AAKI,aAAK,kBAAkB,YAAY;AACtC,UAAI,WAAW,QAAQ,UAAU,QAAQ,QAAQ;AACzC,8BAAe,KAAK,MAAM;AAAA,MAClC;AACA,UAAI,WAAW,QAAQ,UAAU,CAAC,QAAQ,QAAQ;AACjD,eAAO,KAAK;AAAA,MACb;AACO,4BAAe,KAAK,MAAM;AAAA,IAClC;AAEI,mBAAW,QAAQ,UAAU,MAAM;AAClC,qBAAW,QAAQ,QAAQ;AACvB,8BAAe,KAAK,MAAM;AAAA,MAClC;AAEO,4BAAe,KAAK,MAAM;AAAA,IAClC;AAEA,WAAO,KAAK;AAAA,EACb;AACD;AAEO,MAAM,YAAY,WAAW;AAAA,EAI5B,YAAY,MAAc,OAAe,SAAS,OAAO;AACzD;AACN,SAAK,OAAO;AACZ,SAAK,QAAQ;AAAA,EACd;AACD;AAiBO,MAAM,oBAAoB,WAA2C;AAAA,EAqBpE,YAAY,aAA4C,IAAI;AAC5D;AArBP,SAAgB,SAAiB;AACjC,SAAO,KAAa;AACpB,SAAgB,UAAkB;AAClC,SAAO,QAAgB;AACvB,SAAO,OAAc;AACrB,SAAgB,SAAiB;AACjC,SAAgB,WAAmB;AACnC,SAAgB,YAAoB;AAC7B,gBAAmB,IAAI;AAC9B,SAAO,YAAoB;AAC3B,SAAO,SAAiB;AACxB,SAAO,YAAoB;AAWnB,kBAAO,MAAM,UAAU;AAK1B,eAAO,KAAK,SAAS,UAAU;AAC7B,kBAAO,eAAe,KAAK,IAAc;AAAA,IAC/C;AAEA,QAAI,WAAW,MAAM;AACpB,WAAK,OAAO,WAAW,KAAK,IAAI,CAAC,QAAyC;AACzE,eAAO,IAAI,IAAI,IAAI,MAAM,IAAI,KAAK;AAAA,OAClC;AAAA,IACF;AAAA,EACD;AAAA,EAEO,OAAO,MAAc,OAAe;AACrC,cAAK,KAAK,IAAI,IAAI,eAAe,IAAI,GAAG,eAAe,KAAK,CAAC,CAAC;AAAA,EACpE;AAAA,EAEO,SAAS;AACR;AAAA,MACN,QAAQ,KAAK;AAAA,MACb,IAAI,KAAK;AAAA,MACT,SAAS,KAAK;AAAA,MACd,OAAO,KAAK;AAAA,MACZ,MAAM,KAAK;AAAA,MACX,QAAQ,KAAK;AAAA,MACb,UAAU,KAAK;AAAA,MACf,MAAM,eAAe,KAAK,IAAI;AAAA,MAC9B,WAAW,KAAK;AAAA,MAChB,WAAW,KAAK;AAAA,MAChB,WAAW,KAAK;AAAA,MAChB,QAAQ,KAAK;AAAA,MACb,WAAW,KAAK;AAAA;AAAA,EAElB;AAAA,EAEO,SAAS,OAAe;AAC9B,SAAK,QAAQ;AAAA,EACd;AAAA,EAEO,aAAa;AAAA,IACnB;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,KAOE;AACF,SAAK,KAAK;AACV,SAAK,QAAQ;AACT;AAAQ,WAAK,SAAS;AACtB;AAAM,WAAK,OAAO;AACtB,SAAK,YAAY;AAAA,EAClB;AAAA,EAEA,MAAa,cAAc,MAAkB;AAO5C,QAAI,CAAC,KAAK,UAAU,KAAK,aAAa,GAAG;AACnC,oBAAS,MAAM,0BAA0B,IAAI;AAClD,WAAK,YAAY,eAAe,KAAK,OAAO,SAAS;AAAA,IACtD;AAEA,QAAI,CAAC,KAAK,UAAU,KAAK,eAAe,GAAG;AAC1C,WAAK,SAAS;AAAA,QACb,QAAQ,CAAC;AAAA,QACT,WAAW,IAAI,WAAW;AAAA,QAC1B,QAAQ,CAAC;AAAA;AAEV,WAAK,YAAY;AAAA,IAClB;AAAA,EACD;AAAA,EAKO,SAAS,KAAa,MAAkB;AAC1C,SAAC,KAAK,QAAQ;AACX,gBAAI,MAAM,+BAA+B;AAAA,IAChD;AACM,kBAAQ,KAAK,OAAO,OAAO;AAC3B,kBAAQ,KAAK,OAAO,OAAO;AAC1B;AAAA,MACN,WAAW,KAAK;AAAA,MAChB,WAAW,KAAK;AAAA,MAChB,WAAW,eAAe,MAAM,KAAK;AAAA,MACrC,QAAQ,MAAM,OAAO,SAAS;AAAA,MAC9B,OAAO,eAAe,KAAK,MAAM,MAAM,cAAc,MAAM,YAAY,CAAC;AAAA;AAAA,EAE1E;AAAA,EAEA,MAAa,mBAAwC;AACpD,YAAQ,KAAK;AAAA,WACP;AACJ,YAAI,OAAO,KAAK,KAAK,OAAO,CAAC,aAAyB,QAAa;AAClE,iBAAO,cAAc;AAAA,YACpB;AAAA,YACA,IAAI,IAAI,QAAQ,EAAE,QAAQ,MAAM,QAAQ,OAAO;AAAA,YAC/C,IAAI,IAAI,SAAS,EAAE,QAAQ,MAAM,QAAQ,OAAO;AAAA,WAChD;AAAA,WACC,IAAI,YAAY;AAEnB,eAAO,cAAc;AAAA,UACpB,KAAK,IAAI,SAAS,EAAE,QAAQ,MAAM,QAAQ,OAAO;AAAA,UACjD,KAAK,IAAI,UAAU,EAAE,QAAQ,MAAM,QAAQ,OAAO;AAAA,UAClD,KAAK,IAAI,QAAQ,EAAE,QAAQ,MAAM,QAAQ,OAAO;AAAA,UAChD,eAAe,KAAK,QAAQ;AAAA,UAC5B,eAAe,KAAK,MAAM;AAAA,UAC1B,KAAK,IAAI,WAAW,EAAE,QAAQ,MAAM,QAAQ,OAAO;AAAA,UACnD;AAAA,SACA;AAAA,WACG;AACA,aAAC,KAAK,WAAW;AACd,qBAAK,cAAc,KAAK,IAAI;AAAA,QACnC;AAEA,cAAM,UAAsC,KAAK,KAAK,IAAI,CAAC,QAAQ;AAAA,UAClE,IAAI,IAAI,QAAQ,EAAE,QAAQ,MAAM,QAAQ,OAAO;AAAA,UAC/C,IAAI,IAAI,SAAS,EAAE,QAAQ,MAAM,QAAQ,OAAO;AAAA,SAChD;AAED,eAAO,MAAM,SAAS;AAAA,UACrB,eAAe,KAAK,OAAO,UAAU;AAAA,UACrC,KAAK,IAAI,SAAS,EAAE,QAAQ,MAAM,QAAQ,OAAO;AAAA,UACjD,KAAK,IAAI,UAAU,EAAE,QAAQ,MAAM,QAAQ,OAAO;AAAA,UAClD,eAAe,KAAK,QAAQ;AAAA,UAC5B,eAAe,KAAK,MAAM;AAAA,UAC1B,KAAK,IAAI,WAAW,EAAE,QAAQ,MAAM,QAAQ,OAAO;AAAA,UACnD;AAAA,UACA,eAAe,KAAK,SAAS;AAAA,UAC7B,KAAK,IAAI,aAAa,EAAE,QAAQ,MAAM,QAAQ,OAAO;AAAA,SACrD;AAAA;AAED,cAAM,IAAI,MAAM,kCAAkC,KAAK,QAAQ;AAAA;AAAA,EAElE;AACD;AAEgB,qBACf,eACA,EAAE,YAAY,OAAO,WAAW,IAAI,OAAO,KAAS,QACnD;AACD,MAAI,SAAS,eAAe,eAAe,QAAQ,EAAE,UAAU,GAAG;AAElE,SAAO,YAAY,OAAO,SAAS,QAAQ,IAAI,OAAO,QAAQ,QAAQ;AACvE;AAQA,SAAS,eAAe,aAAqB,gBAAwB,IAAe;AAC5E,gBAAO,aAAa,aAAa;AACzC;AAEA,MAAM,SAAS,CAAC,OAAe,aAAgC;AAE1D;AACA;AACH,gBAAW,UAAU,MAAM,EAAE,gBAAgB,SAAU;AAAA,WAC/C;AACA,iBAAK,sCAAsC,KAAK;AACxD,gBAAW,UAAU,QAAQ,MAAM,EAAE,gBAAgB,UAAU;AAAA,EAChE;AACO,aAAIC,UAAS,KAAK;AAC1B;;;;;;;;;;;;ACpZyC,wBAAM,SAAM;;;;;;;;;AAWjC,wBAAY,WAAQ;;;;AACd,wBAAY,SAAM;;;mBACxCC,YAAyB,IAAW,GAAC,MAAM,IAAI,KAC9C,QAAQ,CAAC;;;;;;;;;;mBATJ,IAAI;;iCAAT,QAAI;;;;;YAYQ;AAAA,oBAAqB,IAAe;AAAA;;;;;;YACpC;AAAA,oBAAoB,IAAY;AAAA;;;;;;;;gBAnB1C,iDACiC;;gBAAc,yDAEpD;;;gBACK,OACC;;;;;;gBAME,yBACS;;;gBAA4B,+BACtB;;iBAAoB,MAAI;;iBAEjC,GAAC;;;;;;;;;;;;;;kCAfV,iDACiC;;kCAAc,yDAEpD;;;;;kCACK,OACC;;;;;;kCAME,yBACS;;;kCAA4B,+BACtB;;mCAAoB,MAAI;;mCAEjC,GAAC;;;;;;;;;;;;;;;;;;;;AAjBhB,uBAuBM;AArBL,uBAGM;;;;;AACN,uBAYM;;AAXA,uBAAM;;;;;;;AAO2B,uBAAM;;;;;;AAG9B,uBAAM;;AAErB,uBAGM;;;;;;;AAnBiC,sEAAM,SAAM;AAAA;;qBAK3CT,KAAI;;mCAAT,QAAI;;;;;;;;;;;;;wCAAJ;AAAA;;;uCAYiCA,KAAe;;;;;;;uCAChBA,KAAY;;;;;;;;;;;;;;;;;;;;;;;;;;;;;iBAX3C,IAAI;;;iBACJ,IAAG;;;;;;gBADE,YACN;;;;;;;;gCADM,YACN;;;;;;AAFU,6CAAK,SAAS,UAAU,IAAI,SAAS,EAAE;AAAA;;AAAlD,uBAGK;;;;;;;;;;;;;;;;eAQ8C,KAAG;AAAA;;4BAAH,KAAG;AAAA;;;;;;;;;;;;;;eACP,IAAE;AAAA;;4BAAF,IAAE;AAAA;;;;;;;;;;;;;iBAtBhD,IAAW;;;;;;;;;;;;;;;;;;;UAAXA,KAAW;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;QArBJ,MAAK;QACL,gBAAe;QACf,aAAY;AAIvB,UAAQ,IAAI,cAAc,QAAQ,MAAM,OAAM;QAExC,cAAc,MAAM;AAEtB,WAAS,gBAAyB,WAAW;AAC7C,aAAO,GAAG,KAAK,IAAK,UAAG;AAAA,IAC1B,MAAM,IAAI,IAAI,QAAU,UAAQ,MAAM,QAAQ,MAAI;AAAA,IAClD,KAAK,IAAI,IAAI,SAAW,UAAQ,MAAM,QAAQ,MAAI;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;eCOE,KAAG;AAAA;;4BAAH,KAAG;AAAA;;;;;;;;;;;;;;eACP,IAAE;AAAA;;4BAAF,IAAE;AAAA;;;;;;;;;;;;;;;;;;;;;;YADpC;AAAA,oBAAqB,IAAe;AAAA;;;;;;YACpC;AAAA,oBAAoB,IAAY;AAAA;;;;;;;;gBALJ,qCAE3C;;;;;;;;;;;;;kCAF2C,qCAE3C;;;;;;;;;;;;;;;;;;AAPD,uBAYM;AAVL,uBAKM;;;AACN,uBAGM;;;;;;;;;uCAF8BA,KAAe;;;;;;;uCAChBA,KAAY;;;;;;;;;;;;;;;;;;;;;;;;;;;QArBpC,MAAK;QACL,gBAAe;QACf,aAAY;MAEH,YAAW;;;;;;;;;;;;;;;;;;;;;;;;;;eCcsB,KAAG;AAAA;;4BAAH,KAAG;AAAA;;;;;;;;;;;;;;eACP,IAAE;AAAA;;4BAAF,IAAE;AAAA;;;;;;;;;;;;;;AAJtC,wBAAQ,OAAO,IAAM,UAAO,GAAG;;;;;;;;;;;YAG7B;AAAA,oBAAqB,IAAe;AAAA;;;;;;YACpC;AAAA,oBAAoB,IAAY;AAAA;;;;;;;;gBAL1C,uBACO;;gBAAkC,GAC9C;;;;;;;;;;;;;kCAFK,uBACO;;kCAAkC,GAC9C;;;;;;;;;;;;;;;;;;AAJD,uBASM;AAPL,uBAEM;;;;;AACN,uBAGM;;;;;;;AALO,sEAAQ,OAAOA,KAAM,UAAO,GAAG;AAAA;;;uCAGRA,KAAe;;;;;;;uCAChBA,KAAY;;;;;;;;;;;;;;;;;;;;;;;;;;;QAlBpC,MAAK;QACL,gBAAe;QACf,aAAY;AAEjB,sBAAc;;;;;;;;;;;;;;;;;;;;;;;;;;eCWiC,KAAG;AAAA;;4BAAH,KAAG;AAAA;;;;;;;;;;;;;;eACP,IAAE;AAAA;;4BAAF,IAAE;AAAA;;;;;;;;;;;;;;;;;;;;;;YADpC;AAAA,oBAAqB,IAAe;AAAA;;;;;;YACpC;AAAA,oBAAoB,IAAY;AAAA;;;;;;;;gBAH1C,8CAAkC;;;;;;;;;;;;;kCAAlC,8CAAkC;;;;;;;;;;;;;;;;;;AAFxC,uBAOM;AALL,uBAA6C;;;AAC7C,uBAGM;;;;;;;;;uCAF8BA,KAAe;;;;;;;uCAChBA,KAAY;;;;;;;;;;;;;;;;;;;;;;;;;;;QAfpC,gBAAe;QACf,aAAY;MAEH,YAAW;;;;;;;;;;;;;;;;;;;;eCesB,KAAG;AAAA;;4BAAH,KAAG;AAAA;;;;;;;;;;;;;;eACP,IAAE;AAAA;;4BAAF,IAAE;AAAA;;;;;;;;;;;;;;iBAL9B,IAAK,GAAC,OAAO,MAAG;;;;;;;;;;;;cACV,IAAK,GAAC,OAAO;AAAA;;;;YAGzB;AAAA,oBAAqB,IAAe;AAAA;;;;;;YACpC;AAAA,oBAAoB,IAAY;AAAA;;;;;;;;gBANxB,+BACH;;gBAAkB,YACrC;;;;;;;;;;;;;;kCAFsB,+BACH;;kCAAkB,YACrC;;;;;;;;;;;;;;;;;;;AAJF,uBAUM;AARL,uBAGM;;;;;;AACN,uBAGM;;;;;;;8DANeA,KAAK,GAAC,OAAO,MAAG;AAAA;;;0CACVA,KAAK,GAAC,OAAO;;;;uCAGJA,KAAe;;;;;;;uCAChBA,KAAY;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QAnBpC,MAAK;QACL,gBAAe;QACf,aAAY;MAEH,YAAW;;;;;;;;;;;;;;;;;;;;;ACDhC,IAAI,yBAAyB;AAAA,EAC5B,SAAS,EAAE,WAAW,oBAAoB;AAC3C;AAGA,WAAW,CAAC,KAAK,KAAK,KAAK,OAAO,QAAQ,QAAQ,GAAG;AAC7B,gCAAO,EAAE,WAAW,oBAAoB;AAChE;AAGA,IAAI,uBAAuB;AAAA,EAC1B,SAAS,EAAE,WAAW,QAAQ;AAAA,EAC9B,SAAS;AAAA,IACR,MAAM;AAAA,MACL,WAAW;AAAA,IACZ;AAAA,EACD;AAAA,EACA,kBAAkB;AAAA,IACjB,MAAM;AAAA,MACL,WAAW;AAAA,IACZ;AAAA,EACD;AAAA,EACA,aAAa;AAAA,IACZ,aAAa;AAAA,MACZ,WAAW;AAAA,IACZ;AAAA,IACA,kBAAkB;AAAA,MACjB,WAAW;AAAA,IACZ;AAAA,IACA,WAAW;AAAA,MACV,WAAW;AAAA,IACZ;AAAA,EACD;AACD;AAEA,yBAAyB,EAAE,GAAG,wBAAwB,GAAG,qBAAqB;;;;;;;;;;;;;;mBCStE,IAAQ;;iCAAb,QAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;;qBAACA,KAAQ;;mCAAb,QAAI;;;;;;;;;;;;;4BAAJ,QAAI;;;;;;;;;qCAAJ,QAAI;;;;;;;;;;;;;;;;;;;;;;;;AAGG,4BAAU;;;;;UACP,QAAQA,KAAc;AAAA,UAAE,aAAM;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAHzC,uBAOM;;;;;;;;;;;UAJK,QAAQA,KAAc;AAAA,UAAE,aAAM;AAAA;;;;;AADjC,mDAAU,YAAS;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;iBAJxB,IAAQ;;;;;;;;;;;;;;;;;;;UAARA,KAAQ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QA9CD,KAAI;QACJ,KAAI;QAET,OAAI,CAAI,KAAK,SAAS,KAAK,MAAM,GAAG,EAAE,OAAQ,QAAO,OAAO,SAAS,MAAM,KAAK,GAAG;MAErF,WAAQ;MACRU;AAEJ,UAAO;AACH,2BAAQ,qCAAkB,wBAA8B;AAG3D,cAAS,UAAU,WAAW,OAAO;AAAA;iBAMvB,QAAQ,gBAAgB,QAAM;AACtC,sBAAY,iBACf,KAAK,wBAAwB,cAAc,KAAK,uBAAuB,UACvE;eAEQ,QAAO,CAAE,SAAS,WAAM;YAC5B,kBAAe;AACpB;AACA,gBAAQ,IAAI;AAAA;YAEP,eAAY;AACjB;AACA,gBAAQ,KAAK;AAAA;YAGR,cAAW;AAAA,QAAK;AAAA,QAAW;AAAA,QAAgB;AAAA,QAAQ;AAAA,QAAiB;AAAA;eAEjE,SAAM;wBACd,WAAW,SAAS,OAAQ,SAAQ,QAAQ,WAAW;AACnD,qBAAS,UAAU;AAAG,eAAI;AAAA;sBAG/B,WAAQ,IAAO,UAAU,WAAW;AACpC","names":["ctx","tag","ArweaveUtils.concatBuffers","ArweaveUtils.stringToBuffer","TextDecoder","TextEncoder","toByteArray","fromByteArray","instance","ArweaveUtils.winstonToAr","handlers"],"sources":["../../../../../../src/lib/frontend/components/confirm/DefaultConfirmation.svelte","../../../../../../src/lib/frontend/components/confirm/Connect.svelte","../../../../../../src/lib/frontend/components/confirm/arweave/deepHash.ts","../../../../../../src/lib/frontend/components/confirm/arweave/utils.ts","../../../../../../src/lib/frontend/components/confirm/ArweaveSign.svelte","../../../../../../src/lib/frontend/components/confirm/Sign.svelte","../../../../../../src/lib/frontend/components/confirm/Decrypt.svelte","../../../../../../src/lib/frontend/components/confirm/ReDecrypt.svelte","../../../../../../src/lib/frontend/components/confirm/TransformEncrypt.svelte","../../../../../../src/lib/frontend/components/confirm/index.ts","../../../../../../src/lib/frontend/Confirmer.svelte"],"sourcesContent":["<script>\r\n\timport Button from '../atomic/Button.svelte';\r\n\r\n\texport let props = { method: '', params: {} };\r\n\texport let handleConfirmed;\r\n\texport let handleDenied;\r\n</script>\r\n\r\n<slot>\r\n\t<div>\r\n\t\t<div class=\"attention\">\r\n\t\t\t<div>\r\n\t\t\t\t⚠️ Authorize {props.method} from your wallet?\r\n\t\t\t</div>\r\n\t\t\t<div class=\"submit\">\r\n\t\t\t\t<Button type={'Yes'} clickHandler={handleConfirmed}>Yes</Button>\r\n\t\t\t\t<Button type={'No'} clickHandler={handleDenied}>No</Button>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n</slot>\r\n\r\n<style>\r\n\tdiv.attention {\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\tbackground-color: #fff9c4;\r\n\t\tfilter: drop-shadow(2px 4px 6px rgba(0, 0, 0, 0.3));\r\n\t}\r\n\tdiv {\r\n\t\tpadding: 0.5em;\r\n\t\tmargin: 0.5em;\r\n\t\twidth: fit-content;\r\n\t}\r\n</style>\r\n","<script>\r\n\t// @ts-nocheck\r\n\r\n\timport DefaultConfirmation from './DefaultConfirmation.svelte';\r\n\timport Button from '../atomic/Button.svelte';\r\n\r\n\texport let props;\r\n\r\n\tlet defConf;\r\n</script>\r\n\r\n<DefaultConfirmation bind:this={defConf} {props} let:props={p} on:confirmed>\r\n\t<div class=\"attention\">\r\n\t\t<!-- this is default content, override with slot -->\r\n\t\t<div>\r\n\t\t\t⚠️ Allow {p.params.origin} to see your <b>Public</b> Key?\r\n\t\t</div>\r\n\t\t<div class=\"submit\">\r\n\t\t\t<Button type={'Yes'} clickHandler={defConf.handleConfirm}>Yes</Button>\r\n\t\t</div>\r\n\t</div>\r\n</DefaultConfirmation>\r\n\r\n<style>\r\n\tdiv.attention {\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\tbackground-color: #fff9c4;\r\n\t\tfilter: drop-shadow(2px 4px 6px rgba(0, 0, 0, 0.3));\r\n\t}\r\n\tdiv {\r\n\t\tpadding: 0.3em;\r\n\t\tmargin: 0.3em;\r\n\t}\r\n</style>\r\n","import * as ArweaveUtils from './utils';\r\n\r\n// In TypeScript 3.7, could be written as a single type:\r\n// `type DeepHashChunk = Uint8Array | DeepHashChunk[];`\r\ntype DeepHashChunk = Uint8Array | DeepHashChunks;\r\ninterface DeepHashChunks extends Array<DeepHashChunk> {}\r\n\r\nexport default async function deepHash(data: DeepHashChunk): Promise<Uint8Array> {\r\n\tif (Array.isArray(data)) {\r\n\t\tconst tag = ArweaveUtils.concatBuffers([\r\n\t\t\tArweaveUtils.stringToBuffer('list'),\r\n\t\t\tArweaveUtils.stringToBuffer(data.length.toString())\r\n\t\t]);\r\n\r\n\t\treturn await deepHashChunks(data, await crypto.subtle.digest('SHA-384', tag));\r\n\t}\r\n\r\n\tconst tag = ArweaveUtils.concatBuffers([\r\n\t\tArweaveUtils.stringToBuffer('blob'),\r\n\t\tArweaveUtils.stringToBuffer(data.byteLength.toString())\r\n\t]);\r\n\r\n\tconst taggedHash = ArweaveUtils.concatBuffers([\r\n\t\tawait crypto.subtle.digest('SHA-384', tag),\r\n\t\tawait crypto.subtle.digest('SHA-384', data)\r\n\t]);\r\n\r\n\treturn await crypto.subtle.digest('SHA-384', taggedHash);\r\n}\r\n\r\nasync function deepHashChunks(chunks: DeepHashChunks, acc: Uint8Array): Promise<Uint8Array> {\r\n\tif (chunks.length < 1) {\r\n\t\treturn acc;\r\n\t}\r\n\r\n\tconst hashPair = ArweaveUtils.concatBuffers([acc, await deepHash(chunks[0])]);\r\n\tconst newAcc = await crypto.subtle.digest('SHA-384', hashPair);\r\n\treturn await deepHashChunks(chunks.slice(1), newAcc);\r\n}\r\n","// import * as B64 from 'base64-js';\r\nimport { encode as fromByteArray, decode as toByteArray } from '@stablelib/base64';\r\nimport deepHash from './deepHash';\r\n// import * as BigNumber from 'bignumber.js';\r\nimport BigNumber from 'bignumber.js';\r\n\r\nexport type Base64UrlString = string;\r\n\r\nexport function concatBuffers(buffers: Uint8Array[] | ArrayBuffer[]): Uint8Array {\r\n\tlet total_length = 0;\r\n\r\n\tfor (let i = 0; i < buffers.length; i++) {\r\n\t\ttotal_length += buffers[i].byteLength;\r\n\t}\r\n\r\n\tlet temp = new Uint8Array(total_length);\r\n\tlet offset = 0;\r\n\r\n\ttemp.set(new Uint8Array(buffers[0]), offset);\r\n\toffset += buffers[0].byteLength;\r\n\r\n\tfor (let i = 1; i < buffers.length; i++) {\r\n\t\ttemp.set(new Uint8Array(buffers[i]), offset);\r\n\t\toffset += buffers[i].byteLength;\r\n\t}\r\n\r\n\treturn temp;\r\n}\r\n\r\nexport function b64UrlToString(b64UrlString: string): string {\r\n\tlet buffer = b64UrlToBuffer(b64UrlString);\r\n\r\n\t// TextEncoder will be available in browsers, but not in node\r\n\tif (typeof TextDecoder == 'undefined') {\r\n\t\tconst TextDecoder = require('util').TextDecoder;\r\n\t\treturn new TextDecoder('utf-8', { fatal: true }).decode(buffer);\r\n\t}\r\n\r\n\treturn new TextDecoder('utf-8', { fatal: true }).decode(buffer);\r\n}\r\n\r\nexport function bufferToString(buffer: Uint8Array | ArrayBuffer): string {\r\n\t// TextEncoder will be available in browsers, but not in node\r\n\tif (typeof TextDecoder == 'undefined') {\r\n\t\tconst TextDecoder = require('util').TextDecoder;\r\n\t\treturn new TextDecoder('utf-8', { fatal: true }).decode(buffer);\r\n\t}\r\n\r\n\treturn new TextDecoder('utf-8', { fatal: true }).decode(buffer);\r\n}\r\n\r\nexport function stringToBuffer(string: string): Uint8Array {\r\n\t// TextEncoder will be available in browsers, but not in node\r\n\tif (typeof TextEncoder == 'undefined') {\r\n\t\tconst TextEncoder = require('util').TextEncoder;\r\n\t\treturn new TextEncoder().encode(string);\r\n\t}\r\n\treturn new TextEncoder().encode(string);\r\n}\r\n\r\nexport function stringToB64Url(string: string): string {\r\n\treturn bufferTob64Url(stringToBuffer(string));\r\n}\r\n\r\nexport function b64UrlToBuffer(b64UrlString: string): Uint8Array {\r\n\treturn new Uint8Array(toByteArray(b64UrlDecode(b64UrlString)));\r\n}\r\n\r\nexport function bufferTob64(buffer: Uint8Array): string {\r\n\treturn fromByteArray(new Uint8Array(buffer));\r\n}\r\n\r\nexport function bufferTob64Url(buffer: Uint8Array): string {\r\n\treturn b64UrlEncode(bufferTob64(buffer));\r\n}\r\n\r\nexport function b64UrlEncode(b64UrlString: string): string {\r\n\treturn b64UrlString.replace(/\\+/g, '-').replace(/\\//g, '_').replace(/\\=/g, '');\r\n}\r\n\r\nexport function b64UrlDecode(b64UrlString: string): string {\r\n\tb64UrlString = b64UrlString.replace(/\\-/g, '+').replace(/\\_/g, '/');\r\n\tlet padding;\r\n\tb64UrlString.length % 4 == 0 ? (padding = 0) : (padding = 4 - (b64UrlString.length % 4));\r\n\treturn b64UrlString.concat('='.repeat(padding));\r\n}\r\n\r\nexport async function getSignatureData(tx): Promise<Uint8Array> {\r\n\t// Structured clone transfer strips all the fancy Function helpers\r\n\t// reconstruct Transaction Object to get them back\r\n\ttx = new Transaction(tx);\r\n\r\n\tswitch (tx.format) {\r\n\t\tcase 1:\r\n\t\t\tlet tags = tx.tags.reduce((accumulator: Uint8Array, tag: Tag) => {\r\n\t\t\t\treturn concatBuffers([\r\n\t\t\t\t\taccumulator,\r\n\t\t\t\t\ttag.get('name', { decode: true, string: false }),\r\n\t\t\t\t\ttag.get('value', { decode: true, string: false })\r\n\t\t\t\t]);\r\n\t\t\t}, new Uint8Array());\r\n\r\n\t\t\treturn concatBuffers([\r\n\t\t\t\ttx.get('owner', { decode: true, string: false }),\r\n\t\t\t\ttx.get('target', { decode: true, string: false }),\r\n\t\t\t\ttx.get('data', { decode: true, string: false }),\r\n\t\t\t\tstringToBuffer(tx.quantity),\r\n\t\t\t\tstringToBuffer(tx.reward),\r\n\t\t\t\ttx.get('last_tx', { decode: true, string: false }),\r\n\t\t\t\ttags\r\n\t\t\t]);\r\n\t\tcase 2:\r\n\t\t\tif (!tx.data_root) {\r\n\t\t\t\tawait tx.prepareChunks(tx.data);\r\n\t\t\t}\r\n\r\n\t\t\tconst tagList: [Uint8Array, Uint8Array][] = tx.tags.map((tag) => [\r\n\t\t\t\ttag.get('name', { decode: true, string: false }),\r\n\t\t\t\ttag.get('value', { decode: true, string: false })\r\n\t\t\t]);\r\n\r\n\t\t\treturn await deepHash([\r\n\t\t\t\tstringToBuffer(tx.format.toString()),\r\n\t\t\t\ttx.get('owner', { decode: true, string: false }),\r\n\t\t\t\ttx.get('target', { decode: true, string: false }),\r\n\t\t\t\tstringToBuffer(tx.quantity),\r\n\t\t\t\tstringToBuffer(tx.reward),\r\n\t\t\t\ttx.get('last_tx', { decode: true, string: false }),\r\n\t\t\t\ttagList,\r\n\t\t\t\tstringToBuffer(tx.data_size),\r\n\t\t\t\ttx.get('data_root', { decode: true, string: false })\r\n\t\t\t]);\r\n\t\tdefault:\r\n\t\t\tthrow new Error(`Unexpected transaction format: ${tx.format}`);\r\n\t}\r\n}\r\n\r\nexport function setSignature(\r\n\ttx,\r\n\t{\r\n\t\tid,\r\n\t\towner,\r\n\t\treward,\r\n\t\ttags,\r\n\t\tsignature\r\n\t}: {\r\n\t\tid: string;\r\n\t\towner: string;\r\n\t\treward?: string;\r\n\t\ttags?: Tag[];\r\n\t\tsignature: string;\r\n\t}\r\n) {\r\n\ttx.id = id;\r\n\ttx.owner = owner;\r\n\tif (reward) tx.reward = reward;\r\n\tif (tags) tx.tags = tags;\r\n\ttx.signature = signature;\r\n\treturn tx;\r\n}\r\n\r\n// from Arweave TX\r\n// https://github.com/ArweaveTeam/arweave-js/blob/8df379bfd2744fa3525fca8dee1f9d74f352bec6/src/common/lib/transaction.ts#L53\r\nclass BaseObject {\r\n\t[key: string]: any;\r\n\r\n\tpublic get(field: string): string;\r\n\tpublic get(field: string, options: { decode: true; string: false }): Uint8Array;\r\n\tpublic get(field: string, options: { decode: true; string: true }): string;\r\n\r\n\tpublic get(\r\n\t\tfield: string,\r\n\t\toptions?: {\r\n\t\t\tstring?: boolean;\r\n\t\t\tdecode?: boolean;\r\n\t\t}\r\n\t): string | Uint8Array | Tag[] {\r\n\t\tif (!Object.getOwnPropertyNames(this).includes(field)) {\r\n\t\t\tthrow new Error(`Field \"${field}\" is not a property of the Arweave Transaction class.`);\r\n\t\t}\r\n\r\n\t\t// Handle fields that are Uint8Arrays.\r\n\t\t// To maintain compat we encode them to b64url\r\n\t\t// if decode option is not specificed.\r\n\t\tif (this[field] instanceof Uint8Array) {\r\n\t\t\tif (options && options.decode && options.string) {\r\n\t\t\t\treturn bufferToString(this[field]);\r\n\t\t\t}\r\n\t\t\tif (options && options.decode && !options.string) {\r\n\t\t\t\treturn this[field];\r\n\t\t\t}\r\n\t\t\treturn bufferTob64Url(this[field]);\r\n\t\t}\r\n\r\n\t\tif (options && options.decode == true) {\r\n\t\t\tif (options && options.string) {\r\n\t\t\t\treturn b64UrlToString(this[field]);\r\n\t\t\t}\r\n\r\n\t\t\treturn b64UrlToBuffer(this[field]);\r\n\t\t}\r\n\r\n\t\treturn this[field];\r\n\t}\r\n}\r\n\r\nexport class Tag extends BaseObject {\r\n\treadonly name: string;\r\n\treadonly value: string;\r\n\r\n\tpublic constructor(name: string, value: string, decode = false) {\r\n\t\tsuper();\r\n\t\tthis.name = name;\r\n\t\tthis.value = value;\r\n\t}\r\n}\r\n\r\nexport interface TransactionInterface {\r\n\tformat: number;\r\n\tid: string;\r\n\tlast_tx: string;\r\n\towner: string;\r\n\ttags: Tag[];\r\n\ttarget: string;\r\n\tquantity: string;\r\n\tdata: Uint8Array;\r\n\treward: string;\r\n\tsignature: string;\r\n\tdata_size: string;\r\n\tdata_root: string;\r\n}\r\nexport default {};\r\nexport class Transaction extends BaseObject implements TransactionInterface {\r\n\tpublic readonly format: number = 2;\r\n\tpublic id: string = '';\r\n\tpublic readonly last_tx: string = '';\r\n\tpublic owner: string = '';\r\n\tpublic tags: Tag[] = [];\r\n\tpublic readonly target: string = '';\r\n\tpublic readonly quantity: string = '0';\r\n\tpublic readonly data_size: string = '0';\r\n\tpublic data: Uint8Array = new Uint8Array();\r\n\tpublic data_root: string = '';\r\n\tpublic reward: string = '0';\r\n\tpublic signature: string = '';\r\n\r\n\t// Computed when needed.\r\n\tpublic chunks?: {\r\n\t\tdata_root: Uint8Array;\r\n\t\tchunks: Chunk[];\r\n\t\tproofs: Proof[];\r\n\t};\r\n\r\n\tpublic constructor(attributes: Partial<TransactionInterface> = {}) {\r\n\t\tsuper();\r\n\t\tObject.assign(this, attributes);\r\n\r\n\t\t// If something passes in a Tx that has been toJSON'ed and back,\r\n\t\t// or where the data was filled in from /tx/data endpoint.\r\n\t\t// data will be b64url encoded, so decode it.\r\n\t\tif (typeof this.data === 'string') {\r\n\t\t\tthis.data = b64UrlToBuffer(this.data as string);\r\n\t\t}\r\n\r\n\t\tif (attributes.tags) {\r\n\t\t\tthis.tags = attributes.tags.map((tag: { name: string; value: string }) => {\r\n\t\t\t\treturn new Tag(tag.name, tag.value);\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\tpublic addTag(name: string, value: string) {\r\n\t\tthis.tags.push(new Tag(stringToB64Url(name), stringToB64Url(value)));\r\n\t}\r\n\r\n\tpublic toJSON() {\r\n\t\treturn {\r\n\t\t\tformat: this.format,\r\n\t\t\tid: this.id,\r\n\t\t\tlast_tx: this.last_tx,\r\n\t\t\towner: this.owner,\r\n\t\t\ttags: this.tags,\r\n\t\t\ttarget: this.target,\r\n\t\t\tquantity: this.quantity,\r\n\t\t\tdata: bufferTob64Url(this.data),\r\n\t\t\tdata_size: this.data_size,\r\n\t\t\tdata_root: this.data_root,\r\n\t\t\tdata_tree: this.data_tree,\r\n\t\t\treward: this.reward,\r\n\t\t\tsignature: this.signature\r\n\t\t};\r\n\t}\r\n\r\n\tpublic setOwner(owner: string) {\r\n\t\tthis.owner = owner;\r\n\t}\r\n\r\n\tpublic setSignature({\r\n\t\tid,\r\n\t\towner,\r\n\t\treward,\r\n\t\ttags,\r\n\t\tsignature\r\n\t}: {\r\n\t\tid: string;\r\n\t\towner: string;\r\n\t\treward?: string;\r\n\t\ttags?: Tag[];\r\n\t\tsignature: string;\r\n\t}) {\r\n\t\tthis.id = id;\r\n\t\tthis.owner = owner;\r\n\t\tif (reward) this.reward = reward;\r\n\t\tif (tags) this.tags = tags;\r\n\t\tthis.signature = signature;\r\n\t}\r\n\r\n\tpublic async prepareChunks(data: Uint8Array) {\r\n\t\t// Note: we *do not* use `this.data`, the caller may be\r\n\t\t// operating on a transaction with an zero length data field.\r\n\t\t// This function computes the chunks for the data passed in and\r\n\t\t// assigns the result to this transaction. It should not read the\r\n\t\t// data *from* this transaction.\r\n\r\n\t\tif (!this.chunks && data.byteLength > 0) {\r\n\t\t\tthis.chunks = await generateTransactionChunks(data);\r\n\t\t\tthis.data_root = bufferTob64Url(this.chunks.data_root);\r\n\t\t}\r\n\r\n\t\tif (!this.chunks && data.byteLength === 0) {\r\n\t\t\tthis.chunks = {\r\n\t\t\t\tchunks: [],\r\n\t\t\t\tdata_root: new Uint8Array(),\r\n\t\t\t\tproofs: []\r\n\t\t\t};\r\n\t\t\tthis.data_root = '';\r\n\t\t}\r\n\t}\r\n\r\n\t// Returns a chunk in a format suitable for posting to /chunk.\r\n\t// Similar to `prepareChunks()` this does not operate `this.data`,\r\n\t// instead using the data passed in.\r\n\tpublic getChunk(idx: number, data: Uint8Array) {\r\n\t\tif (!this.chunks) {\r\n\t\t\tthrow new Error(`Chunks have not been prepared`);\r\n\t\t}\r\n\t\tconst proof = this.chunks.proofs[idx];\r\n\t\tconst chunk = this.chunks.chunks[idx];\r\n\t\treturn {\r\n\t\t\tdata_root: this.data_root,\r\n\t\t\tdata_size: this.data_size,\r\n\t\t\tdata_path: bufferTob64Url(proof.proof),\r\n\t\t\toffset: proof.offset.toString(),\r\n\t\t\tchunk: bufferTob64Url(data.slice(chunk.minByteRange, chunk.maxByteRange))\r\n\t\t};\r\n\t}\r\n\r\n\tpublic async getSignatureData(): Promise<Uint8Array> {\r\n\t\tswitch (this.format) {\r\n\t\t\tcase 1:\r\n\t\t\t\tlet tags = this.tags.reduce((accumulator: Uint8Array, tag: Tag) => {\r\n\t\t\t\t\treturn concatBuffers([\r\n\t\t\t\t\t\taccumulator,\r\n\t\t\t\t\t\ttag.get('name', { decode: true, string: false }),\r\n\t\t\t\t\t\ttag.get('value', { decode: true, string: false })\r\n\t\t\t\t\t]);\r\n\t\t\t\t}, new Uint8Array());\r\n\r\n\t\t\t\treturn concatBuffers([\r\n\t\t\t\t\tthis.get('owner', { decode: true, string: false }),\r\n\t\t\t\t\tthis.get('target', { decode: true, string: false }),\r\n\t\t\t\t\tthis.get('data', { decode: true, string: false }),\r\n\t\t\t\t\tstringToBuffer(this.quantity),\r\n\t\t\t\t\tstringToBuffer(this.reward),\r\n\t\t\t\t\tthis.get('last_tx', { decode: true, string: false }),\r\n\t\t\t\t\ttags\r\n\t\t\t\t]);\r\n\t\t\tcase 2:\r\n\t\t\t\tif (!this.data_root) {\r\n\t\t\t\t\tawait this.prepareChunks(this.data);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst tagList: [Uint8Array, Uint8Array][] = this.tags.map((tag) => [\r\n\t\t\t\t\ttag.get('name', { decode: true, string: false }),\r\n\t\t\t\t\ttag.get('value', { decode: true, string: false })\r\n\t\t\t\t]);\r\n\r\n\t\t\t\treturn await deepHash([\r\n\t\t\t\t\tstringToBuffer(this.format.toString()),\r\n\t\t\t\t\tthis.get('owner', { decode: true, string: false }),\r\n\t\t\t\t\tthis.get('target', { decode: true, string: false }),\r\n\t\t\t\t\tstringToBuffer(this.quantity),\r\n\t\t\t\t\tstringToBuffer(this.reward),\r\n\t\t\t\t\tthis.get('last_tx', { decode: true, string: false }),\r\n\t\t\t\t\ttagList,\r\n\t\t\t\t\tstringToBuffer(this.data_size),\r\n\t\t\t\t\tthis.get('data_root', { decode: true, string: false })\r\n\t\t\t\t]);\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error(`Unexpected transaction format: ${this.format}`);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport function winstonToAr(\r\n\twinstonString: string,\r\n\t{ formatted = false, decimals = 12, trim = true } = {}\r\n) {\r\n\tlet number = stringToBigNum(winstonString, decimals).shiftedBy(-12);\r\n\r\n\treturn formatted ? number.toFormat(decimals) : number.toFixed(decimals);\r\n}\r\n\r\nexport function arToWinston(arString: string, { formatted = false } = {}) {\r\n\tlet number = stringToBigNum(arString).shiftedBy(12);\r\n\r\n\treturn formatted ? number.toFormat() : number.toFixed(0);\r\n}\r\n\r\nfunction stringToBigNum(stringValue: string, decimalPlaces: number = 12): BigNumber {\r\n\treturn BigNum(stringValue, decimalPlaces);\r\n}\r\n\r\nconst BigNum = (value: string, decimals: number): BigNumber => {\r\n\t// because of the way Vite builds libraries that have both commonjs and es modules :/\r\n\tlet instance;\r\n\ttry {\r\n\t\tinstance = BigNumber.clone({ DECIMAL_PLACES: decimals });\r\n\t} catch (error) {\r\n\t\tconsole.warn('Caught big num issues, try default', error);\r\n\t\tinstance = BigNumber.default.clone({ DECIMAL_PLACES: decimals });\r\n\t}\r\n\treturn new instance(value);\r\n};\r\n","<script>\r\n\timport * as ArweaveUtils from './arweave/utils';\r\n\timport Button from '../atomic/Button.svelte';\r\n\r\n\texport let props;\r\n\texport let handleConfirmed;\r\n\texport let handleDenied;\r\n\r\n\tlet defConf;\r\n\tlet checksOut = false;\r\n\tconsole.log('Signing ', { params: props.params });\r\n\r\n\tconst transaction = props.params;\r\n\r\n\tlet tx = new ArweaveUtils.Transaction(transaction);\r\n\tlet tags = tx.tags.map((tag) => ({\r\n\t\tname: tag.get('name', { decode: true, string: true }),\r\n\t\tval: tag.get('value', { decode: true, string: true })\r\n\t}));\r\n</script>\r\n\r\n<!-- \r\n{props} passes the properties down to <DefaultConfirmation>\r\nlet:props={p} gets them back up from the <DefaultConfirmation> slot \r\n-->\r\n{#if transaction}\r\n\t<div class=\"attention\">\r\n\t\t<!-- this is default content, override with slot -->\r\n\t\t<div>\r\n\t\t\t⚠️ Attention! You are about to sign ({props.method}) this Arweave transaction. Authorize to\r\n\t\t\tproceed?\r\n\t\t</div>\r\n\t\t<div>\r\n\t\t\tTags:<br />\r\n\t\t\t{#each tags as { name, val }}\r\n\t\t\t\t<li class={name.includes('App-Name') ? 'bold' : ''}>\r\n\t\t\t\t\t{name}:\r\n\t\t\t\t\t{val}\r\n\t\t\t\t</li>\r\n\t\t\t{/each}\r\n\t\t\tToken transfer: {transaction.quantity}<br />\r\n\t\t\tOne time storage Fee: {transaction.reward} (~${(\r\n\t\t\t\tArweaveUtils.winstonToAr(transaction.reward) * 100\r\n\t\t\t).toFixed(5)})<br />\r\n\t\t</div>\r\n\t\t<div class=\"submit\">\r\n\t\t\t<Button type={'Yes'} clickHandler={handleConfirmed}>Yes</Button>\r\n\t\t\t<Button type={'No'} clickHandler={handleDenied}>No</Button>\r\n\t\t</div>\r\n\t</div>\r\n{/if}\r\n\r\n<style>\r\n\tdiv.attention {\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\tbackground-color: #fff9c4;\r\n\t\tfilter: drop-shadow(2px 4px 6px rgba(0, 0, 0, 0.3));\r\n\t}\r\n\tdiv {\r\n\t\tpadding: 0.3em;\r\n\t\tmargin: 0.3em;\r\n\t}\r\n\r\n\t.bold {\r\n\t\tfont-weight: bolder;\r\n\t}\r\n\tli {\r\n\t\toverflow-wrap: break-word;\r\n\t\tword-break: break-all;\r\n\t}\r\n</style>\r\n","<script>\r\n\timport Button from '../atomic/Button.svelte';\r\n\timport DefaultConfirmation from './DefaultConfirmation.svelte';\r\n\r\n\texport let props;\r\n\texport let handleConfirmed;\r\n\texport let handleDenied;\r\n\r\n\tconst decoder = new TextDecoder();\r\n\r\n\tlet defConf;\r\n</script>\r\n\r\n<!-- on:confirmed on:denied -- they just forward the event notification up to <Confirmer /> -->\r\n<!-- https://svelte.dev/tutorial/event-forwarding -->\r\n<div class=\"flex flex-col bg-yellow-100 drop-shadow-lg rounded-sm w-auto m-4 p-6\">\r\n\t<!-- this is default content, override with slot -->\r\n\t<div class=\"flex-1\">\r\n\t\t<!-- JSON.stringify(, null, 2)   decoder.decode()-->\r\n\t\t<!-- {props.params.toString()}  -->\r\n\t\t<!-- TODO: Data layouts for confirmer  -->\r\n\t\t⚠️ Sign this transaction?\r\n\t</div>\r\n\t<div class=\"flex-1 p-4\">\r\n\t\t<Button type={'Yes'} clickHandler={handleConfirmed}>Yes</Button>\r\n\t\t<Button type={'No'} clickHandler={handleDenied}>No</Button>\r\n\t</div>\r\n</div>\r\n","<script>\r\n\t// @ts-nocheck\r\n\r\n\timport Button from '../atomic/Button.svelte';\r\n\r\n\texport let props;\r\n\texport let handleConfirmed;\r\n\texport let handleDenied;\r\n\r\n\tconst decoder = new TextDecoder();\r\n\r\n\tlet defConf;\r\n</script>\r\n\r\n<!-- on:confirmed on:denied -- they just forward the event notification up to <Confirmer /> -->\r\n<!-- https://svelte.dev/tutorial/event-forwarding -->\r\n<div class=\"attention\">\r\n\t<!-- this is default content, override with slot -->\r\n\t<div>\r\n\t\t⚠️ Decrypt {decoder.decode(props.params.tag)}?\r\n\t</div>\r\n\t<div class=\"submit\">\r\n\t\t<Button type={'Yes'} clickHandler={handleConfirmed}>Yes</Button>\r\n\t\t<Button type={'No'} clickHandler={handleDenied}>No</Button>\r\n\t</div>\r\n</div>\r\n\r\n<style>\r\n\tdiv.attention {\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\tbackground-color: #fff9c4;\r\n\t\tfilter: drop-shadow(2px 4px 6px rgba(0, 0, 0, 0.3));\r\n\t\twidth: 100%;\r\n\t}\r\n\tdiv {\r\n\t\tpadding: 0.3em;\r\n\t\tmargin: 0.3em;\r\n\t}\r\n</style>\r\n","<script>\r\n\t// @ts-nocheck\r\n\r\n\timport Button from '../atomic/Button.svelte';\r\n\r\n\t// export let props;\r\n\texport let handleConfirmed;\r\n\texport let handleDenied;\r\n\r\n\tconst decoder = new TextDecoder();\r\n\r\n\tlet defConf;\r\n</script>\r\n\r\n<!-- on:confirmed on:denied -- they just forward the event notification up to <Confirmer /> -->\r\n<!-- https://svelte.dev/tutorial/event-forwarding -->\r\n<div class=\"attention\">\r\n\t<!-- this is default content, override with slot -->\r\n\t<div>⚠️ Allow this app to Decrypt data?</div>\r\n\t<div class=\"submit\">\r\n\t\t<Button type={'Yes'} clickHandler={handleConfirmed}>Yes</Button>\r\n\t\t<Button type={'No'} clickHandler={handleDenied}>No</Button>\r\n\t</div>\r\n</div>\r\n\r\n<style>\r\n\tdiv.attention {\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\tbackground-color: #fff9c4;\r\n\t\tfilter: drop-shadow(2px 4px 6px rgba(0, 0, 0, 0.3));\r\n\t\twidth: 100%;\r\n\t}\r\n\tdiv {\r\n\t\tpadding: 0.3em;\r\n\t\tmargin: 0.3em;\r\n\t}\r\n</style>\r\n","<script>\r\n\t// @ts-nocheck\r\n\r\n\timport Button from '../atomic/Button.svelte';\r\n\timport EncodingSelector from '../atomic/EncodingSelector.svelte';\r\n\r\n\texport let props;\r\n\texport let handleConfirmed;\r\n\texport let handleDenied;\r\n\r\n\tconst decoder = new TextDecoder();\r\n\r\n\tlet defConf;\r\n</script>\r\n\r\n<!-- on:confirmed on:denied -- they just forward the event notification up to <Confirmer /> -->\r\n<!-- https://svelte.dev/tutorial/event-forwarding -->\r\n<div class=\"attention rounded-lg m-4 p-4\">\r\n\t<!-- this is default content, override with slot -->\r\n\t<div class=\"break-all\">\r\n\t\t⚠️ Grant Access to {props.params.tag} for\r\n\t\t<EncodingSelector pubkey={props.params.targetPublicKey} />\r\n\t</div>\r\n\t<div class=\"submit\">\r\n\t\t<Button type={'Yes'} clickHandler={handleConfirmed}>Yes</Button>\r\n\t\t<Button type={'No'} clickHandler={handleDenied}>No</Button>\r\n\t</div>\r\n</div>\r\n\r\n<style>\r\n\tdiv.attention {\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\tbackground-color: #fff9c4;\r\n\t\tfilter: drop-shadow(2px 4px 6px rgba(0, 0, 0, 0.3));\r\n\t\twidth: 100%;\r\n\t}\r\n\tdiv {\r\n\t\tpadding: 0.3em;\r\n\t\tmargin: 0.3em;\r\n\t}\r\n</style>\r\n","import { handlers } from '@peerpiper/iframe-wallet-sdk';\r\nimport DefaultConfirmation from './DefaultConfirmation.svelte';\r\nimport Connect from './Connect.svelte';\r\nimport ArweaveSign from './ArweaveSign.svelte';\r\nimport Sign from './Sign.svelte';\r\nimport Decrypt from './Decrypt.svelte';\r\nimport ReDecrypt from './ReDecrypt.svelte';\r\nimport TransformEncrypt from './TransformEncrypt.svelte';\r\n\r\nlet confirmationComponents = {\r\n\tDefault: { component: DefaultConfirmation }\r\n};\r\n\r\n// setup boring defaults, can be overriden with fanicer by users\r\nfor (const [key, value] of Object.entries(handlers)) {\r\n\tconfirmationComponents[key] = { component: DefaultConfirmation };\r\n}\r\n\r\n// Customize certain confirmation components\r\nlet customizedComponents = {\r\n\tconnect: { component: Connect },\r\n\ted25519: {\r\n\t\tsign: {\r\n\t\t\tcomponent: Sign\r\n\t\t}\r\n\t},\r\n\tarweaveWalletAPI: {\r\n\t\tsign: {\r\n\t\t\tcomponent: ArweaveSign\r\n\t\t}\r\n\t},\r\n\tproxcryptor: {\r\n\t\tselfDecrypt: {\r\n\t\t\tcomponent: Decrypt\r\n\t\t},\r\n\t\ttransformEncrypt: {\r\n\t\t\tcomponent: TransformEncrypt\r\n\t\t},\r\n\t\treDecrypt: {\r\n\t\t\tcomponent: ReDecrypt\r\n\t\t}\r\n\t}\r\n};\r\n\r\nconfirmationComponents = { ...confirmationComponents, ...customizedComponents };\r\n\r\nexport { confirmationComponents };\r\n","<script>\r\n\t// @ts-nocheck\r\n\timport { onMount } from 'svelte';\r\n\r\n\timport { confirmationComponents } from './components/confirm/index';\r\n\r\n\texport let show;\r\n\texport let hide;\r\n\r\n\tconst leaf = (obj, path) => path.split('.').reduce((value, el) => value && value[el], obj);\r\n\r\n\tlet requests = [];\r\n\tlet handlers;\r\n\r\n\tonMount(async () => {\r\n\t\t({ handlers } = await import('@peerpiper/iframe-wallet-sdk'));\r\n\r\n\t\t// pass the above confirm function to the handlers so they can use it when their methods are called\r\n\t\thandlers.setConfig('confirm', confirm);\r\n\t});\r\n\t// set confirm fn\r\n\t// calling confirm adds a confirmation request to the list of outstanding request\r\n\t// resolving the Promise removes the request\r\n\t// if last request, hide() the UI\r\n\tasync function confirm(confirmSection, params) {\r\n\t\tconst component = confirmSection\r\n\t\t\t? leaf(confirmationComponents, confirmSection) || confirmationComponents.Default\r\n\t\t\t: false;\r\n\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\tconst handleConfirmed = () => {\r\n\t\t\t\tcommon();\r\n\t\t\t\tresolve(true); // signal handler to continue with action\r\n\t\t\t};\r\n\t\t\tconst handleDenied = () => {\r\n\t\t\t\tcommon();\r\n\t\t\t\tresolve(false); // signal handler to continue with action\r\n\t\t\t};\r\n\r\n\t\t\tconst thisRequest = { component, confirmSection, params, handleConfirmed, handleDenied };\r\n\r\n\t\t\tfunction common() {\r\n\t\t\t\trequests = requests.filter((req) => req !== thisRequest); // find and remove element\r\n\t\t\t\tif (requests.length == 0) hide(); // hide if last one removed\r\n\t\t\t}\r\n\r\n\t\t\trequests = [...requests, thisRequest];\r\n\t\t\tshow(); // trigger the UI to show this request\r\n\t\t});\r\n\t}\r\n</script>\r\n\r\n{#if requests}\r\n\t{#each requests as { component, confirmSection, params, handleConfirmed, handleDenied }}\r\n\t\t<div class=\"active\">\r\n\t\t\t<svelte:component\r\n\t\t\t\tthis={component.component}\r\n\t\t\t\tprops={{ method: confirmSection, params }}\r\n\t\t\t\t{handleConfirmed}\r\n\t\t\t\t{handleDenied}\r\n\t\t\t/>\r\n\t\t</div>\r\n\t{/each}\r\n{/if}\r\n\r\n<style>\r\n\t.active {\r\n\t\tdisplay: flex;\r\n\t\talign-items: center;\r\n\t\tmin-width: 350px;\r\n\t\tmin-height: 50px;\r\n\t\tflex-direction: column;\r\n\t}\r\n</style>\r\n"],"file":"_app/immutable/chunks/Confirmer-bce60a2b.js"}