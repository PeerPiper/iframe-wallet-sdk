{"version":3,"file":"EncodingSelector-ad6d51d7.js","sources":["../../../../../../node_modules/uint8arrays/esm/src/alloc.js","../../../../../../node_modules/uint8arrays/esm/src/util/bases.js","../../../../../../node_modules/uint8arrays/esm/src/to-string.js","../../../../../../src/lib/frontend/components/atomic/EncodingSelector.svelte"],"sourcesContent":["export function alloc(size = 0) {\n  if (globalThis.Buffer != null && globalThis.Buffer.alloc != null) {\n    return globalThis.Buffer.alloc(size);\n  }\n  return new Uint8Array(size);\n}\nexport function allocUnsafe(size = 0) {\n  if (globalThis.Buffer != null && globalThis.Buffer.allocUnsafe != null) {\n    return globalThis.Buffer.allocUnsafe(size);\n  }\n  return new Uint8Array(size);\n}","import { bases } from 'multiformats/basics';\nimport { allocUnsafe } from '../alloc.js';\nfunction createCodec(name, prefix, encode, decode) {\n  return {\n    name,\n    prefix,\n    encoder: {\n      name,\n      prefix,\n      encode\n    },\n    decoder: { decode }\n  };\n}\nconst string = createCodec('utf8', 'u', buf => {\n  const decoder = new TextDecoder('utf8');\n  return 'u' + decoder.decode(buf);\n}, str => {\n  const encoder = new TextEncoder();\n  return encoder.encode(str.substring(1));\n});\nconst ascii = createCodec('ascii', 'a', buf => {\n  let string = 'a';\n  for (let i = 0; i < buf.length; i++) {\n    string += String.fromCharCode(buf[i]);\n  }\n  return string;\n}, str => {\n  str = str.substring(1);\n  const buf = allocUnsafe(str.length);\n  for (let i = 0; i < str.length; i++) {\n    buf[i] = str.charCodeAt(i);\n  }\n  return buf;\n});\nconst BASES = {\n  utf8: string,\n  'utf-8': string,\n  hex: bases.base16,\n  latin1: ascii,\n  ascii: ascii,\n  binary: ascii,\n  ...bases\n};\nexport default BASES;","import bases from './util/bases.js';\nexport function toString(array, encoding = 'utf8') {\n  const base = bases[encoding];\n  if (!base) {\n    throw new Error(`Unsupported encoding \"${ encoding }\"`);\n  }\n  if ((encoding === 'utf8' || encoding === 'utf-8') && globalThis.Buffer != null && globalThis.Buffer.from != null) {\n    return globalThis.Buffer.from(array.buffer, array.byteOffset, array.byteLength).toString('utf8');\n  }\n  return base.encoder.encode(array).substring(1);\n}","<script lang=\"ts\">\r\n\timport * as u8a from 'uint8arrays';\r\n\r\n\texport let pubkey: Uint8Array;\r\n\r\n\tfunction bytesToBase64(b: Uint8Array): string {\r\n\t\treturn u8a.toString(b, 'base64pad');\r\n\t}\r\n\r\n\tfunction bytesToBase58(b: Uint8Array): string {\r\n\t\treturn u8a.toString(b, 'base58btc');\r\n\t}\r\n\r\n\tfunction bytesToHex(b: Uint8Array): string {\r\n\t\treturn u8a.toString(b, 'base16');\r\n\t}\r\n\tlet selected = 'Base64';\r\n\tlet encoded = bytesToBase64(pubkey);\r\n\r\n\tlet white = ' bg-white rounded-lg text-black font-semibold py-1 px-2 m-1 ';\r\n\tlet grey = ' bg-gray-600 rounded-lg text-grey-dark font-semibold py-1 px-2 m-1 ';\r\n</script>\r\n\r\n<div class=\"flex flex-col sm:flex-row leading-8\">\r\n\t<div class=\"flex-grow justify-self-auto\">\r\n\t\t<slot {encoded}>\r\n\t\t\t{encoded}\r\n\t\t</slot>\r\n\t</div>\r\n\t<div class=\"flex-none flex flex-col justify-self-end bg-neutral-500/30 p-1 sm:p-2 rounded-lg\">\r\n\t\t<div class=\"flex-none text-center\">Same key, different format</div>\r\n\t\t<div class=\"flex-none text-center cursor-pointer select-none\">\r\n\t\t\t<span\r\n\t\t\t\tclass={selected == 'Base64' ? white : grey}\r\n\t\t\t\ton:click={() => {\r\n\t\t\t\t\tencoded = bytesToBase64(pubkey);\r\n\t\t\t\t\tselected = 'Base64';\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\tBase64\r\n\t\t\t</span>\r\n\r\n\t\t\t<span\r\n\t\t\t\tclass={selected == 'Base58' ? white : grey}\r\n\t\t\t\ton:click={() => {\r\n\t\t\t\t\tencoded = bytesToBase58(pubkey);\r\n\t\t\t\t\tselected = 'Base58';\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\tBase58\r\n\t\t\t</span>\r\n\r\n\t\t\t<span\r\n\t\t\t\tclass={selected == 'Hex' ? white : grey}\r\n\t\t\t\ton:click={() => {\r\n\t\t\t\t\tencoded = bytesToHex(pubkey);\r\n\t\t\t\t\tselected = 'Hex';\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\tHex\r\n\t\t\t</span>\r\n\t\t</div>\r\n\t</div>\r\n</div>\r\n"],"names":["allocUnsafe","size","createCodec","name","prefix","encode","decode","string","buf","decoder","str","ascii","i","BASES","bases","toString","array","encoding","base","ctx","attr","span0","span0_class_value","white","grey","span1","span1_class_value","span2","span2_class_value","insert_hydration","target","div4","anchor","append_hydration","div0","div3","div1","div2","current","dirty","pubkey","$$props","bytesToBase64","b","u8a.toString","bytesToBase58","bytesToHex","selected","encoded","$$invalidate"],"mappings":"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"}