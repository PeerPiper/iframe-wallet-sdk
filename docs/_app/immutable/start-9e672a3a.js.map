{"version":3,"mappings":"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","names":["base","assets","set_paths","paths","ctx","insert_hydration","target","setContext","stores","afterUpdate","navigated","title","mounted","$$invalidate","unsubscribe","page","matchers","components","__vitePreload","dictionary","init","opts","set_public_env","environment","coalesce_to_error","err","normalize","loaded","has_error_status","status","error","dep","normalize_path","path","trailing_slash","decode_params","params","key","LoadURL","get_base_uri","doc","baseURI","baseTags","scroll_state","find_anchor","event","e","get_href","node","notifiable_store","value","store","writable","ready","notify","val","set","new_value","subscribe","run","old_value","create_updated_store","timeout","check","res","updated","version","hash","i","native_fetch","initial_fetch","resource","selector","script","body","param_pattern","parse_route_id","id","names","types","add_trailing_slash","segment","segments","match","is_last","content","name","type","rest","exec","matcher","parse","a","b","has_shadow","pattern","n","SCROLL_KEY","INDEX_KEY","routes","default_layout","default_error","root_stuff","scroll_positions","update_scroll_positions","index","create_client","cache","invalidated","session","load_cache","callbacks","current","started","autoscroll","updating","session_id","invalidating","root","$session","update","router_enabled","current_history_index","_a","scroll","hash_navigating","token","goto","url","redirect_chain","navigate","noscroll","native_navigation","prefetch","intent","get_navigation_intent","load_route","no_cache","callback","current_token","navigation_result","load_root_error_page","_b","change","details","initialize","keepfocus","tabindex","tick","deep_linked","leaf_node","result","style","Root","navigation","fn","get_navigation_result_from_branch","filtered","branch","redirect","f","stuff","print_error","property","replacement","leaf","clear","load_node","add_dependency","href","props","uses_params","load_url","module","load_input","requested","normalized","cached","route","changed","stuff_changed","loader","load","previous","param","is_shadow_page","error_loaded","node_loaded","j","_c","_d","root_layout","root_error","from","should_block","blocked","accepted","onMount","pathnames","promises","pathname","r","trigger_prefetch","mousemove_timeout","handle_mousemove","is_svg_a_element","rel","delta","link","error_args","nodes","is_leaf","serialized","start","client","hydrate","spa"],"sources":["../../../../runtime/paths.js","../../../../generated/root.svelte","../../../../generated/client-matchers.js","../../../../generated/client-manifest.js","../../../../runtime/client/singletons.js","../../../../runtime/env-public.js","../../../../runtime/client/start.js"],"sourcesContent":["/** @type {string} */\nlet base = '';\n\n/** @type {string} */\nlet assets = '';\n\n/** @param {{ base: string, assets: string }} paths */\nfunction set_paths(paths) {\n\tbase = paths.base;\n\tassets = paths.assets || base;\n}\n\nexport { assets, base, set_paths };\n","<!-- This file is generated by @sveltejs/kit — do not edit it! -->\n<script>\n\timport { setContext, afterUpdate, onMount } from 'svelte';\n\n\t// stores\n\texport let stores;\n\texport let page;\n\n\texport let components;\n\texport let props_0 = null;\n\texport let props_1 = null;\n\texport let props_2 = null;\n\n\tsetContext('__svelte__', stores);\n\n\t$: stores.page.set(page);\n\tafterUpdate(stores.page.notify);\n\n\tlet mounted = false;\n\tlet navigated = false;\n\tlet title = null;\n\n\tonMount(() => {\n\t\tconst unsubscribe = stores.page.subscribe(() => {\n\t\t\tif (mounted) {\n\t\t\t\tnavigated = true;\n\t\t\t\ttitle = document.title || 'untitled page';\n\t\t\t}\n\t\t});\n\n\t\tmounted = true;\n\t\treturn unsubscribe;\n\t});\n</script>\n\n{#if components[1]}\n\t<svelte:component this={components[0]} {...(props_0 || {})}>\n\t\t{#if components[2]}\n\t\t\t<svelte:component this={components[1]} {...(props_1 || {})}>\n\t\t\t\t<svelte:component this={components[2]} {...(props_2 || {})}/>\n\t\t\t</svelte:component>\n\t\t{:else}\n\t\t\t<svelte:component this={components[1]} {...(props_1 || {})} />\n\t\t{/if}\n\t</svelte:component>\n{:else}\n\t<svelte:component this={components[0]} {...(props_0 || {})} />\n{/if}\n\n{#if mounted}\n\t<div id=\"svelte-announcer\" aria-live=\"assertive\" aria-atomic=\"true\" style=\"position: absolute; left: 0; top: 0; clip: rect(0 0 0 0); clip-path: inset(50%); overflow: hidden; white-space: nowrap; width: 1px; height: 1px\">\n\t\t{#if navigated}\n\t\t\t{title}\n\t\t{/if}\n\t</div>\n{/if}","export const matchers = {};","export { matchers } from './client-matchers.js';\n\nexport const components = [\n\t() => import(\"..\\\\..\\\\src\\\\routes\\\\__layout.svelte\"),\n\t() => import(\"..\\\\runtime\\\\components\\\\error.svelte\"),\n\t() => import(\"..\\\\..\\\\src\\\\routes\\\\dispatch.svelte\"),\n\t() => import(\"..\\\\..\\\\src\\\\routes\\\\index.svelte\")\n];\n\nexport const dictionary = {\n\t\"\": [[0, 3], [1]],\n\t\"dispatch\": [[0, 2], [1]]\n};","/** @type {import('./types').Client} */\nlet client;\n\n/**\n * @param {{\n *   client: import('./types').Client;\n * }} opts\n */\nfunction init(opts) {\n\tclient = opts.client;\n}\n\nexport { client, init };\n","/** @type {App.PublicEnv} */\nlet env = {};\n\n/** @type {(environment: Record<string, string>) => void} */\nfunction set_public_env(environment) {\n\tenv = environment;\n}\n\nexport { env, set_public_env };\n","import { onMount, tick } from 'svelte';\nimport { writable } from 'svelte/store';\nimport { assets, set_paths } from '../paths.js';\nimport Root from '__GENERATED__/root.svelte';\nimport { components, dictionary, matchers } from '__GENERATED__/client-manifest.js';\nimport { init } from './singletons.js';\nexport { set_public_env } from '../env-public.js';\n\n/**\n * @param {unknown} err\n * @return {Error}\n */\nfunction coalesce_to_error(err) {\n\treturn err instanceof Error ||\n\t\t(err && /** @type {any} */ (err).name && /** @type {any} */ (err).message)\n\t\t? /** @type {Error} */ (err)\n\t\t: new Error(JSON.stringify(err));\n}\n\n/**\n * @param {import('types').LoadOutput | void} loaded\n * @returns {import('types').NormalizedLoadOutput}\n */\nfunction normalize(loaded) {\n\tif (!loaded) {\n\t\treturn {};\n\t}\n\n\t// TODO remove for 1.0\n\t// @ts-expect-error\n\tif (loaded.fallthrough) {\n\t\tthrow new Error(\n\t\t\t'fallthrough is no longer supported. Use matchers instead: https://kit.svelte.dev/docs/routing#advanced-routing-matching'\n\t\t);\n\t}\n\n\t// TODO remove for 1.0\n\tif ('maxage' in loaded) {\n\t\tthrow new Error('maxage should be replaced with cache: { maxage }');\n\t}\n\n\tconst has_error_status =\n\t\tloaded.status && loaded.status >= 400 && loaded.status <= 599 && !loaded.redirect;\n\tif (loaded.error || has_error_status) {\n\t\tconst status = loaded.status;\n\n\t\tif (!loaded.error && has_error_status) {\n\t\t\treturn {\n\t\t\t\tstatus: status || 500,\n\t\t\t\terror: new Error(`${status}`)\n\t\t\t};\n\t\t}\n\n\t\tconst error = typeof loaded.error === 'string' ? new Error(loaded.error) : loaded.error;\n\n\t\tif (!(error instanceof Error)) {\n\t\t\treturn {\n\t\t\t\tstatus: 500,\n\t\t\t\terror: new Error(\n\t\t\t\t\t`\"error\" property returned from load() must be a string or instance of Error, received type \"${typeof error}\"`\n\t\t\t\t)\n\t\t\t};\n\t\t}\n\n\t\tif (!status || status < 400 || status > 599) {\n\t\t\tconsole.warn('\"error\" returned from load() without a valid status code — defaulting to 500');\n\t\t\treturn { status: 500, error };\n\t\t}\n\n\t\treturn { status, error };\n\t}\n\n\tif (loaded.redirect) {\n\t\tif (!loaded.status || Math.floor(loaded.status / 100) !== 3) {\n\t\t\tthrow new Error(\n\t\t\t\t'\"redirect\" property returned from load() must be accompanied by a 3xx status code'\n\t\t\t);\n\t\t}\n\n\t\tif (typeof loaded.redirect !== 'string') {\n\t\t\tthrow new Error('\"redirect\" property returned from load() must be a string');\n\t\t}\n\t}\n\n\tif (loaded.dependencies) {\n\t\tif (\n\t\t\t!Array.isArray(loaded.dependencies) ||\n\t\t\tloaded.dependencies.some((dep) => typeof dep !== 'string')\n\t\t) {\n\t\t\tthrow new Error('\"dependencies\" property returned from load() must be of type string[]');\n\t\t}\n\t}\n\n\t// TODO remove before 1.0\n\tif (/** @type {any} */ (loaded).context) {\n\t\tthrow new Error(\n\t\t\t'You are returning \"context\" from a load function. ' +\n\t\t\t\t'\"context\" was renamed to \"stuff\", please adjust your code accordingly.'\n\t\t);\n\t}\n\n\treturn /** @type {import('types').NormalizedLoadOutput} */ (loaded);\n}\n\n/**\n * @param {string} path\n * @param {import('types').TrailingSlash} trailing_slash\n */\nfunction normalize_path(path, trailing_slash) {\n\tif (path === '/' || trailing_slash === 'ignore') return path;\n\n\tif (trailing_slash === 'never') {\n\t\treturn path.endsWith('/') ? path.slice(0, -1) : path;\n\t} else if (trailing_slash === 'always' && !path.endsWith('/')) {\n\t\treturn path + '/';\n\t}\n\n\treturn path;\n}\n\n/** @param {Record<string, string>} params */\nfunction decode_params(params) {\n\tfor (const key in params) {\n\t\t// input has already been decoded by decodeURI\n\t\t// now handle the rest that decodeURIComponent would do\n\t\tparams[key] = params[key]\n\t\t\t.replace(/%23/g, '#')\n\t\t\t.replace(/%3[Bb]/g, ';')\n\t\t\t.replace(/%2[Cc]/g, ',')\n\t\t\t.replace(/%2[Ff]/g, '/')\n\t\t\t.replace(/%3[Ff]/g, '?')\n\t\t\t.replace(/%3[Aa]/g, ':')\n\t\t\t.replace(/%40/g, '@')\n\t\t\t.replace(/%26/g, '&')\n\t\t\t.replace(/%3[Dd]/g, '=')\n\t\t\t.replace(/%2[Bb]/g, '+')\n\t\t\t.replace(/%24/g, '$');\n\t}\n\n\treturn params;\n}\n\nclass LoadURL extends URL {\n\t/** @returns {string} */\n\tget hash() {\n\t\tthrow new Error(\n\t\t\t'url.hash is inaccessible from load. Consider accessing hash from the page store within the script tag of your component.'\n\t\t);\n\t}\n}\n\n/* global __SVELTEKIT_APP_VERSION__, __SVELTEKIT_APP_VERSION_FILE__, __SVELTEKIT_APP_VERSION_POLL_INTERVAL__ */\n\n/** @param {HTMLDocument} doc */\nfunction get_base_uri(doc) {\n\tlet baseURI = doc.baseURI;\n\n\tif (!baseURI) {\n\t\tconst baseTags = doc.getElementsByTagName('base');\n\t\tbaseURI = baseTags.length ? baseTags[0].href : doc.URL;\n\t}\n\n\treturn baseURI;\n}\n\nfunction scroll_state() {\n\treturn {\n\t\tx: pageXOffset,\n\t\ty: pageYOffset\n\t};\n}\n\n/** @param {Event} event */\nfunction find_anchor(event) {\n\tconst node = event\n\t\t.composedPath()\n\t\t.find((e) => e instanceof Node && e.nodeName.toUpperCase() === 'A'); // SVG <a> elements have a lowercase name\n\treturn /** @type {HTMLAnchorElement | SVGAElement | undefined} */ (node);\n}\n\n/** @param {HTMLAnchorElement | SVGAElement} node */\nfunction get_href(node) {\n\treturn node instanceof SVGAElement\n\t\t? new URL(node.href.baseVal, document.baseURI)\n\t\t: new URL(node.href);\n}\n\n/** @param {any} value */\nfunction notifiable_store(value) {\n\tconst store = writable(value);\n\tlet ready = true;\n\n\tfunction notify() {\n\t\tready = true;\n\t\tstore.update((val) => val);\n\t}\n\n\t/** @param {any} new_value */\n\tfunction set(new_value) {\n\t\tready = false;\n\t\tstore.set(new_value);\n\t}\n\n\t/** @param {(value: any) => void} run */\n\tfunction subscribe(run) {\n\t\t/** @type {any} */\n\t\tlet old_value;\n\t\treturn store.subscribe((new_value) => {\n\t\t\tif (old_value === undefined || (ready && new_value !== old_value)) {\n\t\t\t\trun((old_value = new_value));\n\t\t\t}\n\t\t});\n\t}\n\n\treturn { notify, set, subscribe };\n}\n\nfunction create_updated_store() {\n\tconst { set, subscribe } = writable(false);\n\n\tconst interval = __SVELTEKIT_APP_VERSION_POLL_INTERVAL__;\n\n\t/** @type {NodeJS.Timeout} */\n\tlet timeout;\n\n\tasync function check() {\n\t\tif (import.meta.env.DEV || import.meta.env.SSR) return false;\n\n\t\tclearTimeout(timeout);\n\n\t\tif (interval) timeout = setTimeout(check, interval);\n\n\t\tconst res = await fetch(`${assets}/${__SVELTEKIT_APP_VERSION_FILE__}`, {\n\t\t\theaders: {\n\t\t\t\tpragma: 'no-cache',\n\t\t\t\t'cache-control': 'no-cache'\n\t\t\t}\n\t\t});\n\n\t\tif (res.ok) {\n\t\t\tconst { version } = await res.json();\n\t\t\tconst updated = version !== __SVELTEKIT_APP_VERSION__;\n\n\t\t\tif (updated) {\n\t\t\t\tset(true);\n\t\t\t\tclearTimeout(timeout);\n\t\t\t}\n\n\t\t\treturn updated;\n\t\t} else {\n\t\t\tthrow new Error(`Version check failed: ${res.status}`);\n\t\t}\n\t}\n\n\tif (interval) timeout = setTimeout(check, interval);\n\n\treturn {\n\t\tsubscribe,\n\t\tcheck\n\t};\n}\n\n/**\n * Hash using djb2\n * @param {import('types').StrictBody} value\n */\nfunction hash(value) {\n\tlet hash = 5381;\n\tlet i = value.length;\n\n\tif (typeof value === 'string') {\n\t\twhile (i) hash = (hash * 33) ^ value.charCodeAt(--i);\n\t} else {\n\t\twhile (i) hash = (hash * 33) ^ value[--i];\n\t}\n\n\treturn (hash >>> 0).toString(36);\n}\n\nlet loading = 0;\n\nconst native_fetch = window.fetch;\n\nfunction lock_fetch() {\n\tloading += 1;\n}\n\nfunction unlock_fetch() {\n\tloading -= 1;\n}\n\nif (import.meta.env.DEV) {\n\tlet can_inspect_stack_trace = false;\n\n\tconst check_stack_trace = async () => {\n\t\tconst stack = /** @type {string} */ (new Error().stack);\n\t\tcan_inspect_stack_trace = stack.includes('check_stack_trace');\n\t};\n\n\tcheck_stack_trace();\n\n\twindow.fetch = (input, init) => {\n\t\tconst url = input instanceof Request ? input.url : input.toString();\n\t\tconst stack = /** @type {string} */ (new Error().stack);\n\n\t\tconst heuristic = can_inspect_stack_trace ? stack.includes('load_node') : loading;\n\t\tif (heuristic) {\n\t\t\tconsole.warn(\n\t\t\t\t`Loading ${url} using \\`window.fetch\\`. For best results, use the \\`fetch\\` that is passed to your \\`load\\` function: https://kit.svelte.dev/docs/loading#input-fetch`\n\t\t\t);\n\t\t}\n\n\t\treturn native_fetch(input, init);\n\t};\n}\n\n/**\n * @param {RequestInfo} resource\n * @param {RequestInit} [opts]\n */\nfunction initial_fetch(resource, opts) {\n\tconst url = JSON.stringify(typeof resource === 'string' ? resource : resource.url);\n\n\tlet selector = `script[sveltekit\\\\:data-type=\"data\"][sveltekit\\\\:data-url=${url}]`;\n\n\tif (opts && typeof opts.body === 'string') {\n\t\tselector += `[sveltekit\\\\:data-body=\"${hash(opts.body)}\"]`;\n\t}\n\n\tconst script = document.querySelector(selector);\n\tif (script && script.textContent) {\n\t\tconst { body, ...init } = JSON.parse(script.textContent);\n\t\treturn Promise.resolve(new Response(body, init));\n\t}\n\n\treturn native_fetch(resource, opts);\n}\n\nconst param_pattern = /^(\\.\\.\\.)?(\\w+)(?:=(\\w+))?$/;\n\n/** @param {string} id */\nfunction parse_route_id(id) {\n\t/** @type {string[]} */\n\tconst names = [];\n\n\t/** @type {string[]} */\n\tconst types = [];\n\n\t// `/foo` should get an optional trailing slash, `/foo.json` should not\n\t// const add_trailing_slash = !/\\.[a-z]+$/.test(key);\n\tlet add_trailing_slash = true;\n\n\tconst pattern =\n\t\tid === ''\n\t\t\t? /^\\/$/\n\t\t\t: new RegExp(\n\t\t\t\t\t`^${decodeURIComponent(id)\n\t\t\t\t\t\t.split(/(?:@[a-zA-Z0-9_-]+)?(?:\\/|$)/)\n\t\t\t\t\t\t.map((segment, i, segments) => {\n\t\t\t\t\t\t\t// special case — /[...rest]/ could contain zero segments\n\t\t\t\t\t\t\tconst match = /^\\[\\.\\.\\.(\\w+)(?:=(\\w+))?\\]$/.exec(segment);\n\t\t\t\t\t\t\tif (match) {\n\t\t\t\t\t\t\t\tnames.push(match[1]);\n\t\t\t\t\t\t\t\ttypes.push(match[2]);\n\t\t\t\t\t\t\t\treturn '(?:/(.*))?';\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tconst is_last = i === segments.length - 1;\n\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\tsegment &&\n\t\t\t\t\t\t\t\t'/' +\n\t\t\t\t\t\t\t\t\tsegment\n\t\t\t\t\t\t\t\t\t\t.split(/\\[(.+?)\\]/)\n\t\t\t\t\t\t\t\t\t\t.map((content, i) => {\n\t\t\t\t\t\t\t\t\t\t\tif (i % 2) {\n\t\t\t\t\t\t\t\t\t\t\t\tconst match = param_pattern.exec(content);\n\t\t\t\t\t\t\t\t\t\t\t\tif (!match) {\n\t\t\t\t\t\t\t\t\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t`Invalid param: ${content}. Params and matcher names can only have underscores and alphanumeric characters.`\n\t\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t\t\tconst [, rest, name, type] = match;\n\t\t\t\t\t\t\t\t\t\t\t\tnames.push(name);\n\t\t\t\t\t\t\t\t\t\t\t\ttypes.push(type);\n\t\t\t\t\t\t\t\t\t\t\t\treturn rest ? '(.*?)' : '([^/]+?)';\n\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t\tif (is_last && content.includes('.')) add_trailing_slash = false;\n\n\t\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t\tcontent // allow users to specify characters on the file system in an encoded manner\n\t\t\t\t\t\t\t\t\t\t\t\t\t.normalize()\n\t\t\t\t\t\t\t\t\t\t\t\t\t// We use [ and ] to denote parameters, so users must encode these on the file\n\t\t\t\t\t\t\t\t\t\t\t\t\t// system to match against them. We don't decode all characters since others\n\t\t\t\t\t\t\t\t\t\t\t\t\t// can already be epressed and so that '%' can be easily used directly in filenames\n\t\t\t\t\t\t\t\t\t\t\t\t\t.replace(/%5[Bb]/g, '[')\n\t\t\t\t\t\t\t\t\t\t\t\t\t.replace(/%5[Dd]/g, ']')\n\t\t\t\t\t\t\t\t\t\t\t\t\t// '#', '/', and '?' can only appear in URL path segments in an encoded manner.\n\t\t\t\t\t\t\t\t\t\t\t\t\t// They will not be touched by decodeURI so need to be encoded here, so\n\t\t\t\t\t\t\t\t\t\t\t\t\t// that we can match against them.\n\t\t\t\t\t\t\t\t\t\t\t\t\t// We skip '/' since you can't create a file with it on any OS\n\t\t\t\t\t\t\t\t\t\t\t\t\t.replace(/#/g, '%23')\n\t\t\t\t\t\t\t\t\t\t\t\t\t.replace(/\\?/g, '%3F')\n\t\t\t\t\t\t\t\t\t\t\t\t\t// escape characters that have special meaning in regex\n\t\t\t\t\t\t\t\t\t\t\t\t\t.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&')\n\t\t\t\t\t\t\t\t\t\t\t); // TODO handle encoding\n\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t\t.join('')\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.join('')}${add_trailing_slash ? '/?' : ''}$`\n\t\t\t  );\n\n\treturn { pattern, names, types };\n}\n\n/**\n * @param {RegExpMatchArray} match\n * @param {string[]} names\n * @param {string[]} types\n * @param {Record<string, import('types').ParamMatcher>} matchers\n */\nfunction exec(match, names, types, matchers) {\n\t/** @type {Record<string, string>} */\n\tconst params = {};\n\n\tfor (let i = 0; i < names.length; i += 1) {\n\t\tconst name = names[i];\n\t\tconst type = types[i];\n\t\tconst value = match[i + 1] || '';\n\n\t\tif (type) {\n\t\t\tconst matcher = matchers[type];\n\t\t\tif (!matcher) throw new Error(`Missing \"${type}\" param matcher`); // TODO do this ahead of time?\n\n\t\t\tif (!matcher(value)) return;\n\t\t}\n\n\t\tparams[name] = value;\n\t}\n\n\treturn params;\n}\n\n/**\n * @param {import('types').CSRComponentLoader[]} components\n * @param {Record<string, [number[], number[], 1?]>} dictionary\n * @param {Record<string, (param: string) => boolean>} matchers\n * @returns {import('types').CSRRoute[]}\n */\nfunction parse(components, dictionary, matchers) {\n\tconst routes = Object.entries(dictionary).map(([id, [a, b, has_shadow]]) => {\n\t\tconst { pattern, names, types } = parse_route_id(id);\n\n\t\treturn {\n\t\t\tid,\n\t\t\t/** @param {string} path */\n\t\t\texec: (path) => {\n\t\t\t\tconst match = pattern.exec(path);\n\t\t\t\tif (match) return exec(match, names, types, matchers);\n\t\t\t},\n\t\t\ta: a.map((n) => components[n]),\n\t\t\tb: b.map((n) => components[n]),\n\t\t\thas_shadow: !!has_shadow\n\t\t};\n\t});\n\n\treturn routes;\n}\n\nconst SCROLL_KEY = 'sveltekit:scroll';\nconst INDEX_KEY = 'sveltekit:index';\n\nconst routes = parse(components, dictionary, matchers);\n\n// we import the root layout/error components eagerly, so that\n// connectivity errors after initialisation don't nuke the app\nconst default_layout = components[0]();\nconst default_error = components[1]();\n\nconst root_stuff = {};\n\n// We track the scroll position associated with each history entry in sessionStorage,\n// rather than on history.state itself, because when navigation is driven by\n// popstate it's too late to update the scroll position associated with the\n// state we're navigating from\n\n/** @typedef {{ x: number, y: number }} ScrollPosition */\n/** @type {Record<number, ScrollPosition>} */\nlet scroll_positions = {};\ntry {\n\tscroll_positions = JSON.parse(sessionStorage[SCROLL_KEY]);\n} catch {\n\t// do nothing\n}\n\n/** @param {number} index */\nfunction update_scroll_positions(index) {\n\tscroll_positions[index] = scroll_state();\n}\n\n/**\n * @param {{\n *   target: Element;\n *   session: App.Session;\n *   base: string;\n *   trailing_slash: import('types').TrailingSlash;\n * }} opts\n * @returns {import('./types').Client}\n */\nfunction create_client({ target, session, base, trailing_slash }) {\n\t/** @type {Map<string, import('./types').NavigationResult>} */\n\tconst cache = new Map();\n\n\t/** @type {Array<((href: string) => boolean)>} */\n\tconst invalidated = [];\n\n\tconst stores = {\n\t\turl: notifiable_store({}),\n\t\tpage: notifiable_store({}),\n\t\tnavigating: writable(/** @type {import('types').Navigation | null} */ (null)),\n\t\tsession: writable(session),\n\t\tupdated: create_updated_store()\n\t};\n\n\t/** @type {{id: string | null, promise: Promise<import('./types').NavigationResult | undefined> | null}} */\n\tconst load_cache = {\n\t\tid: null,\n\t\tpromise: null\n\t};\n\n\tconst callbacks = {\n\t\t/** @type {Array<(opts: { from: URL, to: URL | null, cancel: () => void }) => void>} */\n\t\tbefore_navigate: [],\n\n\t\t/** @type {Array<(opts: { from: URL | null, to: URL }) => void>} */\n\t\tafter_navigate: []\n\t};\n\n\t/** @type {import('./types').NavigationState} */\n\tlet current = {\n\t\tbranch: [],\n\t\terror: null,\n\t\tsession_id: 0,\n\t\tstuff: root_stuff,\n\t\t// @ts-ignore - we need the initial value to be null\n\t\turl: null\n\t};\n\n\tlet started = false;\n\tlet autoscroll = true;\n\tlet updating = false;\n\tlet session_id = 1;\n\n\t/** @type {Promise<void> | null} */\n\tlet invalidating = null;\n\n\t/** @type {import('svelte').SvelteComponent} */\n\tlet root;\n\n\t/** @type {App.Session} */\n\tlet $session;\n\n\tlet ready = false;\n\tstores.session.subscribe(async (value) => {\n\t\t$session = value;\n\n\t\tif (!ready) return;\n\t\tsession_id += 1;\n\n\t\tconst current_load_uses_session = current.branch.some((node) => node?.uses.session);\n\t\tif (!current_load_uses_session) return;\n\n\t\tupdate(new URL(location.href), [], true);\n\t});\n\tready = true;\n\n\tlet router_enabled = true;\n\n\t// keeping track of the history index in order to prevent popstate navigation events if needed\n\tlet current_history_index = history.state?.[INDEX_KEY];\n\n\tif (!current_history_index) {\n\t\t// we use Date.now() as an offset so that cross-document navigations\n\t\t// within the app don't result in data loss\n\t\tcurrent_history_index = Date.now();\n\n\t\t// create initial history entry, so we can return here\n\t\thistory.replaceState(\n\t\t\t{ ...history.state, [INDEX_KEY]: current_history_index },\n\t\t\t'',\n\t\t\tlocation.href\n\t\t);\n\t}\n\n\t// if we reload the page, or Cmd-Shift-T back to it,\n\t// recover scroll position\n\tconst scroll = scroll_positions[current_history_index];\n\tif (scroll) {\n\t\thistory.scrollRestoration = 'manual';\n\t\tscrollTo(scroll.x, scroll.y);\n\t}\n\n\tlet hash_navigating = false;\n\n\t/** @type {import('types').Page} */\n\tlet page;\n\n\t/** @type {{}} */\n\tlet token;\n\n\t/**\n\t * @param {string | URL} url\n\t * @param {{ noscroll?: boolean; replaceState?: boolean; keepfocus?: boolean; state?: any }} opts\n\t * @param {string[]} redirect_chain\n\t */\n\tasync function goto(\n\t\turl,\n\t\t{ noscroll = false, replaceState = false, keepfocus = false, state = {} },\n\t\tredirect_chain\n\t) {\n\t\tif (typeof url === 'string') {\n\t\t\turl = new URL(url, get_base_uri(document));\n\t\t}\n\n\t\tif (router_enabled) {\n\t\t\treturn navigate({\n\t\t\t\turl,\n\t\t\t\tscroll: noscroll ? scroll_state() : null,\n\t\t\t\tkeepfocus,\n\t\t\t\tredirect_chain,\n\t\t\t\tdetails: {\n\t\t\t\t\tstate,\n\t\t\t\t\treplaceState\n\t\t\t\t},\n\t\t\t\taccepted: () => {},\n\t\t\t\tblocked: () => {}\n\t\t\t});\n\t\t}\n\n\t\tawait native_navigation(url);\n\t}\n\n\t/** @param {URL} url */\n\tasync function prefetch(url) {\n\t\tconst intent = get_navigation_intent(url);\n\n\t\tif (!intent) {\n\t\t\tthrow new Error('Attempted to prefetch a URL that does not belong to this app');\n\t\t}\n\n\t\tload_cache.promise = load_route(intent, false);\n\t\tload_cache.id = intent.id;\n\n\t\treturn load_cache.promise;\n\t}\n\n\t/**\n\t * Returns `true` if update completes, `false` if it is aborted\n\t * @param {URL} url\n\t * @param {string[]} redirect_chain\n\t * @param {boolean} no_cache\n\t * @param {{hash?: string, scroll: { x: number, y: number } | null, keepfocus: boolean, details: { replaceState: boolean, state: any } | null}} [opts]\n\t * @param {() => void} [callback]\n\t */\n\tasync function update(url, redirect_chain, no_cache, opts, callback) {\n\t\tconst intent = get_navigation_intent(url);\n\n\t\tconst current_token = (token = {});\n\t\tlet navigation_result = intent && (await load_route(intent, no_cache));\n\n\t\tif (\n\t\t\t!navigation_result &&\n\t\t\turl.origin === location.origin &&\n\t\t\turl.pathname === location.pathname\n\t\t) {\n\t\t\t// this could happen in SPA fallback mode if the user navigated to\n\t\t\t// `/non-existent-page`. if we fall back to reloading the page, it\n\t\t\t// will create an infinite loop. so whereas we normally handle\n\t\t\t// unknown routes by going to the server, in this special case\n\t\t\t// we render a client-side error page instead\n\t\t\tnavigation_result = await load_root_error_page({\n\t\t\t\tstatus: 404,\n\t\t\t\terror: new Error(`Not found: ${url.pathname}`),\n\t\t\t\turl,\n\t\t\t\trouteId: null\n\t\t\t});\n\t\t}\n\n\t\tif (!navigation_result) {\n\t\t\tawait native_navigation(url);\n\t\t\treturn false; // unnecessary, but TypeScript prefers it this way\n\t\t}\n\n\t\t// if this is an internal navigation intent, use the normalized\n\t\t// URL for the rest of the function\n\t\turl = intent?.url || url;\n\n\t\t// abort if user navigated during update\n\t\tif (token !== current_token) return false;\n\n\t\tinvalidated.length = 0;\n\n\t\tif (navigation_result.redirect) {\n\t\t\tif (redirect_chain.length > 10 || redirect_chain.includes(url.pathname)) {\n\t\t\t\tnavigation_result = await load_root_error_page({\n\t\t\t\t\tstatus: 500,\n\t\t\t\t\terror: new Error('Redirect loop'),\n\t\t\t\t\turl,\n\t\t\t\t\trouteId: null\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tif (router_enabled) {\n\t\t\t\t\tgoto(new URL(navigation_result.redirect, url).href, {}, [\n\t\t\t\t\t\t...redirect_chain,\n\t\t\t\t\t\turl.pathname\n\t\t\t\t\t]);\n\t\t\t\t} else {\n\t\t\t\t\tawait native_navigation(new URL(navigation_result.redirect, location.href));\n\t\t\t\t}\n\n\t\t\t\treturn false;\n\t\t\t}\n\t\t} else if (navigation_result.props?.page?.status >= 400) {\n\t\t\tconst updated = await stores.updated.check();\n\t\t\tif (updated) {\n\t\t\t\tawait native_navigation(url);\n\t\t\t}\n\t\t}\n\n\t\tupdating = true;\n\n\t\tif (opts && opts.details) {\n\t\t\tconst { details } = opts;\n\t\t\tconst change = details.replaceState ? 0 : 1;\n\t\t\tdetails.state[INDEX_KEY] = current_history_index += change;\n\t\t\thistory[details.replaceState ? 'replaceState' : 'pushState'](details.state, '', url);\n\t\t}\n\n\t\tif (started) {\n\t\t\tcurrent = navigation_result.state;\n\n\t\t\tif (navigation_result.props.page) {\n\t\t\t\tnavigation_result.props.page.url = url;\n\t\t\t}\n\n\t\t\troot.$set(navigation_result.props);\n\t\t} else {\n\t\t\tinitialize(navigation_result);\n\t\t}\n\n\t\t// opts must be passed if we're navigating\n\t\tif (opts) {\n\t\t\tconst { scroll, keepfocus } = opts;\n\n\t\t\tif (!keepfocus) {\n\t\t\t\t// Reset page selection and focus\n\t\t\t\t// We try to mimic browsers' behaviour as closely as possible by targeting the\n\t\t\t\t// first scrollable region, but unfortunately it's not a perfect match — e.g.\n\t\t\t\t// shift-tabbing won't immediately cycle up from the end of the page on Chromium\n\t\t\t\t// See https://html.spec.whatwg.org/multipage/interaction.html#get-the-focusable-area\n\t\t\t\tconst root = document.body;\n\t\t\t\tconst tabindex = root.getAttribute('tabindex');\n\n\t\t\t\troot.tabIndex = -1;\n\t\t\t\troot.focus({ preventScroll: true });\n\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tgetSelection()?.removeAllRanges();\n\t\t\t\t});\n\n\t\t\t\t// restore `tabindex` as to prevent `root` from stealing input from elements\n\t\t\t\tif (tabindex !== null) {\n\t\t\t\t\troot.setAttribute('tabindex', tabindex);\n\t\t\t\t} else {\n\t\t\t\t\troot.removeAttribute('tabindex');\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// need to render the DOM before we can scroll to the rendered elements\n\t\t\tawait tick();\n\n\t\t\tif (autoscroll) {\n\t\t\t\tconst deep_linked = url.hash && document.getElementById(url.hash.slice(1));\n\t\t\t\tif (scroll) {\n\t\t\t\t\tscrollTo(scroll.x, scroll.y);\n\t\t\t\t} else if (deep_linked) {\n\t\t\t\t\t// Here we use `scrollIntoView` on the element instead of `scrollTo`\n\t\t\t\t\t// because it natively supports the `scroll-margin` and `scroll-behavior`\n\t\t\t\t\t// CSS properties.\n\t\t\t\t\tdeep_linked.scrollIntoView();\n\t\t\t\t} else {\n\t\t\t\t\tscrollTo(0, 0);\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\t// in this case we're simply invalidating\n\t\t\tawait tick();\n\t\t}\n\n\t\tload_cache.promise = null;\n\t\tload_cache.id = null;\n\t\tautoscroll = true;\n\n\t\tif (navigation_result.props.page) {\n\t\t\tpage = navigation_result.props.page;\n\t\t}\n\n\t\tconst leaf_node = navigation_result.state.branch[navigation_result.state.branch.length - 1];\n\t\trouter_enabled = leaf_node?.module.router !== false;\n\n\t\tif (callback) callback();\n\n\t\tupdating = false;\n\t}\n\n\t/** @param {import('./types').NavigationResult} result */\n\tfunction initialize(result) {\n\t\tcurrent = result.state;\n\n\t\tconst style = document.querySelector('style[data-sveltekit]');\n\t\tif (style) style.remove();\n\n\t\tpage = result.props.page;\n\n\t\troot = new Root({\n\t\t\ttarget,\n\t\t\tprops: { ...result.props, stores },\n\t\t\thydrate: true\n\t\t});\n\n\t\tif (router_enabled) {\n\t\t\tconst navigation = { from: null, to: new URL(location.href) };\n\t\t\tcallbacks.after_navigate.forEach((fn) => fn(navigation));\n\t\t}\n\n\t\tstarted = true;\n\t}\n\n\t/**\n\t *\n\t * @param {{\n\t *   url: URL;\n\t *   params: Record<string, string>;\n\t *   stuff: Record<string, any>;\n\t *   branch: Array<import('./types').BranchNode | undefined>;\n\t *   status: number;\n\t *   error: Error | null;\n\t *   routeId: string | null;\n\t * }} opts\n\t */\n\tasync function get_navigation_result_from_branch({\n\t\turl,\n\t\tparams,\n\t\tstuff,\n\t\tbranch,\n\t\tstatus,\n\t\terror,\n\t\trouteId\n\t}) {\n\t\tconst filtered = /** @type {import('./types').BranchNode[] } */ (branch.filter(Boolean));\n\t\tconst redirect = filtered.find((f) => f.loaded?.redirect);\n\n\t\t/** @type {import('./types').NavigationResult} */\n\t\tconst result = {\n\t\t\tredirect: redirect?.loaded?.redirect,\n\t\t\tstate: {\n\t\t\t\turl,\n\t\t\t\tparams,\n\t\t\t\tbranch,\n\t\t\t\terror,\n\t\t\t\tstuff,\n\t\t\t\tsession_id\n\t\t\t},\n\t\t\tprops: {\n\t\t\t\tcomponents: filtered.map((node) => node.module.default)\n\t\t\t}\n\t\t};\n\n\t\tfor (let i = 0; i < filtered.length; i += 1) {\n\t\t\t// Only set props if the node actually updated. This prevents needless rerenders.\n\t\t\tif (!current.branch.some((node) => node === filtered[i])) {\n\t\t\t\tconst loaded = filtered[i].loaded;\n\t\t\t\tresult.props[`props_${i}`] = loaded ? await loaded.props : null;\n\t\t\t}\n\t\t}\n\n\t\tconst page_changed =\n\t\t\t!current.url ||\n\t\t\turl.href !== current.url.href ||\n\t\t\tcurrent.error !== error ||\n\t\t\tcurrent.stuff !== stuff;\n\n\t\tif (page_changed) {\n\t\t\tresult.props.page = { error, params, routeId, status, stuff, url };\n\n\t\t\t// TODO remove this for 1.0\n\t\t\t/**\n\t\t\t * @param {string} property\n\t\t\t * @param {string} replacement\n\t\t\t */\n\t\t\tconst print_error = (property, replacement) => {\n\t\t\t\tObject.defineProperty(result.props.page, property, {\n\t\t\t\t\tget: () => {\n\t\t\t\t\t\tthrow new Error(`$page.${property} has been replaced by $page.url.${replacement}`);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t};\n\n\t\t\tprint_error('origin', 'origin');\n\t\t\tprint_error('path', 'pathname');\n\t\t\tprint_error('query', 'searchParams');\n\t\t}\n\n\t\tconst leaf = filtered[filtered.length - 1];\n\t\tconst load_cache = leaf?.loaded?.cache;\n\n\t\tif (load_cache) {\n\t\t\tconst key = url.pathname + url.search; // omit hash\n\t\t\tlet ready = false;\n\n\t\t\tconst clear = () => {\n\t\t\t\tif (cache.get(key) === result) {\n\t\t\t\t\tcache.delete(key);\n\t\t\t\t}\n\n\t\t\t\tunsubscribe();\n\t\t\t\tclearTimeout(timeout);\n\t\t\t};\n\n\t\t\tconst timeout = setTimeout(clear, load_cache.maxage * 1000);\n\n\t\t\tconst unsubscribe = stores.session.subscribe(() => {\n\t\t\t\tif (ready) clear();\n\t\t\t});\n\n\t\t\tready = true;\n\n\t\t\tcache.set(key, result);\n\t\t}\n\n\t\treturn result;\n\t}\n\n\t/**\n\t * @param {{\n\t *   status?: number;\n\t *   error?: Error;\n\t *   module: import('types').CSRComponent;\n\t *   url: URL;\n\t *   params: Record<string, string>;\n\t *   stuff: Record<string, any>;\n\t *   props?: Record<string, any>;\n\t *   routeId: string | null;\n\t * }} options\n\t */\n\tasync function load_node({ status, error, module, url, params, stuff, props, routeId }) {\n\t\t/** @type {import('./types').BranchNode} */\n\t\tconst node = {\n\t\t\tmodule,\n\t\t\tuses: {\n\t\t\t\tparams: new Set(),\n\t\t\t\turl: false,\n\t\t\t\tsession: false,\n\t\t\t\tstuff: false,\n\t\t\t\tdependencies: new Set()\n\t\t\t},\n\t\t\tloaded: null,\n\t\t\tstuff\n\t\t};\n\n\t\t/** @param dep {string} */\n\t\tfunction add_dependency(dep) {\n\t\t\tconst { href } = new URL(dep, url);\n\t\t\tnode.uses.dependencies.add(href);\n\t\t}\n\n\t\tif (props) {\n\t\t\t// shadow endpoint props means we need to mark this URL as a dependency of itself\n\t\t\tnode.uses.dependencies.add(url.href);\n\t\t}\n\n\t\t/** @type {Record<string, string>} */\n\t\tconst uses_params = {};\n\t\tfor (const key in params) {\n\t\t\tObject.defineProperty(uses_params, key, {\n\t\t\t\tget() {\n\t\t\t\t\tnode.uses.params.add(key);\n\t\t\t\t\treturn params[key];\n\t\t\t\t},\n\t\t\t\tenumerable: true\n\t\t\t});\n\t\t}\n\n\t\tconst session = $session;\n\t\tconst load_url = new LoadURL(url);\n\n\t\tif (module.load) {\n\t\t\t/** @type {import('types').LoadEvent} */\n\t\t\tconst load_input = {\n\t\t\t\trouteId,\n\t\t\t\tparams: uses_params,\n\t\t\t\tprops: props || {},\n\t\t\t\tget url() {\n\t\t\t\t\tnode.uses.url = true;\n\t\t\t\t\treturn load_url;\n\t\t\t\t},\n\t\t\t\tget session() {\n\t\t\t\t\tnode.uses.session = true;\n\t\t\t\t\treturn session;\n\t\t\t\t},\n\t\t\t\tget stuff() {\n\t\t\t\t\tnode.uses.stuff = true;\n\t\t\t\t\treturn { ...stuff };\n\t\t\t\t},\n\t\t\t\tasync fetch(resource, init) {\n\t\t\t\t\tlet requested;\n\n\t\t\t\t\tif (typeof resource === 'string') {\n\t\t\t\t\t\trequested = resource;\n\t\t\t\t\t} else {\n\t\t\t\t\t\trequested = resource.url;\n\n\t\t\t\t\t\t// we're not allowed to modify the received `Request` object, so in order\n\t\t\t\t\t\t// to fixup relative urls we create a new equivalent `init` object instead\n\t\t\t\t\t\tinit = {\n\t\t\t\t\t\t\t// the request body must be consumed in memory until browsers\n\t\t\t\t\t\t\t// implement streaming request bodies and/or the body getter\n\t\t\t\t\t\t\tbody:\n\t\t\t\t\t\t\t\tresource.method === 'GET' || resource.method === 'HEAD'\n\t\t\t\t\t\t\t\t\t? undefined\n\t\t\t\t\t\t\t\t\t: await resource.blob(),\n\t\t\t\t\t\t\tcache: resource.cache,\n\t\t\t\t\t\t\tcredentials: resource.credentials,\n\t\t\t\t\t\t\theaders: resource.headers,\n\t\t\t\t\t\t\tintegrity: resource.integrity,\n\t\t\t\t\t\t\tkeepalive: resource.keepalive,\n\t\t\t\t\t\t\tmethod: resource.method,\n\t\t\t\t\t\t\tmode: resource.mode,\n\t\t\t\t\t\t\tredirect: resource.redirect,\n\t\t\t\t\t\t\treferrer: resource.referrer,\n\t\t\t\t\t\t\treferrerPolicy: resource.referrerPolicy,\n\t\t\t\t\t\t\tsignal: resource.signal,\n\t\t\t\t\t\t\t...init\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\n\t\t\t\t\t// we must fixup relative urls so they are resolved from the target page\n\t\t\t\t\tconst normalized = new URL(requested, url).href;\n\t\t\t\t\tadd_dependency(normalized);\n\n\t\t\t\t\t// prerendered pages may be served from any origin, so `initial_fetch` urls shouldn't be normalized\n\t\t\t\t\treturn started ? native_fetch(normalized, init) : initial_fetch(requested, init);\n\t\t\t\t},\n\t\t\t\tstatus: status ?? null,\n\t\t\t\terror: error ?? null\n\t\t\t};\n\n\t\t\tif (import.meta.env.DEV) {\n\t\t\t\t// TODO remove this for 1.0\n\t\t\t\tObject.defineProperty(load_input, 'page', {\n\t\t\t\t\tget: () => {\n\t\t\t\t\t\tthrow new Error('`page` in `load` functions has been replaced by `url` and `params`');\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tif (import.meta.env.DEV) {\n\t\t\t\ttry {\n\t\t\t\t\tlock_fetch();\n\t\t\t\t\tnode.loaded = normalize(await module.load.call(null, load_input));\n\t\t\t\t} finally {\n\t\t\t\t\tunlock_fetch();\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tnode.loaded = normalize(await module.load.call(null, load_input));\n\t\t\t}\n\n\t\t\tif (node.loaded.stuff) node.stuff = node.loaded.stuff;\n\t\t\tif (node.loaded.dependencies) {\n\t\t\t\tnode.loaded.dependencies.forEach(add_dependency);\n\t\t\t}\n\t\t} else if (props) {\n\t\t\tnode.loaded = normalize({ props });\n\t\t}\n\n\t\treturn node;\n\t}\n\n\t/**\n\t * @param {import('./types').NavigationIntent} intent\n\t * @param {boolean} no_cache\n\t */\n\tasync function load_route({ id, url, params, route }, no_cache) {\n\t\tif (load_cache.id === id && load_cache.promise) {\n\t\t\treturn load_cache.promise;\n\t\t}\n\n\t\tif (!no_cache) {\n\t\t\tconst cached = cache.get(id);\n\t\t\tif (cached) return cached;\n\t\t}\n\n\t\tconst { a, b, has_shadow } = route;\n\n\t\tconst changed = current.url && {\n\t\t\turl: id !== current.url.pathname + current.url.search,\n\t\t\tparams: Object.keys(params).filter((key) => current.params[key] !== params[key]),\n\t\t\tsession: session_id !== current.session_id\n\t\t};\n\n\t\t/** @type {Array<import('./types').BranchNode | undefined>} */\n\t\tlet branch = [];\n\n\t\t/** @type {Record<string, any>} */\n\t\tlet stuff = root_stuff;\n\t\tlet stuff_changed = false;\n\n\t\t/** @type {number} */\n\t\tlet status = 200;\n\n\t\t/** @type {Error | null} */\n\t\tlet error = null;\n\n\t\t// preload modules to avoid waterfall, but handle rejections\n\t\t// so they don't get reported to Sentry et al (we don't need\n\t\t// to act on the failures at this point)\n\t\ta.forEach((loader) => loader().catch(() => {}));\n\n\t\tload: for (let i = 0; i < a.length; i += 1) {\n\t\t\t/** @type {import('./types').BranchNode | undefined} */\n\t\t\tlet node;\n\n\t\t\ttry {\n\t\t\t\tif (!a[i]) continue;\n\n\t\t\t\tconst module = await a[i]();\n\t\t\t\tconst previous = current.branch[i];\n\n\t\t\t\tconst changed_since_last_render =\n\t\t\t\t\t!previous ||\n\t\t\t\t\tmodule !== previous.module ||\n\t\t\t\t\t(changed.url && previous.uses.url) ||\n\t\t\t\t\tchanged.params.some((param) => previous.uses.params.has(param)) ||\n\t\t\t\t\t(changed.session && previous.uses.session) ||\n\t\t\t\t\tArray.from(previous.uses.dependencies).some((dep) => invalidated.some((fn) => fn(dep))) ||\n\t\t\t\t\t(stuff_changed && previous.uses.stuff);\n\n\t\t\t\tif (changed_since_last_render) {\n\t\t\t\t\t/** @type {Record<string, any>} */\n\t\t\t\t\tlet props = {};\n\n\t\t\t\t\tconst is_shadow_page = has_shadow && i === a.length - 1;\n\n\t\t\t\t\tif (is_shadow_page) {\n\t\t\t\t\t\tconst res = await native_fetch(\n\t\t\t\t\t\t\t`${url.pathname}${url.pathname.endsWith('/') ? '' : '/'}__data.json${url.search}`,\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\theaders: {\n\t\t\t\t\t\t\t\t\t'x-sveltekit-load': 'true'\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tif (res.ok) {\n\t\t\t\t\t\t\tconst redirect = res.headers.get('x-sveltekit-location');\n\n\t\t\t\t\t\t\tif (redirect) {\n\t\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t\tredirect,\n\t\t\t\t\t\t\t\t\tprops: {},\n\t\t\t\t\t\t\t\t\tstate: current\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tprops = res.status === 204 ? {} : await res.json();\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tstatus = res.status;\n\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\terror = await res.json();\n\t\t\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\t\t\terror = new Error('Failed to load data');\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!error) {\n\t\t\t\t\t\tnode = await load_node({\n\t\t\t\t\t\t\tmodule,\n\t\t\t\t\t\t\turl,\n\t\t\t\t\t\t\tparams,\n\t\t\t\t\t\t\tprops,\n\t\t\t\t\t\t\tstuff,\n\t\t\t\t\t\t\trouteId: route.id\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\n\t\t\t\t\tif (node) {\n\t\t\t\t\t\tif (is_shadow_page) {\n\t\t\t\t\t\t\tnode.uses.url = true;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (node.loaded) {\n\t\t\t\t\t\t\tif (node.loaded.error) {\n\t\t\t\t\t\t\t\tstatus = node.loaded.status ?? 500;\n\t\t\t\t\t\t\t\terror = node.loaded.error;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (node.loaded.redirect) {\n\t\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t\tredirect: node.loaded.redirect,\n\t\t\t\t\t\t\t\t\tprops: {},\n\t\t\t\t\t\t\t\t\tstate: current\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (node.loaded.stuff) {\n\t\t\t\t\t\t\t\tstuff_changed = true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tnode = previous;\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\tstatus = 500;\n\t\t\t\terror = coalesce_to_error(e);\n\t\t\t}\n\n\t\t\tif (error) {\n\t\t\t\twhile (i--) {\n\t\t\t\t\tif (b[i]) {\n\t\t\t\t\t\tlet error_loaded;\n\n\t\t\t\t\t\t/** @type {import('./types').BranchNode | undefined} */\n\t\t\t\t\t\tlet node_loaded;\n\t\t\t\t\t\tlet j = i;\n\t\t\t\t\t\twhile (!(node_loaded = branch[j])) {\n\t\t\t\t\t\t\tj -= 1;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\terror_loaded = await load_node({\n\t\t\t\t\t\t\t\tstatus,\n\t\t\t\t\t\t\t\terror,\n\t\t\t\t\t\t\t\tmodule: await b[i](),\n\t\t\t\t\t\t\t\turl,\n\t\t\t\t\t\t\t\tparams,\n\t\t\t\t\t\t\t\tstuff: node_loaded.stuff,\n\t\t\t\t\t\t\t\trouteId: route.id\n\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\tif (error_loaded?.loaded?.error) {\n\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (error_loaded?.loaded?.stuff) {\n\t\t\t\t\t\t\t\tstuff = {\n\t\t\t\t\t\t\t\t\t...stuff,\n\t\t\t\t\t\t\t\t\t...error_loaded.loaded.stuff\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tbranch = branch.slice(0, j + 1).concat(error_loaded);\n\t\t\t\t\t\t\tbreak load;\n\t\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn await load_root_error_page({\n\t\t\t\t\tstatus,\n\t\t\t\t\terror,\n\t\t\t\t\turl,\n\t\t\t\t\trouteId: route.id\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tif (node?.loaded?.stuff) {\n\t\t\t\t\tstuff = {\n\t\t\t\t\t\t...stuff,\n\t\t\t\t\t\t...node.loaded.stuff\n\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t\tbranch.push(node);\n\t\t\t}\n\t\t}\n\n\t\treturn await get_navigation_result_from_branch({\n\t\t\turl,\n\t\t\tparams,\n\t\t\tstuff,\n\t\t\tbranch,\n\t\t\tstatus,\n\t\t\terror,\n\t\t\trouteId: route.id\n\t\t});\n\t}\n\n\t/**\n\t * @param {{\n\t *   status: number;\n\t *   error: Error;\n\t *   url: URL;\n\t *   routeId: string | null\n\t * }} opts\n\t */\n\tasync function load_root_error_page({ status, error, url, routeId }) {\n\t\t/** @type {Record<string, string>} */\n\t\tconst params = {}; // error page does not have params\n\n\t\tconst root_layout = await load_node({\n\t\t\tmodule: await default_layout,\n\t\t\turl,\n\t\t\tparams,\n\t\t\tstuff: {},\n\t\t\trouteId\n\t\t});\n\n\t\tconst root_error = await load_node({\n\t\t\tstatus,\n\t\t\terror,\n\t\t\tmodule: await default_error,\n\t\t\turl,\n\t\t\tparams,\n\t\t\tstuff: (root_layout && root_layout.loaded && root_layout.loaded.stuff) || {},\n\t\t\trouteId\n\t\t});\n\n\t\treturn await get_navigation_result_from_branch({\n\t\t\turl,\n\t\t\tparams,\n\t\t\tstuff: {\n\t\t\t\t...root_layout?.loaded?.stuff,\n\t\t\t\t...root_error?.loaded?.stuff\n\t\t\t},\n\t\t\tbranch: [root_layout, root_error],\n\t\t\tstatus,\n\t\t\terror,\n\t\t\trouteId\n\t\t});\n\t}\n\n\t/** @param {URL} url */\n\tfunction get_navigation_intent(url) {\n\t\tif (url.origin !== location.origin || !url.pathname.startsWith(base)) return;\n\n\t\tconst path = decodeURI(url.pathname.slice(base.length) || '/');\n\n\t\tfor (const route of routes) {\n\t\t\tconst params = route.exec(path);\n\n\t\t\tif (params) {\n\t\t\t\tconst normalized = new URL(\n\t\t\t\t\turl.origin + normalize_path(url.pathname, trailing_slash) + url.search + url.hash\n\t\t\t\t);\n\t\t\t\tconst id = normalized.pathname + normalized.search;\n\t\t\t\t/** @type {import('./types').NavigationIntent} */\n\t\t\t\tconst intent = { id, route, params: decode_params(params), url: normalized };\n\t\t\t\treturn intent;\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @param {{\n\t *   url: URL;\n\t *   scroll: { x: number, y: number } | null;\n\t *   keepfocus: boolean;\n\t *   redirect_chain: string[];\n\t *   details: {\n\t *     replaceState: boolean;\n\t *     state: any;\n\t *   } | null;\n\t *   accepted: () => void;\n\t *   blocked: () => void;\n\t * }} opts\n\t */\n\tasync function navigate({ url, scroll, keepfocus, redirect_chain, details, accepted, blocked }) {\n\t\tconst from = current.url;\n\t\tlet should_block = false;\n\n\t\tconst navigation = {\n\t\t\tfrom,\n\t\t\tto: url,\n\t\t\tcancel: () => (should_block = true)\n\t\t};\n\n\t\tcallbacks.before_navigate.forEach((fn) => fn(navigation));\n\n\t\tif (should_block) {\n\t\t\tblocked();\n\t\t\treturn;\n\t\t}\n\n\t\tupdate_scroll_positions(current_history_index);\n\n\t\taccepted();\n\n\t\tif (started) {\n\t\t\tstores.navigating.set({\n\t\t\t\tfrom: current.url,\n\t\t\t\tto: url\n\t\t\t});\n\t\t}\n\n\t\tawait update(\n\t\t\turl,\n\t\t\tredirect_chain,\n\t\t\tfalse,\n\t\t\t{\n\t\t\t\tscroll,\n\t\t\t\tkeepfocus,\n\t\t\t\tdetails\n\t\t\t},\n\t\t\t() => {\n\t\t\t\tconst navigation = { from, to: url };\n\t\t\t\tcallbacks.after_navigate.forEach((fn) => fn(navigation));\n\n\t\t\t\tstores.navigating.set(null);\n\t\t\t}\n\t\t);\n\t}\n\n\t/**\n\t * Loads `href` the old-fashioned way, with a full page reload.\n\t * Returns a `Promise` that never resolves (to prevent any\n\t * subsequent work, e.g. history manipulation, from happening)\n\t * @param {URL} url\n\t */\n\tfunction native_navigation(url) {\n\t\tlocation.href = url.href;\n\t\treturn new Promise(() => {});\n\t}\n\n\tif (import.meta.hot) {\n\t\timport.meta.hot.on('vite:beforeUpdate', () => {\n\t\t\tif (current.error) location.reload();\n\t\t});\n\t}\n\n\treturn {\n\t\tafter_navigate: (fn) => {\n\t\t\tonMount(() => {\n\t\t\t\tcallbacks.after_navigate.push(fn);\n\n\t\t\t\treturn () => {\n\t\t\t\t\tconst i = callbacks.after_navigate.indexOf(fn);\n\t\t\t\t\tcallbacks.after_navigate.splice(i, 1);\n\t\t\t\t};\n\t\t\t});\n\t\t},\n\n\t\tbefore_navigate: (fn) => {\n\t\t\tonMount(() => {\n\t\t\t\tcallbacks.before_navigate.push(fn);\n\n\t\t\t\treturn () => {\n\t\t\t\t\tconst i = callbacks.before_navigate.indexOf(fn);\n\t\t\t\t\tcallbacks.before_navigate.splice(i, 1);\n\t\t\t\t};\n\t\t\t});\n\t\t},\n\n\t\tdisable_scroll_handling: () => {\n\t\t\tif (import.meta.env.DEV && started && !updating) {\n\t\t\t\tthrow new Error('Can only disable scroll handling during navigation');\n\t\t\t}\n\n\t\t\tif (updating || !started) {\n\t\t\t\tautoscroll = false;\n\t\t\t}\n\t\t},\n\n\t\tgoto: (href, opts = {}) => goto(href, opts, []),\n\n\t\tinvalidate: (resource) => {\n\t\t\tif (typeof resource === 'function') {\n\t\t\t\tinvalidated.push(resource);\n\t\t\t} else {\n\t\t\t\tconst { href } = new URL(resource, location.href);\n\t\t\t\tinvalidated.push((dep) => dep === href);\n\t\t\t}\n\n\t\t\tif (!invalidating) {\n\t\t\t\tinvalidating = Promise.resolve().then(async () => {\n\t\t\t\t\tawait update(new URL(location.href), [], true);\n\n\t\t\t\t\tinvalidating = null;\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn invalidating;\n\t\t},\n\n\t\tprefetch: async (href) => {\n\t\t\tconst url = new URL(href, get_base_uri(document));\n\t\t\tawait prefetch(url);\n\t\t},\n\n\t\t// TODO rethink this API\n\t\tprefetch_routes: async (pathnames) => {\n\t\t\tconst matching = pathnames\n\t\t\t\t? routes.filter((route) => pathnames.some((pathname) => route.exec(pathname)))\n\t\t\t\t: routes;\n\n\t\t\tconst promises = matching.map((r) => Promise.all(r.a.map((load) => load())));\n\n\t\t\tawait Promise.all(promises);\n\t\t},\n\n\t\t_start_router: () => {\n\t\t\thistory.scrollRestoration = 'manual';\n\n\t\t\t// Adopted from Nuxt.js\n\t\t\t// Reset scrollRestoration to auto when leaving page, allowing page reload\n\t\t\t// and back-navigation from other pages to use the browser to restore the\n\t\t\t// scrolling position.\n\t\t\taddEventListener('beforeunload', (e) => {\n\t\t\t\tlet should_block = false;\n\n\t\t\t\tconst navigation = {\n\t\t\t\t\tfrom: current.url,\n\t\t\t\t\tto: null,\n\t\t\t\t\tcancel: () => (should_block = true)\n\t\t\t\t};\n\n\t\t\t\tcallbacks.before_navigate.forEach((fn) => fn(navigation));\n\n\t\t\t\tif (should_block) {\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\te.returnValue = '';\n\t\t\t\t} else {\n\t\t\t\t\thistory.scrollRestoration = 'auto';\n\t\t\t\t}\n\t\t\t});\n\n\t\t\taddEventListener('visibilitychange', () => {\n\t\t\t\tif (document.visibilityState === 'hidden') {\n\t\t\t\t\tupdate_scroll_positions(current_history_index);\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tsessionStorage[SCROLL_KEY] = JSON.stringify(scroll_positions);\n\t\t\t\t\t} catch {\n\t\t\t\t\t\t// do nothing\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t/** @param {Event} event */\n\t\t\tconst trigger_prefetch = (event) => {\n\t\t\t\tconst a = find_anchor(event);\n\t\t\t\tif (a && a.href && a.hasAttribute('sveltekit:prefetch')) {\n\t\t\t\t\tprefetch(get_href(a));\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t/** @type {NodeJS.Timeout} */\n\t\t\tlet mousemove_timeout;\n\n\t\t\t/** @param {MouseEvent|TouchEvent} event */\n\t\t\tconst handle_mousemove = (event) => {\n\t\t\t\tclearTimeout(mousemove_timeout);\n\t\t\t\tmousemove_timeout = setTimeout(() => {\n\t\t\t\t\t// event.composedPath(), which is used in find_anchor, will be empty if the event is read in a timeout\n\t\t\t\t\t// add a layer of indirection to address that\n\t\t\t\t\tevent.target?.dispatchEvent(\n\t\t\t\t\t\tnew CustomEvent('sveltekit:trigger_prefetch', { bubbles: true })\n\t\t\t\t\t);\n\t\t\t\t}, 20);\n\t\t\t};\n\n\t\t\taddEventListener('touchstart', trigger_prefetch);\n\t\t\taddEventListener('mousemove', handle_mousemove);\n\t\t\taddEventListener('sveltekit:trigger_prefetch', trigger_prefetch);\n\n\t\t\t/** @param {MouseEvent} event */\n\t\t\taddEventListener('click', (event) => {\n\t\t\t\tif (!router_enabled) return;\n\n\t\t\t\t// Adapted from https://github.com/visionmedia/page.js\n\t\t\t\t// MIT license https://github.com/visionmedia/page.js#license\n\t\t\t\tif (event.button || event.which !== 1) return;\n\t\t\t\tif (event.metaKey || event.ctrlKey || event.shiftKey || event.altKey) return;\n\t\t\t\tif (event.defaultPrevented) return;\n\n\t\t\t\tconst a = find_anchor(event);\n\t\t\t\tif (!a) return;\n\n\t\t\t\tif (!a.href) return;\n\n\t\t\t\tconst is_svg_a_element = a instanceof SVGAElement;\n\t\t\t\tconst url = get_href(a);\n\n\t\t\t\t// Ignore non-HTTP URL protocols (e.g. `mailto:`, `tel:`, `myapp:`, etc.)\n\t\t\t\t// MEMO: Without this condition, firefox will open mailer twice.\n\t\t\t\t// See:\n\t\t\t\t// - https://github.com/sveltejs/kit/issues/4045\n\t\t\t\t// - https://github.com/sveltejs/kit/issues/5725\n\t\t\t\tif (!is_svg_a_element && !(url.protocol === 'https:' || url.protocol === 'http:')) return;\n\n\t\t\t\t// Ignore if tag has\n\t\t\t\t// 1. 'download' attribute\n\t\t\t\t// 2. 'rel' attribute includes external\n\t\t\t\tconst rel = (a.getAttribute('rel') || '').split(/\\s+/);\n\n\t\t\t\tif (\n\t\t\t\t\ta.hasAttribute('download') ||\n\t\t\t\t\trel.includes('external') ||\n\t\t\t\t\ta.hasAttribute('sveltekit:reload')\n\t\t\t\t) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// Ignore if <a> has a target\n\t\t\t\tif (is_svg_a_element ? a.target.baseVal : a.target) return;\n\n\t\t\t\t// Check if new url only differs by hash and use the browser default behavior in that case\n\t\t\t\t// This will ensure the `hashchange` event is fired\n\t\t\t\t// Removing the hash does a full page navigation in the browser, so make sure a hash is present\n\t\t\t\tconst [base, hash] = url.href.split('#');\n\t\t\t\tif (hash !== undefined && base === location.href.split('#')[0]) {\n\t\t\t\t\t// set this flag to distinguish between navigations triggered by\n\t\t\t\t\t// clicking a hash link and those triggered by popstate\n\t\t\t\t\thash_navigating = true;\n\n\t\t\t\t\tupdate_scroll_positions(current_history_index);\n\n\t\t\t\t\tstores.page.set({ ...page, url });\n\t\t\t\t\tstores.page.notify();\n\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tnavigate({\n\t\t\t\t\turl,\n\t\t\t\t\tscroll: a.hasAttribute('sveltekit:noscroll') ? scroll_state() : null,\n\t\t\t\t\tkeepfocus: false,\n\t\t\t\t\tredirect_chain: [],\n\t\t\t\t\tdetails: {\n\t\t\t\t\t\tstate: {},\n\t\t\t\t\t\treplaceState: url.href === location.href\n\t\t\t\t\t},\n\t\t\t\t\taccepted: () => event.preventDefault(),\n\t\t\t\t\tblocked: () => event.preventDefault()\n\t\t\t\t});\n\t\t\t});\n\n\t\t\taddEventListener('popstate', (event) => {\n\t\t\t\tif (event.state && router_enabled) {\n\t\t\t\t\t// if a popstate-driven navigation is cancelled, we need to counteract it\n\t\t\t\t\t// with history.go, which means we end up back here, hence this check\n\t\t\t\t\tif (event.state[INDEX_KEY] === current_history_index) return;\n\n\t\t\t\t\tnavigate({\n\t\t\t\t\t\turl: new URL(location.href),\n\t\t\t\t\t\tscroll: scroll_positions[event.state[INDEX_KEY]],\n\t\t\t\t\t\tkeepfocus: false,\n\t\t\t\t\t\tredirect_chain: [],\n\t\t\t\t\t\tdetails: null,\n\t\t\t\t\t\taccepted: () => {\n\t\t\t\t\t\t\tcurrent_history_index = event.state[INDEX_KEY];\n\t\t\t\t\t\t},\n\t\t\t\t\t\tblocked: () => {\n\t\t\t\t\t\t\tconst delta = current_history_index - event.state[INDEX_KEY];\n\t\t\t\t\t\t\thistory.go(delta);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\n\t\t\taddEventListener('hashchange', () => {\n\t\t\t\t// if the hashchange happened as a result of clicking on a link,\n\t\t\t\t// we need to update history, otherwise we have to leave it alone\n\t\t\t\tif (hash_navigating) {\n\t\t\t\t\thash_navigating = false;\n\t\t\t\t\thistory.replaceState(\n\t\t\t\t\t\t{ ...history.state, [INDEX_KEY]: ++current_history_index },\n\t\t\t\t\t\t'',\n\t\t\t\t\t\tlocation.href\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// fix link[rel=icon], because browsers will occasionally try to load relative\n\t\t\t// URLs after a pushState/replaceState, resulting in a 404 — see\n\t\t\t// https://github.com/sveltejs/kit/issues/3748#issuecomment-1125980897\n\t\t\tfor (const link of document.querySelectorAll('link')) {\n\t\t\t\tif (link.rel === 'icon') link.href = link.href;\n\t\t\t}\n\n\t\t\taddEventListener('pageshow', (event) => {\n\t\t\t\t// If the user navigates to another site and then uses the back button and\n\t\t\t\t// bfcache hits, we need to set navigating to null, the site doesn't know\n\t\t\t\t// the navigation away from it was successful.\n\t\t\t\t// Info about bfcache here: https://web.dev/bfcache\n\t\t\t\tif (event.persisted) {\n\t\t\t\t\tstores.navigating.set(null);\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\n\t\t_hydrate: async ({ status, error, nodes, params, routeId }) => {\n\t\t\tconst url = new URL(location.href);\n\n\t\t\t/** @type {Array<import('./types').BranchNode | undefined>} */\n\t\t\tconst branch = [];\n\n\t\t\t/** @type {Record<string, any>} */\n\t\t\tlet stuff = {};\n\n\t\t\t/** @type {import('./types').NavigationResult | undefined} */\n\t\t\tlet result;\n\n\t\t\tlet error_args;\n\n\t\t\ttry {\n\t\t\t\tfor (let i = 0; i < nodes.length; i += 1) {\n\t\t\t\t\tconst is_leaf = i === nodes.length - 1;\n\n\t\t\t\t\tlet props;\n\n\t\t\t\t\tif (is_leaf) {\n\t\t\t\t\t\tconst serialized = document.querySelector('script[sveltekit\\\\:data-type=\"props\"]');\n\t\t\t\t\t\tif (serialized) {\n\t\t\t\t\t\t\tprops = JSON.parse(/** @type {string} */ (serialized.textContent));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tconst node = await load_node({\n\t\t\t\t\t\tmodule: await components[nodes[i]](),\n\t\t\t\t\t\turl,\n\t\t\t\t\t\tparams,\n\t\t\t\t\t\tstuff,\n\t\t\t\t\t\tstatus: is_leaf ? status : undefined,\n\t\t\t\t\t\terror: is_leaf ? error : undefined,\n\t\t\t\t\t\tprops,\n\t\t\t\t\t\trouteId\n\t\t\t\t\t});\n\n\t\t\t\t\tif (props) {\n\t\t\t\t\t\tnode.uses.dependencies.add(url.href);\n\t\t\t\t\t\tnode.uses.url = true;\n\t\t\t\t\t}\n\n\t\t\t\t\tbranch.push(node);\n\n\t\t\t\t\tif (node && node.loaded) {\n\t\t\t\t\t\tif (node.loaded.error) {\n\t\t\t\t\t\t\tif (error) throw node.loaded.error;\n\t\t\t\t\t\t\terror_args = {\n\t\t\t\t\t\t\t\tstatus: node.loaded.status ?? 500,\n\t\t\t\t\t\t\t\terror: node.loaded.error,\n\t\t\t\t\t\t\t\turl,\n\t\t\t\t\t\t\t\trouteId\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t} else if (node.loaded.stuff) {\n\t\t\t\t\t\t\tstuff = {\n\t\t\t\t\t\t\t\t...stuff,\n\t\t\t\t\t\t\t\t...node.loaded.stuff\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tresult = error_args\n\t\t\t\t\t? await load_root_error_page(error_args)\n\t\t\t\t\t: await get_navigation_result_from_branch({\n\t\t\t\t\t\t\turl,\n\t\t\t\t\t\t\tparams,\n\t\t\t\t\t\t\tstuff,\n\t\t\t\t\t\t\tbranch,\n\t\t\t\t\t\t\tstatus,\n\t\t\t\t\t\t\terror,\n\t\t\t\t\t\t\trouteId\n\t\t\t\t\t  });\n\t\t\t} catch (e) {\n\t\t\t\tif (error) throw e;\n\n\t\t\t\tresult = await load_root_error_page({\n\t\t\t\t\tstatus: 500,\n\t\t\t\t\terror: coalesce_to_error(e),\n\t\t\t\t\turl,\n\t\t\t\t\trouteId\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tif (result.redirect) {\n\t\t\t\t// this is a real edge case — `load` would need to return\n\t\t\t\t// a redirect but only in the browser\n\t\t\t\tawait native_navigation(new URL(result.redirect, location.href));\n\t\t\t}\n\n\t\t\tinitialize(result);\n\t\t}\n\t};\n}\n\n/**\n * @param {{\n *   paths: {\n *     assets: string;\n *     base: string;\n *   },\n *   target: Element;\n *   session: any;\n *   route: boolean;\n *   spa: boolean;\n *   trailing_slash: import('types').TrailingSlash;\n *   hydrate: {\n *     status: number;\n *     error: Error;\n *     nodes: number[];\n *     params: Record<string, string>;\n *     routeId: string | null;\n *   };\n * }} opts\n */\nasync function start({ paths, target, session, route, spa, trailing_slash, hydrate }) {\n\tconst client = create_client({\n\t\ttarget,\n\t\tsession,\n\t\tbase: paths.base,\n\t\ttrailing_slash\n\t});\n\n\tinit({ client });\n\tset_paths(paths);\n\n\tif (hydrate) {\n\t\tawait client._hydrate(hydrate);\n\t}\n\n\tif (route) {\n\t\tif (spa) client.goto(location.href, { replaceState: true });\n\t\tclient._start_router();\n\t}\n\n\tdispatchEvent(new CustomEvent('sveltekit:start'));\n}\n\nexport { start };\n"],"file":"_app/immutable/start-9e672a3a.js"}